{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"8:52:21 AM"}
{"meta":"","level":"info","message":"","timestamp":"8:52:21 AM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"8:52:21 AM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"8:52:21 AM"}
{"meta":"","level":"info","message":"","timestamp":"8:52:21 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"8:52:21 AM"}
{"meta":"","level":"info","message":"","timestamp":"8:52:21 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"8:58:42 AM"}
{"meta":"","level":"info","message":"","timestamp":"8:58:42 AM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"8:58:42 AM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"8:58:42 AM"}
{"meta":"","level":"info","message":"","timestamp":"8:58:42 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"8:58:42 AM"}
{"meta":"","level":"info","message":"","timestamp":"8:58:42 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"9:01:51 AM"}
{"meta":"","level":"info","message":"","timestamp":"9:01:51 AM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"9:01:51 AM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"9:01:51 AM"}
{"meta":"","level":"info","message":"","timestamp":"9:01:51 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"9:01:51 AM"}
{"meta":"","level":"info","message":"","timestamp":"9:01:51 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"9:03:41 AM"}
{"meta":"","level":"info","message":"","timestamp":"9:03:41 AM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"9:03:41 AM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"9:03:41 AM"}
{"meta":"","level":"info","message":"","timestamp":"9:03:41 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"9:03:41 AM"}
{"meta":"","level":"info","message":"","timestamp":"9:03:41 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"9:19:19 AM"}
{"meta":"","level":"info","message":"","timestamp":"9:19:19 AM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"9:19:19 AM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"9:19:19 AM"}
{"meta":"","level":"info","message":"","timestamp":"9:19:19 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"9:19:19 AM"}
{"meta":"","level":"info","message":"","timestamp":"9:19:19 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"9:27:13 AM"}
{"meta":"","level":"info","message":"","timestamp":"9:27:13 AM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"9:27:13 AM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"9:27:13 AM"}
{"meta":"","level":"info","message":"","timestamp":"9:27:13 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"9:27:13 AM"}
{"meta":"","level":"info","message":"","timestamp":"9:27:13 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"9:28:54 AM"}
{"meta":"","level":"info","message":"","timestamp":"9:28:54 AM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"9:28:54 AM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"9:28:54 AM"}
{"meta":"","level":"info","message":"","timestamp":"9:28:54 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"9:28:54 AM"}
{"meta":"","level":"info","message":"","timestamp":"9:28:54 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"9:30:32 AM"}
{"meta":"","level":"info","message":"","timestamp":"9:30:32 AM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"9:30:32 AM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"9:30:32 AM"}
{"meta":"","level":"info","message":"","timestamp":"9:30:32 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"9:30:32 AM"}
{"meta":"","level":"info","message":"","timestamp":"9:30:32 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"9:39:19 AM"}
{"meta":"","level":"info","message":"","timestamp":"9:39:19 AM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"9:39:19 AM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"9:39:19 AM"}
{"meta":"","level":"info","message":"","timestamp":"9:39:19 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"9:39:19 AM"}
{"meta":"","level":"info","message":"","timestamp":"9:39:19 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"9:41:33 AM"}
{"meta":"","level":"info","message":"","timestamp":"9:41:33 AM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"9:41:33 AM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"9:41:33 AM"}
{"meta":"","level":"info","message":"","timestamp":"9:41:33 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"9:41:33 AM"}
{"meta":"","level":"info","message":"","timestamp":"9:41:33 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"10:00:24 AM"}
{"meta":"","level":"info","message":"","timestamp":"10:00:24 AM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"10:00:24 AM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"10:00:24 AM"}
{"meta":"","level":"info","message":"","timestamp":"10:00:24 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"10:00:24 AM"}
{"meta":"","level":"info","message":"","timestamp":"10:00:24 AM"}
{"level":"info","message":"digit_endorsment starts","timestamp":"10:06:03 AM"}
{"level":"info","message":"IncomingMessage {\n  _readableState: \n   ReadableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     buffer: BufferList { head: null, tail: null, length: 0 },\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: true,\n     ended: true,\n     endEmitted: true,\n     reading: false,\n     sync: false,\n     needReadable: false,\n     emittedReadable: false,\n     readableListening: false,\n     resumeScheduled: false,\n     defaultEncoding: 'utf8',\n     ranOut: false,\n     awaitDrain: 0,\n     readingMore: false,\n     decoder: null,\n     encoding: null },\n  readable: false,\n  domain: null,\n  _events: {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 354,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 389387,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 53160 } },\n  connection: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 354,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 389387,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 53160 } },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  headers: \n   { 'content-type': 'application/json',\n     'user-agent': 'PostmanRuntime/7.26.8',\n     accept: '*/*',\n     'cache-control': 'no-cache',\n     'postman-token': '94090ec7-7b3c-4ba1-a12a-ddb40107fa90',\n     host: 'localhost:3000',\n     'accept-encoding': 'gzip, deflate, br',\n     connection: 'keep-alive',\n     'content-length': '59' },\n  rawHeaders: \n   [ 'Content-Type',\n     'application/json',\n     'User-Agent',\n     'PostmanRuntime/7.26.8',\n     'Accept',\n     '*/*',\n     'Cache-Control',\n     'no-cache',\n     'Postman-Token',\n     '94090ec7-7b3c-4ba1-a12a-ddb40107fa90',\n     'Host',\n     'localhost:3000',\n     'Accept-Encoding',\n     'gzip, deflate, br',\n     'Connection',\n     'keep-alive',\n     'Content-Length',\n     '59' ],\n  trailers: {},\n  rawTrailers: [],\n  upgrade: false,\n  url: '/digit_endorsment',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 354,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 389387,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 53160 } },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '',\n  originalUrl: '/digit_endorsment',\n  _parsedUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  params: {},\n  query: {},\n  res: \n   ServerResponse {\n     domain: null,\n     _events: { finish: [Object], end: [Function: onevent] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     output: [],\n     outputEncodings: [],\n     outputCallbacks: [],\n     outputSize: 0,\n     writable: true,\n     _last: false,\n     upgrading: false,\n     chunkedEncoding: false,\n     shouldKeepAlive: true,\n     useChunkedEncodingByDefault: true,\n     sendDate: true,\n     _removedHeader: {},\n     _contentLength: null,\n     _hasBody: true,\n     _trailer: '',\n     finished: false,\n     _headerSent: false,\n     socket: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 389387,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     connection: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 389387,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     _header: null,\n     _headers: \n      { 'x-powered-by': 'Express',\n        'access-control-allow-credentials': 'true',\n        'access-control-allow-headers': 'X-Requested-With, Content-Type',\n        'access-control-allow-origin': '*' },\n     _headerNames: \n      { 'x-powered-by': 'X-Powered-By',\n        'access-control-allow-credentials': 'Access-Control-Allow-Credentials',\n        'access-control-allow-headers': 'Access-Control-Allow-Headers',\n        'access-control-allow-origin': 'Access-Control-Allow-Origin' },\n     _onPendingData: [Function: updateOutgoingData],\n     req: [Circular],\n     locals: {},\n     writeHead: [Function: writeHead],\n     end: [Function: end],\n     _startAt: undefined,\n     _startTime: undefined,\n     __onFinished: { [Function: listener] queue: [Object] } },\n  _parsedOriginalUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  sessionStore: \n   MemoryStore {\n     domain: null,\n     _events: \n      { disconnect: [Function: ondisconnect],\n        connect: [Function: onconnect] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     sessions: {},\n     generate: [Function] },\n  sessionID: 'rKchdT4YlScBVgaEQ8TJoF4teXX-ehtV',\n  session: \n   Session {\n     cookie: \n      { path: '/',\n        _expires: 2022-09-07T04:45:59.508Z,\n        originalMaxAge: 600000,\n        httpOnly: true } },\n  body: { name: 'Ravi', age: 16, gender: 'M' },\n  _body: true,\n  length: undefined,\n  read: [Function],\n  route: \n   Route {\n     path: '/digit_endorsment',\n     stack: [ [Object] ],\n     methods: { post: true } },\n  _startAt: [ 686792, 6851800 ],\n  _startTime: 2022-09-07T04:35:59.574Z,\n  _remoteAddress: '::1',\n  secret: undefined,\n  cookies: {},\n  signedCookies: {} }","timestamp":"10:06:03 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"10:08:06 AM"}
{"meta":"","level":"info","message":"","timestamp":"10:08:06 AM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"10:08:06 AM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"10:08:06 AM"}
{"meta":"","level":"info","message":"","timestamp":"10:08:06 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"10:08:06 AM"}
{"meta":"","level":"info","message":"","timestamp":"10:08:06 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"10:19:36 AM"}
{"meta":"","level":"info","message":"","timestamp":"10:19:36 AM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"10:19:36 AM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"10:19:36 AM"}
{"meta":"","level":"info","message":"","timestamp":"10:19:36 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"10:19:36 AM"}
{"meta":"","level":"info","message":"","timestamp":"10:19:36 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"10:35:56 AM"}
{"meta":"","level":"info","message":"","timestamp":"10:35:56 AM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"10:35:56 AM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"10:35:56 AM"}
{"meta":"","level":"info","message":"","timestamp":"10:35:56 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"10:35:56 AM"}
{"meta":"","level":"info","message":"","timestamp":"10:35:56 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"10:39:54 AM"}
{"meta":"","level":"info","message":"","timestamp":"10:39:54 AM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"10:39:54 AM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"10:39:54 AM"}
{"meta":"","level":"info","message":"","timestamp":"10:39:54 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"10:39:54 AM"}
{"meta":"","level":"info","message":"","timestamp":"10:39:54 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"10:43:55 AM"}
{"meta":"","level":"info","message":"","timestamp":"10:43:55 AM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"10:43:55 AM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"10:43:55 AM"}
{"meta":"","level":"info","message":"","timestamp":"10:43:55 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"10:43:55 AM"}
{"meta":"","level":"info","message":"","timestamp":"10:43:55 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"10:48:59 AM"}
{"meta":"","level":"info","message":"","timestamp":"10:48:59 AM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"10:48:59 AM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"10:48:59 AM"}
{"meta":"","level":"info","message":"","timestamp":"10:48:59 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"10:48:59 AM"}
{"meta":"","level":"info","message":"","timestamp":"10:48:59 AM"}
{"level":"info","message":"postservice1 is called","timestamp":"10:54:56 AM"}
{"level":"info","message":"postservice1 is called","timestamp":"10:55:44 AM"}
{"level":"info","message":"postservice1 is called","timestamp":"10:55:45 AM"}
{"level":"info","message":"postservice1 is called","timestamp":"10:55:46 AM"}
{"level":"info","message":"postservice1 is called","timestamp":"10:55:51 AM"}
{"level":"info","message":"postservice1 is called","timestamp":"10:57:30 AM"}
{"level":"info","message":"postservice1 is called","timestamp":"11:06:01 AM"}
{"level":"info","message":"postservice1 is called","timestamp":"11:06:21 AM"}
{"level":"info","message":"postservice1 is called","timestamp":"11:09:20 AM"}
{"level":"info","message":"postservice1 is called","timestamp":"11:33:38 AM"}
{"level":"info","message":"postservice1 is called","timestamp":"11:48:52 AM"}
{"level":"info","message":"postservice1 is called","timestamp":"11:49:10 AM"}
{"level":"info","message":"postservice1 is called","timestamp":"11:57:24 AM"}
{"level":"info","message":"postservice1 is called","timestamp":"11:59:42 AM"}
{"level":"info","message":"postservice1 is called","timestamp":"12:35:42 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"12:43:11 PM"}
{"meta":"","level":"info","message":"","timestamp":"12:43:11 PM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"12:43:11 PM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"12:43:11 PM"}
{"meta":"","level":"info","message":"","timestamp":"12:43:11 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"12:43:11 PM"}
{"meta":"","level":"info","message":"","timestamp":"12:43:11 PM"}
{"level":"info","message":"postservice1 is called","timestamp":"12:44:16 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"1:03:48 PM"}
{"meta":"","level":"info","message":"","timestamp":"1:03:48 PM"}
{"level":"info","message":"Production Environment is Listening on port 3000","timestamp":"1:03:48 PM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"1:03:48 PM"}
{"meta":"","level":"info","message":"","timestamp":"1:03:48 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"1:03:48 PM"}
{"meta":"","level":"info","message":"","timestamp":"1:03:48 PM"}
{"level":"info","message":"postservice1 is called","timestamp":"1:07:14 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"1:09:12 PM"}
{"meta":"","level":"info","message":"","timestamp":"1:09:12 PM"}
{"level":"info","message":"Production Environment is Listening on port 3000","timestamp":"1:09:12 PM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"1:09:12 PM"}
{"meta":"","level":"info","message":"","timestamp":"1:09:12 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"1:09:12 PM"}
{"meta":"","level":"info","message":"","timestamp":"1:09:12 PM"}
{"level":"info","message":"postservice1 is called","timestamp":"1:10:50 PM"}
{"level":"info","message":"postservice1 is called","timestamp":"1:11:36 PM"}

/* Author: Dipali Revanwar
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

var config = require('config');
var mongoose = require('mongoose');
mongoose.Promise = global.Promise;
var kyc_detail = require('../models/kyc_detail');
var kyc_history = require('../models/kyc_history');
let kyc_webhook_history = require('../models/kyc_webhook_history');
var moment = require('moment');
var crypto = require('crypto');
let jwt = require('jwt-simple');
let secret = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKL';
var fs = require('fs');
var path = require('path');
var appRoot = path.dirname(path.dirname(require.main.filename));
var CryptoJS = require('crypto-js');
var NodeRSA = require("node-rsa");
const uuidv4 = require('uuid/v4');
let uuid = uuidv4();
module.exports.controller = function (app) {
    app.post('/kyc_details/hdfc_fetch_kyc_details', function (req, res) {
        try {
            let ObjRequest = req.body;
            let kyc_fetch_request = "";
            let kyc_fetch_response = "";
            var user_name = null;
            if (ObjRequest['Proposal_Request'].middle_name === undefined || ObjRequest['Proposal_Request'].middle_name === "" || ObjRequest['Proposal_Request'].middle_name === null) {
                user_name = ((ObjRequest['Proposal_Request'].first_name === undefined || ObjRequest['Proposal_Request'].first_name === "" || ObjRequest['Proposal_Request'].first_name === null) ? "" : ObjRequest['Proposal_Request'].first_name) + " " +
                        ((ObjRequest['Proposal_Request'].last_name === undefined || ObjRequest['Proposal_Request'].last_name === "" || ObjRequest['Proposal_Request'].last_name === null) ? "" : ObjRequest['Proposal_Request'].last_name);
            } else {
                user_name = ((ObjRequest['Proposal_Request'].first_name === undefined || ObjRequest['Proposal_Request'].first_name === "" || ObjRequest['Proposal_Request'].first_name === null) ? "" : ObjRequest['Proposal_Request'].first_name) + " " +
                        ((ObjRequest['Proposal_Request'].middle_name === undefined || ObjRequest['Proposal_Request'].middle_name === "" || ObjRequest['Proposal_Request'].middle_name === null) ? "" : ObjRequest['Proposal_Request'].middle_name) + " " +
                        ((ObjRequest['Proposal_Request'].last_name === undefined || ObjRequest['Proposal_Request'].last_name === "" || ObjRequest['Proposal_Request'].last_name === null) ? "" : ObjRequest['Proposal_Request'].last_name);
            }
            let req_txt = {
                "mobile": (ObjRequest.Proposal_Request.mobile === undefined || ObjRequest.Proposal_Request.mobile === "" || ObjRequest.Proposal_Request.mobile === null) ? "" : ObjRequest.Proposal_Request.mobile,
                "name": user_name,
                "kyc_id": "",
                "dob": (ObjRequest.DOB === undefined || ObjRequest.DOB === "" || ObjRequest.DOB === null) ? "" : ObjRequest.DOB,
                "ckyc_number": "",
                "pan": (ObjRequest.PAN === undefined || ObjRequest.PAN === "" || ObjRequest.PAN === null) ? "" : ObjRequest.PAN,
                "aadhaar_uid": (ObjRequest.Aadhar === undefined || ObjRequest.Aadhar === "" || ObjRequest.Aadhar === null) ? "" : (ObjRequest.Aadhar.substr(ObjRequest.Aadhar.length - 4)), //"last 4 digits of aadhar",
                "agent_id": "",
                "gc_cust_id": "",
                "eia_number": "",
                "email_address": "",
                "redirect_url": ""
            };
            kyc_fetch_request = req_txt;
            let api_key = ((config.environment.name === 'Production') ? 'd220114d-8e75-4f' : '8d399be8-0b6f-4a');
            let args = {
                data: JSON.stringify(req_txt),
                headers: {
                    "Content-Type": "application/json",
                    "Accept": "application/json",
                    "token": ""
                }
            };
            let args1 = {
                headers: {
                    "api_key": api_key
                }
            };
            let KYC_Status = "PENDING";
            let kyc_id = 0;
            let token = null;
            var Client = require('node-rest-client').Client;
            var client = new Client();
            let LM_Data = {
                "KYC_Pan_No": "",
                "KYC_Number": "",
                "KYC_FullName": "",
                "KYC_Ref_No": "",
                "KYC_Redirect_URL": "",
                "KYC_Insurer_ID": ObjRequest.Insurer_Id,
                "KYC_PB_CRN": ObjRequest.PB_CRN,
                "KYC_Status": KYC_Status
            };
            let token_url = ((config.environment.name === 'Production') ? 'https://ekyc-prod.hdfcergo.com/e-kyc/tgt/generate-token' : 'https://ekyc-uat.hdfcergo.com/e-kyc/tgt/generate-token');
            client.get(token_url, args1, function (data1, response1) {
                if (data1) {
                    if (data1.hasOwnProperty("success") && data1.success === true) {
                        if (data1.hasOwnProperty("data") && data1.data.hasOwnProperty("token") && data1.data.token !== "" && data1.data.token !== null) {
                            token = data1.data.token;
                            try {
                                if (token) {
                                    args.headers.token = token;
                                    var client1 = new Client();
                                    let kyc_fetch_url = ((config.environment.name === 'Production') ? ('https://ekyc-prod.hdfcergo.com/e-kyc/primary/kyc-verified?pan=') : ('https://ekyc-uat.hdfcergo.com/e-kyc/primary/kyc-verified?pan=')) + ObjRequest.PAN + '&dob=' + ObjRequest.DOB;
                                    client1.get(kyc_fetch_url, args, function (data, response) {
                                        if (data) {
                                            kyc_fetch_response = data; // kyc_insurer_response
                                            if (data.hasOwnProperty("success") && data.success === true && data.hasOwnProperty("data") && data.data.hasOwnProperty("iskycVerified")) {
                                                if (data.data.iskycVerified === 1) {
                                                    kyc_id = (data.data.hasOwnProperty("kyc_id")) ? data.data.kyc_id : "";
                                                    LM_Data.KYC_Status = "FETCH_SUCCESS";
                                                    LM_Data.KYC_Number = kyc_id;
                                                    LM_Data.KYC_FullName = (data.data.hasOwnProperty("name")) ? data.data.name : req_txt.name;
                                                    LM_Data.KYC_Pan_No = (data.data.hasOwnProperty("pan")) ? data.data.pan : ObjRequest.PAN;
                                                } else if (data.data.iskycVerified === 0) {
                                                    kyc_id = (data.data.hasOwnProperty("kyc_id")) ? data.data.kyc_id : "";
                                                    LM_Data.KYC_Status = "FETCH_FAIL";
                                                    LM_Data.KYC_Redirect_URL = data.data.redirect_link;
                                                } else {
                                                    LM_Data.KYC_Status = "FETCH_FAIL";
                                                }
                                            } else {
                                                LM_Data.KYC_Status = "FETCH_FAIL";
                                            }

                                            try {
                                                let cond = {
                                                    'Insurer_Id': ObjRequest.Insurer_Id - 0,
                                                    'PB_CRN': (ObjRequest.PB_CRN === undefined || ObjRequest.PB_CRN === "" || ObjRequest.PB_CRN === null) ? "" : ObjRequest.PB_CRN - 0
//                                                'User_Data_Id': (ObjRequest.User_Data_Id === undefined || ObjRequest.User_Data_Id === "" || ObjRequest.User_Data_Id === null) ? 0 : ObjRequest.User_Data_Id - 0
                                                };
                                                let setObj = {
                                                    'KYC_Number': LM_Data.KYC_Number,
                                                    'KYC_Full_Name': LM_Data.KYC_FullName,
                                                    'KYC_Status': LM_Data.KYC_Status,
                                                    'Modified_On': new Date(),
                                                    'KYC_URL': LM_Data.KYC_Redirect_URL
                                                };
                                                kyc_detail.update(cond, {$set: setObj}, function (err, users) {
                                                    if (err) {
                                                        res.json({"Insurer": "HDFC", "Msg": err, "Status": "FAIL"});
                                                    } else {
                                                        //res.json({"Insurer": "HDFC", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                                    }
                                                });
                                                let queryObj1 = {
                                                    'PB_CRN': ObjRequest.PB_CRN ? ObjRequest.PB_CRN : "",
                                                    'User_Data_Id': ObjRequest.User_Data_Id ? ObjRequest.User_Data_Id : "",
                                                    'Insurer_Id': ObjRequest.Insurer_Id,
                                                    'Product_Id': ObjRequest.Product_Id ? ObjRequest.Product_Id : "",
                                                    'PAN': (ObjRequest.PAN === undefined || ObjRequest.PAN === "" || ObjRequest.PAN === null) ? "" : ObjRequest.PAN,
                                                    'Aadhar': (ObjRequest.Aadhaar === undefined || ObjRequest.Aadhaar === "" || ObjRequest.Aadhaar === null) ? "" : ObjRequest.Aadhaar,
                                                    'DOB': (ObjRequest.DOB === undefined || ObjRequest.DOB === "" || ObjRequest.DOB === null) ? "" : ObjRequest.DOB,
                                                    'Full_Name': ObjRequest.Proposal_Request['middle_name'] === "" ? (ObjRequest.Proposal_Request['first_name'] + " " + ObjRequest.Proposal_Request['last_name']) : (ObjRequest.Proposal_Request['first_name'] + " " + ObjRequest.Proposal_Request['middle_name'] + " " + ObjRequest.Proposal_Request['last_name']),
                                                    'KYC_Full_Name': LM_Data.KYC_FullName,
                                                    'Mobile': (ObjRequest.Mobile === undefined || ObjRequest.Mobile === "" || ObjRequest.Mobile === null) ? "" : ObjRequest.Mobile - 0,
                                                    'Email': (ObjRequest.Email === undefined || ObjRequest.Email === "" || ObjRequest.Email === null) ? "" : ObjRequest.Email,
                                                    'KYC_Number': LM_Data.KYC_Number,
                                                    'Search_Type': ObjRequest.Search_Type ? ObjRequest.Search_Type : "",
                                                    'KYC_Status': LM_Data.KYC_Status,
                                                    'PAN_Doc': ObjRequest.PAN_Doc ? ObjRequest.PAN_Doc : "",
                                                    'Aadhar_Doc': ObjRequest.Aadhar_Doc ? ObjRequest.Aadhar_Doc : "",
                                                    'KYC_URL': LM_Data.KYC_Redirect_URL,
                                                    'Created_On': new Date(),
                                                    'Modified_On': new Date(),
                                                    //'Proposal_Request': (ObjRequest.Proposal_Request === undefined || ObjRequest.Proposal_Request === "" || ObjRequest.Proposal_Request === null) ? "" : ObjRequest.Proposal_Request,
                                                    'Proposal_Id': (ObjRequest.Proposal_Id === undefined || ObjRequest.Proposal_Id === "" || ObjRequest.Proposal_Id === null) ? "" : ObjRequest.Proposal_Id,
                                                    'Quote_Id': (ObjRequest.Quote_Id === undefined || ObjRequest.Quote_Id === "" || ObjRequest.Quote_Id === null) ? "" : ObjRequest.Quote_Id,
                                                    'KYC_Request_Core': kyc_fetch_request,
                                                    'KYC_Response_Core': kyc_fetch_response
                                                };
                                                var kyc_history1 = new kyc_history(queryObj1);
                                                kyc_history1.save(queryObj1, function (err, users) {
                                                    if (err) {
                                                        res.json({"Insurer": "HDFC", "Msg": err, "Status": "FAIL"});
                                                    } else {
                                                        //res.json({"Insurer": "HDFC", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                                    }
                                                });
                                            } catch (e) {
                                                res.json({"Insurer": "HDFC", "Msg": e.stack, "Status": "FAIL"});
                                            }
                                            res.json({"Insurer": "HDFC", "Msg": LM_Data, "Status": LM_Data.KYC_Status});
                                        } else {
                                            res.json({"Insurer": "HDFC", "Msg": "KYC fetch services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                                        }
                                    });
                                } else {
                                    res.json({"Insurer": "HDFC", "Msg": "Could Not Generate Token. Please try again later.", "Status": "FAIL"});
                                }
                            } catch (e2) {
                                res.json({"Insurer": "HDFC", "Msg": e2.stack, "Status": "FAIL"});
                            }
                        } else {
                            res.json({"Insurer": "HDFC", "Msg": "KYC-Token not generated. Please try again later.", "Status": "FAIL"});
                        }
                    } else {
                        res.json({"Insurer": "HDFC", "Msg": "KYC-Token generation services was not successful. Please try again later.", "Status": "FAIL"});
                    }
                } else {
                    res.json({"Insurer": "HDFC", "Msg": "KYC-Token generation services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                }
            });
        } catch (e1) {
            res.json({"Insurer": "HDFC", "Msg": e1.stack, "Status": "FAIL"});
        }
    });

    app.post('/kyc_details/hdfc_verify_kyc_details', function (req, res) {
        try {
            let objRequest = req.body;
            let kyc_verify_request = "";
            let kyc_verify_response = "";
            var user_kyc_no = (objRequest.user_kyc_no === undefined || objRequest.user_kyc_no === "" || objRequest.user_kyc_no === null) ? "" : objRequest.user_kyc_no;
            var user_name = null;
            if (objRequest['Proposal_Request'].middle_name === undefined || objRequest['Proposal_Request'].middle_name === "" || objRequest['Proposal_Request'].middle_name === null) {
                user_name = ((objRequest['Proposal_Request'].first_name === undefined || objRequest['Proposal_Request'].first_name === "" || objRequest['Proposal_Request'].first_name === null) ? "" : objRequest['Proposal_Request'].first_name) + " " +
                        ((objRequest['Proposal_Request'].last_name === undefined || objRequest['Proposal_Request'].last_name === "" || objRequest['Proposal_Request'].last_name === null) ? "" : objRequest['Proposal_Request'].last_name);
            } else {
                user_name = ((objRequest['Proposal_Request'].first_name === undefined || objRequest['Proposal_Request'].first_name === "" || objRequest['Proposal_Request'].first_name === null) ? "" : objRequest['Proposal_Request'].first_name) + " " +
                        ((objRequest['Proposal_Request'].middle_name === undefined || objRequest['Proposal_Request'].middle_name === "" || objRequest['Proposal_Request'].middle_name === null) ? "" : objRequest['Proposal_Request'].middle_name) + " " +
                        ((objRequest['Proposal_Request'].last_name === undefined || objRequest['Proposal_Request'].last_name === "" || objRequest['Proposal_Request'].last_name === null) ? "" : objRequest['Proposal_Request'].last_name);
            }
            let req_txt = {
                "mobile": (objRequest.Mobile === undefined || objRequest.Mobile === "" || objRequest.Mobile === null) ? "" : objRequest.Mobile,
                "name": user_name,
                "kyc_id": user_kyc_no,
                "dob": (objRequest.DOB === undefined || objRequest.DOB === "" || objRequest.DOB === null) ? "" : objRequest.DOB,
                "ckyc_number": user_kyc_no,
                "pan": (objRequest.PAN === undefined || objRequest.PAN === "" || objRequest.PAN === null) ? "" : objRequest.PAN,
                "aadhaar_uid": (objRequest.Aadhar === undefined || objRequest.Aadhar === "" || objRequest.Aadhar === null) ? "" : (objRequest.Aadhar.substr(objRequest.Aadhar.length - 4)), //"last 4 digits of aadhar",
                "agent_id": "",
                "gc_cust_id": "",
                "eia_number": "",
                "email_address": (objRequest.Email === undefined || objRequest.Email === "" || objRequest.Email === null) ? "" : objRequest.Email,
                "redirect_url": ""
            };
            kyc_verify_request = req_txt;
            let args = {headers: {"token": ""}};
            let api_key = ((config.environment.name === 'Production') ? 'd220114d-8e75-4f' : '8d399be8-0b6f-4a');
            let args1 = {
                headers: {
                    "api_key": api_key
                }
            };
            let KYC_Status = "VERIFY_FAIL";
            let token = null;
            var Client = require('node-rest-client').Client;
            var client = new Client();
            let LM_Data = {
                "KYC_Pan_No": "",
                "KYC_Number": "",
                "KYC_FullName": "",
                "KYC_Ref_No": "",
                "KYC_Redirect_URL": "",
                "KYC_Insurer_ID": objRequest.Insurer_Id,
                "KYC_PB_CRN": objRequest.PB_CRN,
                "KYC_Status": KYC_Status
            };
            let token_url = ((config.environment.name === 'Production') ? 'https://ekyc-prod.hdfcergo.com/e-kyc/tgt/generate-token' : 'https://ekyc-uat.hdfcergo.com/e-kyc/tgt/generate-token');
            client.get(token_url, args1, function (data1, response1) {
                if (data1) {
                    if (data1.hasOwnProperty("success") && data1.success === true) {
                        if (data1.hasOwnProperty("data") && data1.data.hasOwnProperty("token") && data1.data.token !== "" && data1.data.token !== null) {
                            token = data1.data.token;
                            try {
                                if (token) {
                                    args.headers.token = token;
                                    var client1 = new Client();
                                    let kyc_verify_url = ((config.environment.name === 'Production') ? ('https://ekyc-prod.hdfcergo.com/e-kyc/primary/kyc-verified?kyc_id=') : ('https://ekyc-uat.hdfcergo.com/e-kyc/primary/kyc-verified?kyc_id=')) + user_kyc_no;
                                    client1.get(kyc_verify_url, args, function (data, response) {
                                        if (data) {
                                            kyc_verify_response = data;
                                            if (data.hasOwnProperty("message") && data.message !== "") {
                                                LM_Data.KYC_Status = "VERIFY_FAIL";
                                                LM_Data.KYC_Redirect_URL = objRequest.KYC_URL;
                                            } else {
                                                if (data.hasOwnProperty("success") && data.success === true && data.hasOwnProperty("data") && data.data.hasOwnProperty("iskycVerified")) {
                                                    if (data.data.iskycVerified === 1) {
                                                        LM_Data.KYC_Status = "VERIFY_SUCCESS";
                                                        LM_Data.KYC_Number = (data.data.hasOwnProperty("kyc_id")) ? data.data.kyc_id : user_kyc_no;
                                                        LM_Data.KYC_FullName = (data.data.hasOwnProperty("name")) ? data.data.name : req_txt.name;
                                                        LM_Data.KYC_Pan_No = (data.data.hasOwnProperty("pan")) ? data.data.pan : objRequest.PAN;
                                                    } else if (data.data.iskycVerified === 0) {
                                                        LM_Data.KYC_Status = "VERIFY_FAIL";
                                                        LM_Data.KYC_Redirect_URL = objRequest.KYC_URL;
                                                    } else {
                                                        LM_Data.KYC_Status = "VERIFY_FAIL";
                                                        LM_Data.KYC_Redirect_URL = objRequest.KYC_URL;
                                                    }
                                                } else {
                                                    LM_Data.KYC_Status = "VERIFY_FAIL";
                                                    LM_Data.KYC_Redirect_URL = objRequest.KYC_URL;
                                                }
                                            }

                                            try {
                                                let queryObj = {
                                                    'Search_Type': (objRequest.Verify_Search_Type === undefined || objRequest.Verify_Search_Type === "" || objRequest.Verify_Search_Type === null) ? "" : objRequest.Verify_Search_Type,
                                                    'KYC_Number': user_kyc_no,
                                                    'KYC_Status': LM_Data.KYC_Status,
                                                    'Modified_On': new Date()
                                                };
                                                let cond = {
                                                    'Insurer_Id': objRequest.Insurer_Id - 0,
                                                    'PB_CRN': (objRequest.PB_CRN === undefined || objRequest.PB_CRN === "" || objRequest.PB_CRN === null) ? "" : objRequest.PB_CRN - 0
//                                                'User_Data_Id': (objRequest.User_Data_Id === undefined || objRequest.User_Data_Id === "" || objRequest.User_Data_Id === null) ? 0 : objRequest.User_Data_Id - 0
                                                };
                                                //var kyc_detail1 = new kyc_detail(queryObj);
                                                kyc_detail.update(cond, {$set: queryObj}, function (err, users) {
                                                    if (err) {
                                                        res.json({"Insurer": "HDFC", "Msg": err, "Status": "FAIL"});
                                                    } else {
                                                        //res.json({"Insurer": "HDFC", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                                    }
                                                });
                                                let queryObj1 = {
                                                    'PB_CRN': objRequest.PB_CRN ? objRequest.PB_CRN : "",
                                                    'User_Data_Id': objRequest.User_Data_Id ? objRequest.User_Data_Id : "",
                                                    'Insurer_Id': objRequest.Insurer_Id,
                                                    'Product_Id': objRequest.Product_Id ? objRequest.Product_Id : "",
                                                    'PAN': (objRequest.PAN === undefined || objRequest.PAN === "" || objRequest.PAN === null) ? "" : objRequest.PAN,
                                                    'Aadhar': (objRequest.Aadhaar === undefined || objRequest.Aadhaar === "" || objRequest.Aadhaar === null) ? "" : objRequest.Aadhaar,
                                                    'DOB': (objRequest.DOB === undefined || objRequest.DOB === "" || objRequest.DOB === null) ? "" : objRequest.DOB,
                                                    'Full_Name': objRequest.Proposal_Request['middle_name'] === "" ? (objRequest.Proposal_Request['first_name'] + " " + objRequest.Proposal_Request['last_name']) : (objRequest.Proposal_Request['first_name'] + " " + objRequest.Proposal_Request['middle_name'] + " " + objRequest.Proposal_Request['last_name']),
                                                    'Mobile': (objRequest.Mobile === undefined || objRequest.Mobile === "" || objRequest.Mobile === null) ? "" : objRequest.Mobile - 0,
                                                    'Email': (objRequest.Email === undefined || objRequest.Email === "" || objRequest.Email === null) ? "" : objRequest.Email,
                                                    'KYC_Number': LM_Data.KYC_Number,
                                                    'Search_Type': objRequest.Search_Type ? objRequest.Search_Type : "",
                                                    'KYC_Status': LM_Data.KYC_Status,
                                                    'PAN_Doc': objRequest.PAN_Doc ? objRequest.PAN_Doc : "",
                                                    'Aadhar_Doc': objRequest.Aadhar_Doc ? objRequest.Aadhar_Doc : "",
                                                    'KYC_URL': LM_Data.KYC_Redirect_URL,
                                                    'Created_On': new Date(),
                                                    'Modified_On': new Date(),
                                                    //'Proposal_Request': (objRequest.Proposal_Request === undefined || objRequest.Proposal_Request === "" || objRequest.Proposal_Request === null) ? "" : objRequest.Proposal_Request,
                                                    'Proposal_Id': (objRequest.Proposal_Id === undefined || objRequest.Proposal_Id === "" || objRequest.Proposal_Id === null) ? "" : objRequest.Proposal_Id,
                                                    'Quote_Id': (objRequest.Quote_Id === undefined || objRequest.Quote_Id === "" || objRequest.Quote_Id === null) ? "" : objRequest.Quote_Id,
                                                    'KYC_Request_Core': kyc_verify_request,
                                                    'KYC_Response_Core': kyc_verify_response
                                                };
                                                var kyc_history1 = new kyc_history(queryObj1);
                                                kyc_history1.save(queryObj1, function (err, users) {
                                                    if (err) {
                                                        res.json({"Insurer": "HDFC", "Msg": err, "Status": "FAIL"});
                                                    } else {
                                                        //res.json({"Insurer": "HDFC", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                                    }
                                                });
                                            } catch (e) {
                                                res.json({"Insurer": "HDFC", "Msg": e.stack, "Status": "FAIL"});
                                            }
                                            res.json({"Insurer": "HDFC", "Msg": LM_Data, "Status": LM_Data.KYC_Status});
                                        } else {
                                            res.json({"Insurer": "HDFC", "Msg": "KYC verify services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                                        }
                                    });
                                } else {
                                    res.json({"Insurer": "HDFC", "Msg": "Could Not Generate Token. Please try again later.", "Status": "FAIL"});
                                }
                            } catch (e2) {
                                res.json({"Insurer": "HDFC", "Msg": e2.stack, "Status": "FAIL"});
                            }
                        } else {
                            res.json({"Insurer": "HDFC", "Msg": "KYC-Token not generated. Please try again later.", "Status": "FAIL"});
                        }
                    } else {
                        res.json({"Insurer": "HDFC", "Msg": "KYC-Token generation services was not successful. Please try again later.", "Status": "FAIL"});
                    }
                } else {
                    res.json({"Insurer": "HDFC", "Msg": "KYC-Token generation services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                }
            });
        } catch (e1) {
            res.json({"Insurer": "HDFC", "Msg": e1.stack, "Status": "FAIL"});
        }
    });

    app.post('/kyc_details/edelweiss_fetch_kyc_details', function (req, res) {
        try {
            let ObjRequest = req.body;
            let kyc_fetch_request = "";
            let kyc_fetch_response = "";
            let vehicle_registration_type = (ObjRequest.vehicle_registration_type === undefined || ObjRequest.vehicle_registration_type === "" || ObjRequest.vehicle_registration_type === null) ? "" : ObjRequest.vehicle_registration_type;
            vehicle_registration_type = (vehicle_registration_type === "") ? "" : (vehicle_registration_type === "corporate" ? "C" : "I");
            vehicle_registration_type = "I";
            let user_name = "";
            if (ObjRequest['Proposal_Request'].middle_name === undefined || ObjRequest['Proposal_Request'].middle_name === "" || ObjRequest['Proposal_Request'].middle_name === null) {
                user_name = ((ObjRequest['Proposal_Request'].first_name === undefined || ObjRequest['Proposal_Request'].first_name === "" || ObjRequest['Proposal_Request'].first_name === null) ? "" : ObjRequest['Proposal_Request'].first_name) + " " +
                        ((ObjRequest['Proposal_Request'].last_name === undefined || ObjRequest['Proposal_Request'].last_name === "" || ObjRequest['Proposal_Request'].last_name === null) ? "" : ObjRequest['Proposal_Request'].last_name);
            } else {
                user_name = ((ObjRequest['Proposal_Request'].first_name === undefined || ObjRequest['Proposal_Request'].first_name === "" || ObjRequest['Proposal_Request'].first_name === null) ? "" : ObjRequest['Proposal_Request'].first_name) + " " +
                        ((ObjRequest['Proposal_Request'].middle_name === undefined || ObjRequest['Proposal_Request'].middle_name === "" || ObjRequest['Proposal_Request'].middle_name === null) ? "" : ObjRequest['Proposal_Request'].middle_name) + " " +
                        ((ObjRequest['Proposal_Request'].last_name === undefined || ObjRequest['Proposal_Request'].last_name === "" || ObjRequest['Proposal_Request'].last_name === null) ? "" : ObjRequest['Proposal_Request'].last_name);
            }
            let req_txt = {
                "VISoF_Program_Name": "PB-LIBPL", //"EGI",
                "VISoF_KYC_Req_No": (ObjRequest.PB_CRN === undefined || ObjRequest.PB_CRN === "" || ObjRequest.PB_CRN === null) ? "" : ObjRequest.PB_CRN.toString(),
                "ProposerType": vehicle_registration_type, //I=Individual or C=Corporate
                "Source": "LIBPL", //"PP",
                "FirstName": (ObjRequest.Proposal_Request.first_name === undefined || ObjRequest.Proposal_Request.first_name === "" || ObjRequest.Proposal_Request.first_name === null) ? "" : ObjRequest.Proposal_Request.first_name,
                "MiddleName": (ObjRequest.Proposal_Request.middle_name === undefined || ObjRequest.Proposal_Request.middle_name === "" || ObjRequest.Proposal_Request.middle_name === null) ? "" : ObjRequest.Proposal_Request.middle_name,
                "LastName": (ObjRequest.Proposal_Request.last_name === undefined || ObjRequest.Proposal_Request.last_name === "" || ObjRequest.Proposal_Request.last_name === null) ? "" : ObjRequest.Proposal_Request.last_name,
                "DOB": (vehicle_registration_type === "I" ? ((ObjRequest.DOB === undefined || ObjRequest.DOB === "" || ObjRequest.DOB === null) ? "" : (moment(ObjRequest.DOB, "DD/MM/YYYY").format("MM/DD/YYYY"))) : ""), //"31/10/2000",
                "DOI": (vehicle_registration_type === "C" ? ((ObjRequest.date_of_incorporation === undefined || ObjRequest.date_of_incorporation === "" || ObjRequest.date_of_incorporation === null) ? "" : (moment(ObjRequest.date_of_incorporation, "DD/MM/YYYY").format("MM/DD/YYYY"))) : ""), //"31/10/2000",
                "MobileNo": (ObjRequest.Proposal_Request.mobile === undefined || ObjRequest.Proposal_Request.mobile === "" || ObjRequest.Proposal_Request.mobile === null) ? "" : ObjRequest.Proposal_Request.mobile,
                "ZIPCODE": (ObjRequest.Proposal_Request.permanent_pincode === undefined || ObjRequest.Proposal_Request.permanent_pincode === "" || ObjRequest.Proposal_Request.permanent_pincode === null) ? "" : ObjRequest.Proposal_Request.permanent_pincode,
                "Email": (ObjRequest.Proposal_Request.email === undefined || ObjRequest.Proposal_Request.email === "" || ObjRequest.Proposal_Request.email === null) ? "" : ObjRequest.Proposal_Request.email,
                "ProposerPAN": (ObjRequest.PAN === undefined || ObjRequest.PAN === "" || ObjRequest.PAN === null) ? "" : ObjRequest.PAN, //"AQNPY8223A",
                "ProposerAadhaarNumber": (ObjRequest.Aadhar === undefined || ObjRequest.Aadhar === "" || ObjRequest.Aadhar === null) ? "" : ObjRequest.Aadhar, //"",
                "ProposerCKYC_No": ""
            };
            let api_key = ((config.environment.name !== 'Production') ? 'vmX0qzSwUy5i4dyKa0MhuaQhQ6PECsp3FqZvwRX8' : 'GNa3E0AW0N1rQX5iJptWP4oTuJMm6xL165BKAiFv');
            let args = {
                data: JSON.stringify(req_txt),
                headers: {
                    "Content-Type": "application/json",
                    "Accept": "*/*",
                    "Authorization": "",
                    "X-Api-Key": api_key
                }
            };
            let username = ((config.environment.name !== 'Production') ? '2r9a4a9lpvj2lp5bqbo0jhcp0l' : '7tfqlek8a6di69gqevlnspmlop');
            let password = ((config.environment.name !== 'Production') ? '1q0fbp68juvm8f221f9ckh9j7i3ktq2hkibfk88q460pvccsfmqs' : '1f6u83mee4aun2vaaiv7vo02temfh8ebgonued3ou9s877qth6rc');
            let args1 = {
                headers: {
                    "Authorization": 'Basic ' + new Buffer(username + ':' + password).toString('base64'),
                    //"Authorization": "Basic MnI5YTRhOWxwdmoybHA1YnFibzBqaGNwMGw6MXEwZmJwNjhqdXZtOGYyMjFmOWNraDlqN2kza3RxMmhraWJmazg4cTQ2MHB2Y2NzZm1xcw==",
                    "Content-Type": "application/x-www-form-urlencoded",
                    "Accept": "*/*"
                }
            };
            kyc_fetch_request = req_txt;
            let KYC_Status = "PENDING";
            let kyc_id = 0;
            let token = null;
            var Client = require('node-rest-client').Client;
            var client = new Client();
            let LM_Data = {
                "KYC_Pan_No": "",
                "KYC_Number": "",
                "KYC_FullName": "",
                "KYC_Ref_No": "",
                "KYC_Redirect_URL": "",
                "KYC_Insurer_ID": ObjRequest.Insurer_Id,
                "KYC_PB_CRN": ObjRequest.PB_CRN,
                "KYC_Status": KYC_Status
            };
            let token_url = ((config.environment.name !== 'Production') ? 'https://devapi.edelweissinsurance.com/oauth2/token' : 'https://apis.edelweissinsurance.com/oauth2/token');
            client.post(token_url, args1, function (data1, response1) {
                if (data1) {
                    if (data1.hasOwnProperty("access_token") && data1.access_token !== "" && data1.access_token !== null) {
                        token = data1.access_token;
                        try {
                            if (token) {
                                args.headers.Authorization = token;
                                var client1 = new Client();
                                let kyc_fetch_url = ((config.environment.name !== 'Production') ? 'https://devapi.edelweissinsurance.com/signzy/e-kyc' : 'https://apis.edelweissinsurance.com/signzy/e-kyc');
                                client1.post(kyc_fetch_url, args, function (data, response) {
                                    if (data) {
                                        kyc_fetch_response = data;
                                        if (data.hasOwnProperty("message") && data.message !== "") {
                                            LM_Data.KYC_Status = "FETCH_FAIL";
                                            LM_Data.KYC_Redirect_URL = ObjRequest.KYC_URL;
                                        } else {
                                            if (data.hasOwnProperty("success") && data.success === true && data.hasOwnProperty("data") && data.data) {
                                                if (data.data.hasOwnProperty("KYC_Status") && (data.data.KYC_Status === '1' || data.data.KYC_Status === 1)) {
                                                    if ((data.data.hasOwnProperty("VISoF_KYC_Req_No") && data.data.VISoF_KYC_Req_No !== "") && (data.data.hasOwnProperty("IC_KYC_No") && data.data.IC_KYC_No !== "")) {
                                                        kyc_id = data.data.VISoF_KYC_Req_No + "|" + data.data.IC_KYC_No;
                                                        LM_Data.KYC_Status = "FETCH_SUCCESS";
                                                        LM_Data.KYC_Number = (kyc_id && kyc_id.includes('|')) ? kyc_id.split('|')[1] : "";
                                                        LM_Data.KYC_Pan_No = data.data['ProposerPAN'];
                                                        try {
                                                            LM_Data.KYC_FullName = data.data['MiddleName'] === "" ? (data.data['FirstName'] + " " + data.data['LastName']) : (data.data['FirstName'] + " " + data.data['MiddleName'] + " " + data.data['LastName']);
                                                        } catch (e) {
                                                            LM_Data.KYC_FullName = user_name;
                                                        }
                                                    } else {
                                                        if ((data.data.hasOwnProperty("VISoF_KYC_Req_No") && data.data.VISoF_KYC_Req_No !== "") && (data.data.hasOwnProperty("IC_KYC_No") && data.data.IC_KYC_No !== "")) {
                                                            kyc_id = data.data.VISoF_KYC_Req_No + "|" + data.data.IC_KYC_No;
                                                            LM_Data.KYC_Number = (kyc_id && kyc_id.includes('|')) ? kyc_id.split('|')[1] : "";
                                                            LM_Data.KYC_Redirect_URL = (data.data && data.data.IC_KYC_REG_URL) ? data.data.IC_KYC_REG_URL : "";
                                                        }
                                                        LM_Data.KYC_Status = "FETCH_FAIL";
                                                    }
                                                } else {
                                                    if ((data.data.hasOwnProperty("VISoF_KYC_Req_No") && data.data.VISoF_KYC_Req_No !== "") && (data.data.hasOwnProperty("IC_KYC_No") && data.data.IC_KYC_No !== "")) {
                                                        kyc_id = data.data.VISoF_KYC_Req_No + "|" + data.data.IC_KYC_No;
                                                        LM_Data.KYC_Number = (kyc_id && kyc_id.includes('|')) ? kyc_id.split('|')[1] : "";
//                                                        LM_Data.KYC_Redirect_URL = (data.hasOwnProperty('data') && data.data.hasOwnProperty('IC_KYC_REG_URL') && data.data.IC_KYC_REG_URL) ? data.data.IC_KYC_REG_URL : ObjRequest.KYC_URL;
                                                    }
                                                    LM_Data.KYC_Status = "FETCH_FAIL";
                                                    LM_Data.KYC_Redirect_URL = (data.hasOwnProperty('data') && data.data.hasOwnProperty('IC_KYC_REG_URL') && data.data.IC_KYC_REG_URL) ? data.data.IC_KYC_REG_URL : ObjRequest.KYC_URL;
                                                }
                                            } else {
                                                if ((data.hasOwnProperty("VISoF_KYC_Req_No") && data.VISoF_KYC_Req_No !== "") && (data.hasOwnProperty("IC_KYC_No") && data.IC_KYC_No !== "")) {
                                                    kyc_id = data.VISoF_KYC_Req_No + "|" + data.IC_KYC_No;
                                                    LM_Data.KYC_Number = (kyc_id && kyc_id.includes('|')) ? kyc_id.split('|')[1] : "";
                                                }
                                                LM_Data.KYC_Status = "FETCH_FAIL";
                                                LM_Data.KYC_Redirect_URL = ObjRequest.KYC_URL;
                                                if (data && data.hasOwnProperty('IC_KYC_REG_URL')) {
                                                     LM_Data.KYC_Redirect_URL = data.IC_KYC_REG_URL;
                                            }
                                        }
                                        }

                                        try {
                                            let cond = {
                                                'Insurer_Id': ObjRequest.Insurer_Id - 0,
                                                'PB_CRN': (ObjRequest.PB_CRN === undefined || ObjRequest.PB_CRN === "" || ObjRequest.PB_CRN === null) ? "" : ObjRequest.PB_CRN - 0
//                                                'User_Data_Id': (ObjRequest.User_Data_Id === undefined || ObjRequest.User_Data_Id === "" || ObjRequest.User_Data_Id === null) ? 0 : ObjRequest.User_Data_Id - 0
                                            };
                                            let setObj = {
                                                'KYC_Number': LM_Data.KYC_Number,
                                                'KYC_Full_Name': LM_Data.KYC_FullName,
                                                'KYC_Status': LM_Data.KYC_Status,
                                                'Modified_On': new Date(),
                                                'KYC_URL': LM_Data.KYC_Redirect_URL
                                            };
                                            kyc_detail.update(cond, {$set: setObj}, function (err, users) {
                                                if (err) {
                                                    res.json({"Insurer": "Edelweiss", "Msg": err, "Status": "FAIL"});
                                                } else {
                                                    //res.json({"Insurer": "Edelweiss", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                                }
                                            });
                                            let queryObj1 = {
                                                'PB_CRN': ObjRequest.PB_CRN ? ObjRequest.PB_CRN : "",
                                                'User_Data_Id': ObjRequest.User_Data_Id ? ObjRequest.User_Data_Id : "",
                                                'Insurer_Id': ObjRequest.Insurer_Id,
                                                'Product_Id': ObjRequest.Product_Id ? ObjRequest.Product_Id : "",
                                                'PAN': (ObjRequest.PAN === undefined || ObjRequest.PAN === "" || ObjRequest.PAN === null) ? "" : ObjRequest.PAN,
                                                'Aadhar': (ObjRequest.Aadhaar === undefined || ObjRequest.Aadhaar === "" || ObjRequest.Aadhaar === null) ? "" : ObjRequest.Aadhaar,
                                                'DOB': (ObjRequest.DOB === undefined || ObjRequest.DOB === "" || ObjRequest.DOB === null) ? "" : ObjRequest.DOB,
                                                'Full_Name': ObjRequest.Proposal_Request['middle_name'] === "" ? (ObjRequest.Proposal_Request['first_name'] + " " + ObjRequest.Proposal_Request['last_name']) : (ObjRequest.Proposal_Request['first_name'] + " " + ObjRequest.Proposal_Request['middle_name'] + " " + ObjRequest.Proposal_Request['last_name']),
                                                'Mobile': (ObjRequest.Mobile === undefined || ObjRequest.Mobile === "" || ObjRequest.Mobile === null) ? "" : ObjRequest.Mobile - 0,
                                                'Email': (ObjRequest.Email === undefined || ObjRequest.Email === "" || ObjRequest.Email === null) ? "" : ObjRequest.Email,
                                                'KYC_Number': LM_Data.KYC_Number,
                                                'Search_Type': ObjRequest.Search_Type ? ObjRequest.Search_Type : "",
                                                'KYC_Status': LM_Data.KYC_Status,
                                                'PAN_Doc': ObjRequest.PAN_Doc ? ObjRequest.PAN_Doc : "",
                                                'Aadhar_Doc': ObjRequest.Aadhar_Doc ? ObjRequest.Aadhar_Doc : "",
                                                'KYC_URL': LM_Data.KYC_Redirect_URL,
                                                'Created_On': new Date(),
                                                'Modified_On': new Date(),
                                                //'Proposal_Request': (ObjRequest.Proposal_Request === undefined || ObjRequest.Proposal_Request === "" || ObjRequest.Proposal_Request === null) ? "" : ObjRequest.Proposal_Request,
                                                'Proposal_Id': (ObjRequest.Proposal_Id === undefined || ObjRequest.Proposal_Id === "" || ObjRequest.Proposal_Id === null) ? "" : ObjRequest.Proposal_Id,
                                                'Quote_Id': (ObjRequest.Quote_Id === undefined || ObjRequest.Quote_Id === "" || ObjRequest.Quote_Id === null) ? "" : ObjRequest.Quote_Id,
                                                'KYC_Request_Core': kyc_fetch_request,
                                                'KYC_Response_Core': kyc_fetch_response
                                            };
                                            var kyc_history1 = new kyc_history(queryObj1);
                                            kyc_history1.save(queryObj1, function (err, users) {
                                                if (err) {
                                                    res.json({"Insurer": "Edelweiss", "Msg": err, "Status": "FAIL"});
                                                } else {
                                                    //res.json({"Insurer": "Edelweiss", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                                }
                                            });
                                        } catch (e) {
                                            res.json({"Insurer": "Edelweiss", "Msg": e.stack, "Status": "FAIL"});
                                        }
                                        res.json({"Insurer": "Edelweiss", "Msg": LM_Data, "Status": LM_Data.KYC_Status});
                                    } else {
                                        res.json({"Insurer": "Edelweiss", "Msg": "KYC fetch services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                                    }
                                });
                            } else {
                                res.json({"Insurer": "Edelweiss", "Msg": "Could Not Generate Token. Please try again later.", "Status": "FAIL"});
                            }
                        } catch (e2) {
                            res.json({"Insurer": "Edelweiss", "Msg": e2.stack, "Status": "FAIL"});
                        }
                    } else {
                        res.json({"Insurer": "Edelweiss", "Msg": "KYC-Token not generated. Please try again later.", "Status": "FAIL"});
                    }
                } else {
                    res.json({"Insurer": "Edelweiss", "Msg": "KYC-Token generation services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                }
            });
        } catch (e1) {
            res.json({"Insurer": "Edelweiss", "Msg": e1.stack, "Status": "FAIL"});
        }
    });

    app.post('/kyc_details/edelweiss_verify_kyc_details', function (req, res) {
        try {
            let objRequest = req.body;
            let kyc_verify_request = "";
            let kyc_verify_response = "";
            var user_kyc_no = (objRequest.user_kyc_no === undefined || objRequest.user_kyc_no === "" || objRequest.user_kyc_no === null) ? "" : objRequest.user_kyc_no;
            var user_name = null;
            if (objRequest['Proposal_Request'].middle_name === undefined || objRequest['Proposal_Request'].middle_name === "" || objRequest['Proposal_Request'].middle_name === null) {
                user_name = ((objRequest['Proposal_Request'].first_name === undefined || objRequest['Proposal_Request'].first_name === "" || objRequest['Proposal_Request'].first_name === null) ? "" : objRequest['Proposal_Request'].first_name) + " " +
                        ((objRequest['Proposal_Request'].last_name === undefined || objRequest['Proposal_Request'].last_name === "" || objRequest['Proposal_Request'].last_name === null) ? "" : objRequest['Proposal_Request'].last_name);
            } else {
                user_name = ((objRequest['Proposal_Request'].first_name === undefined || objRequest['Proposal_Request'].first_name === "" || objRequest['Proposal_Request'].first_name === null) ? "" : objRequest['Proposal_Request'].first_name) + " " +
                        ((objRequest['Proposal_Request'].middle_name === undefined || objRequest['Proposal_Request'].middle_name === "" || objRequest['Proposal_Request'].middle_name === null) ? "" : objRequest['Proposal_Request'].middle_name) + " " +
                        ((objRequest['Proposal_Request'].last_name === undefined || objRequest['Proposal_Request'].last_name === "" || objRequest['Proposal_Request'].last_name === null) ? "" : objRequest['Proposal_Request'].last_name);
            }
            let VISoF_KYC_Req_No = "";
            let IC_KYC_No = "";
            if (user_kyc_no === "EGI-00000113") { // for testing only
                VISoF_KYC_Req_No = "13201";
                IC_KYC_No = (objRequest.user_kyc_no === undefined || objRequest.user_kyc_no === "" || objRequest.user_kyc_no === null) ? "" : objRequest.user_kyc_no;
            } else {
                VISoF_KYC_Req_No = (objRequest.PB_CRN === undefined || objRequest.PB_CRN === "" || objRequest.PB_CRN === null) ? "" : objRequest.PB_CRN.toString();
                IC_KYC_No = (objRequest.user_kyc_no === undefined || objRequest.user_kyc_no === "" || objRequest.user_kyc_no === null) ? "" : objRequest.user_kyc_no;
            }
            let req_txt = {
                "VISoF_KYC_Req_No": VISoF_KYC_Req_No,
                "IC_KYC_No": IC_KYC_No
            };
            kyc_verify_request = req_txt;
            let api_key = ((config.environment.name !== 'Production') ? 'vmX0qzSwUy5i4dyKa0MhuaQhQ6PECsp3FqZvwRX8' : 'GNa3E0AW0N1rQX5iJptWP4oTuJMm6xL165BKAiFv');
            let args = {
                data: JSON.stringify(req_txt),
                headers: {
                    "Content-Type": "application/json",
                    "Accept": "*/*",
                    "Authorization": "",
                    "X-Api-Key": api_key
                }
            };
            let username = ((config.environment.name !== 'Production') ? '2r9a4a9lpvj2lp5bqbo0jhcp0l' : '7tfqlek8a6di69gqevlnspmlop');
            let password = ((config.environment.name !== 'Production') ? '1q0fbp68juvm8f221f9ckh9j7i3ktq2hkibfk88q460pvccsfmqs' : '1f6u83mee4aun2vaaiv7vo02temfh8ebgonued3ou9s877qth6rc');
            let args1 = {
                headers: {
                    "Authorization": 'Basic ' + new Buffer(username + ':' + password).toString('base64'),
                    //"Authorization": "Basic MnI5YTRhOWxwdmoybHA1YnFibzBqaGNwMGw6MXEwZmJwNjhqdXZtOGYyMjFmOWNraDlqN2kza3RxMmhraWJmazg4cTQ2MHB2Y2NzZm1xcw==",
                    "Content-Type": "application/x-www-form-urlencoded",
                    "Accept": "*/*"
                }
            };
            let KYC_Status = "VERIFY_FAIL";
            let kyc_id = 0;
            let token = null;
            var Client = require('node-rest-client').Client;
            var client = new Client();
            let LM_Data = {
                "KYC_Pan_No": "",
                "KYC_Number": "",
                "KYC_FullName": "",
                "KYC_Ref_No": "",
                "KYC_Redirect_URL": "",
                "KYC_Insurer_ID": objRequest.Insurer_Id,
                "KYC_PB_CRN": objRequest.PB_CRN,
                "KYC_Status": KYC_Status
            };
            let token_url = ((config.environment.name !== 'Production') ? 'https://devapi.edelweissinsurance.com/oauth2/token' : 'https://apis.edelweissinsurance.com/oauth2/token');
            client.post(token_url, args1, function (data1, response1) {
                if (data1) {
                    if (data1.hasOwnProperty("access_token") && data1.access_token !== "" && data1.access_token !== null) {
                        token = data1.access_token;
                        try {
                            if (token) {
                                args.headers.Authorization = token;
                                var client1 = new Client();
                                let kyc_verify_url = ((config.environment.name !== 'Production') ? 'https://devapi.edelweissinsurance.com/signzy/e-kyc-enquiry' : 'https://apis.edelweissinsurance.com/signzy/e-kyc-enquiry');
                                client1.get(kyc_verify_url, args, function (data, response) {
                                    if (data) {
                                        kyc_verify_response = data;
                                        if (data.hasOwnProperty("message") && data.message !== "") {
                                            LM_Data.KYC_Status = "VERIFY_FAIL";
                                        } else {
                                            if (data.hasOwnProperty("success") && data.success === true && data.hasOwnProperty("data") && data.data) {
                                                if (data.data.hasOwnProperty("KYC_Status") && (data.data.KYC_Status === '1' || data.data.KYC_Status === 1)) {
                                                    if ((data.data.hasOwnProperty("VISoF_KYC_Req_No") && data.data.VISoF_KYC_Req_No !== "") && (data.data.hasOwnProperty("IC_KYC_No") && data.data.IC_KYC_No !== "")) {
                                                        kyc_id = data.data.VISoF_KYC_Req_No + "|" + data.data.IC_KYC_No;
                                                        LM_Data.KYC_Status = "VERIFY_SUCCESS";
                                                        user_kyc_no = kyc_id ? kyc_id.split('|')[1] : user_kyc_no;
                                                        LM_Data.KYC_Number = user_kyc_no;
                                                        LM_Data.KYC_Pan_No = data.data['ProposerPAN'];
                                                        try {
                                                            LM_Data.KYC_FullName = data.data['MiddleName'] === "" ? (data.data['FirstName'] + " " + data.data['LastName']) : (data.data['FirstName'] + " " + data.data['MiddleName'] + " " + data.data['LastName']);
                                                        } catch (e) {
                                                            LM_Data.KYC_FullName = user_name;
                                                        }
                                                    } else {
                                                        LM_Data.KYC_Status = "VERIFY_FAIL";
                                                    }
                                                } else {
                                                    LM_Data.KYC_Status = "VERIFY_FAIL";
                                                    LM_Data.KYC_Redirect_URL = data.data.IC_KYC_REG_URL;
                                                }
                                            } else {
                                                LM_Data.KYC_Status = "VERIFY_FAIL";
                                            }
                                        }

                                        try {
                                            let queryObj = {
                                                'Search_Type': (objRequest.Verify_Search_Type === undefined || objRequest.Verify_Search_Type === "" || objRequest.Verify_Search_Type === null) ? "" : objRequest.Verify_Search_Type,
                                                'KYC_Number': user_kyc_no,
                                                'KYC_Status': LM_Data.KYC_Status,
                                                'Modified_On': new Date()
                                            };
                                            let cond = {
                                                'Insurer_Id': objRequest.Insurer_Id - 0,
                                                'PB_CRN': (objRequest.PB_CRN === undefined || objRequest.PB_CRN === "" || objRequest.PB_CRN === null) ? "" : objRequest.PB_CRN - 0
//                                                'User_Data_Id': (objRequest.User_Data_Id === undefined || objRequest.User_Data_Id === "" || objRequest.User_Data_Id === null) ? 0 : objRequest.User_Data_Id - 0
                                            };
                                            //var kyc_detail1 = new kyc_detail(queryObj);
                                            kyc_detail.update(cond, {$set: queryObj}, function (err, users) {
                                                if (err) {
                                                    res.json({"Insurer": "Edelweiss", "Msg": err, "Status": "FAIL"});
                                                } else {
                                                    //res.json({"Insurer": "Edelweiss", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                                }
                                            });
                                            let queryObj1 = {
                                                'PB_CRN': objRequest.PB_CRN ? objRequest.PB_CRN : "",
                                                'User_Data_Id': objRequest.User_Data_Id ? objRequest.User_Data_Id : "",
                                                'Insurer_Id': objRequest.Insurer_Id,
                                                'Product_Id': objRequest.Product_Id ? objRequest.Product_Id : "",
                                                'PAN': (objRequest.PAN === undefined || objRequest.PAN === "" || objRequest.PAN === null) ? "" : objRequest.PAN,
                                                'Aadhar': (objRequest.Aadhaar === undefined || objRequest.Aadhaar === "" || objRequest.Aadhaar === null) ? "" : objRequest.Aadhaar,
                                                'DOB': (objRequest.DOB === undefined || objRequest.DOB === "" || objRequest.DOB === null) ? "" : objRequest.DOB,
                                                'Full_Name': objRequest.Proposal_Request['middle_name'] === "" ? (objRequest.Proposal_Request['first_name'] + " " + objRequest.Proposal_Request['last_name']) : (objRequest.Proposal_Request['first_name'] + " " + objRequest.Proposal_Request['middle_name'] + " " + objRequest.Proposal_Request['last_name']),
                                                'Mobile': (objRequest.Mobile === undefined || objRequest.Mobile === "" || objRequest.Mobile === null) ? "" : objRequest.Mobile - 0,
                                                'Email': (objRequest.Email === undefined || objRequest.Email === "" || objRequest.Email === null) ? "" : objRequest.Email,
                                                'KYC_Number': LM_Data.KYC_Number,
                                                'Search_Type': objRequest.Search_Type ? objRequest.Search_Type : "",
                                                'KYC_Status': LM_Data.KYC_Status,
                                                'PAN_Doc': objRequest.PAN_Doc ? objRequest.PAN_Doc : "",
                                                'Aadhar_Doc': objRequest.Aadhar_Doc ? objRequest.Aadhar_Doc : "",
                                                'KYC_URL': LM_Data.KYC_Redirect_URL,
                                                'Created_On': new Date(),
                                                'Modified_On': new Date(),
                                                //'Proposal_Request': (objRequest.Proposal_Request === undefined || objRequest.Proposal_Request === "" || objRequest.Proposal_Request === null) ? "" : objRequest.Proposal_Request,
                                                'Proposal_Id': (objRequest.Proposal_Id === undefined || objRequest.Proposal_Id === "" || objRequest.Proposal_Id === null) ? "" : objRequest.Proposal_Id,
                                                'Quote_Id': (objRequest.Quote_Id === undefined || objRequest.Quote_Id === "" || objRequest.Quote_Id === null) ? "" : objRequest.Quote_Id,
                                                'KYC_Request_Core': kyc_verify_request,
                                                'KYC_Response_Core': kyc_verify_response
                                            };
                                            var kyc_history1 = new kyc_history(queryObj1);
                                            kyc_history1.save(queryObj1, function (err, users) {
                                                if (err) {
                                                    res.json({"Insurer": "Edelweiss", "Msg": err, "Status": "FAIL"});
                                                } else {
                                                    //res.json({"Insurer": "Edelweiss", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                                }
                                            });
                                        } catch (e) {
                                            res.json({"Insurer": "Edelweiss", "Msg": e.stack, "Status": "FAIL"});
                                        }
                                        res.json({"Insurer": "Edelweiss", "Msg": LM_Data, "Status": LM_Data.KYC_Status});
                                    } else {
                                        res.json({"Insurer": "Edelweiss", "Msg": "KYC verify services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                                    }
                                });
                            } else {
                                res.json({"Insurer": "Edelweiss", "Msg": "Could Not Generate Token. Please try again later.", "Status": "FAIL"});
                            }
                        } catch (e2) {
                            res.json({"Insurer": "Edelweiss", "Msg": e2.stack, "Status": "FAIL"});
                        }
                    } else {
                        res.json({"Insurer": "Edelweiss", "Msg": "KYC-Token not generated. Please try again later.", "Status": "FAIL"});
                    }
                } else {
                    res.json({"Insurer": "Edelweiss", "Msg": "KYC-Token generation services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                }
            });
        } catch (e1) {
            res.json({"Insurer": "Edelweiss", "Msg": e1.stack, "Status": "FAIL"});
        }
    });

    app.post('/kyc_details/royal_fetch_kyc_details', function (req, res) {
        try {
            let objRequest = req.body;
            let proposal_request = objRequest.Proposal_Request;
            let kyc_fetch_request = "";
            let kyc_fetch_response = "";
            let vehicle_registration_type = (objRequest.vehicle_registration_type === undefined || objRequest.vehicle_registration_type === "" || objRequest.vehicle_registration_type === null) ? "Individual" : (objRequest.vehicle_registration_type.toLowerCase() === "corporate" ? "Corporate" : "Individual");
            let productObj = {1 : "Privatecar", 10 : "", 12 : "", 2 : ""};
            let product = productObj[objRequest.Product_Id];
            let royal_token_service = (config.environment.name === "Production") ? "https://kyc.royalsundaram.in/eKycServices/ekyc/generateKYCToken" : "https://ekyc.royalsundaram.net/eKycServices/ekyc/generateKYCToken";
            let royal_create_service = (config.environment.name === "Production") ? "https://kyc.royalsundaram.in/eKycServices/ekyc/v1/searchDownloadKYCDetails" : "https://ekyc.royalsundaram.net/eKycServices/ekyc/v1/searchDownloadKYCDetails";

            var cust_name = null;
            if (objRequest.Proposal_Request.middle_name === undefined || objRequest.Proposal_Request.middle_name === "" || objRequest.Proposal_Request.middle_name === null) {
                cust_name = ((objRequest.Proposal_Request.first_name === undefined || objRequest.Proposal_Request.first_name === "" || objRequest.Proposal_Request.first_name === null) ? "" : objRequest.Proposal_Request.first_name) + " " +
                        ((objRequest.Proposal_Request.last_name === undefined || objRequest.Proposal_Request.last_name === "" || objRequest.Proposal_Request.last_name === null) ? "" : objRequest.Proposal_Request.last_name);
            } else {
                cust_name = ((objRequest.Proposal_Request.first_name === undefined || objRequest.Proposal_Request.first_name === "" || objRequest.Proposal_Request.first_name === null) ? "" : objRequest.Proposal_Request.first_name) + " " +
                        ((objRequest.Proposal_Request.middle_name === undefined || objRequest.Proposal_Request.middle_name === "" || objRequest.Proposal_Request.middle_name === null) ? "" : objRequest.Proposal_Request.middle_name) + " " +
                        ((objRequest.Proposal_Request.last_name === undefined || objRequest.Proposal_Request.last_name === "" || objRequest.Proposal_Request.last_name === null) ? "" : objRequest.Proposal_Request.last_name);
            }
            let req_txt = {
                "token": "",
                "policyNo": "",
                "quoteNo": objRequest.Quote_Id ? objRequest.Quote_Id : "",
                "appName": "D2C",
                "proposalNo": "",
                "product": product,
                "Lob": "",
                "customerName": cust_name,
                "mobileNo": (proposal_request.mobile === undefined || proposal_request.mobile === "" || proposal_request.mobile === null) ? "" : proposal_request.mobile,
                "emailId": (proposal_request.email === undefined || proposal_request.email === "" || proposal_request.email === null) ? "" : proposal_request.email,
                "panNumber": proposal_request.pan && proposal_request.pan !== "" ? proposal_request.pan : "",
                "dob_doi": proposal_request.birth_date && proposal_request.birth_date !=="" ? proposal_request.birth_date : "",
                "customerType": vehicle_registration_type,
                "uniqueId": objRequest.Quote_Id ? objRequest.Quote_Id : ""
            };
            let args1 = {
                data: {
                    "appId": "D2C",
                    "appKey": "D2C"
                },
                headers: {
                    "Content-Type": "application/json",
                    "Accept": "*/*"
                }
            };
            kyc_fetch_request = req_txt;
            let KYC_Status = "PENDING";
            let kyc_id = 0;
            let token = null;
            var Client = require('node-rest-client').Client;
            var client = new Client();
            let LM_Data = {
                "KYC_Pan_No": objRequest.PAN ? objRequest.PAN : "",
                "KYC_Number": "",
                "KYC_FullName": "",
                "KYC_Ref_No": "",
                "KYC_Redirect_URL": "",
                "KYC_Insurer_ID": objRequest.Insurer_Id,
                "KYC_PB_CRN": objRequest.PB_CRN,
                "KYC_Status": KYC_Status
            };
            client.post(royal_token_service, args1, function (data1, response1) {
                if (data1) {
                    if (data1.hasOwnProperty("token") && data1.token && data1.token !== "" && data1.errorMsg === null) {
                        req_txt['token'] = data1.token;
                        token = data1.token;
                        let args = {
                            data: JSON.stringify(req_txt),
                            headers: {
                                "Content-Type": "application/json",
                                "Accept": "*/*"
                            }
                        };
                        try {
                            if (token) {
                                var client1 = new Client();
                                client1.post(royal_create_service, args, function (data, response) {
                                    if (data) {
                                        kyc_fetch_response = data;
                                        if (data.hasOwnProperty("errorCode") && data.hasOwnProperty("kycStatus") && data.errorCode === null && data.kycStatus === true) {
                                            if (data.hasOwnProperty("kycDetails") && data.kycDetails.ckycNo && data.kycDetails.ckycNo !== "") {
                                                LM_Data['KYC_Number'] = data.kycDetails['ckycNo'];
                                                LM_Data['KYC_Status'] = "FETCH_SUCCESS";
                                                LM_Data['KYC_FullName'] = (data.kycDetails.hasOwnProperty("middleName") && data.kycDetails.middleName === "") ? data.kycDetails.firstName + data.kycDetails.lastName : data.kycDetails.firstName + " " + data.kycDetails.middleName + " " + data.kycDetails.lastName;
                                                LM_Data['KYC_Ref_No'] = data.kycRefNo;
                                            } else {
                                                LM_Data['KYC_Status'] = "FETCH_FAIL";
                                                LM_Data['KYC_Ref_No'] = data.kycRefNo ? data.kycRefNo : "";
                                                LM_Data['KYC_Redirect_URL'] = data.url ? data.url : objRequest.KYC_URL;
                                            }
                                        } else {
                                            LM_Data['KYC_Status'] = "FETCH_FAIL";
                                            LM_Data['KYC_Ref_No'] = data.kycRefNo ? data.kycRefNo : "";
                                            LM_Data['KYC_Redirect_URL'] = data.url ? data.url : objRequest.KYC_URL;
                                        }

                                        try {
                                            let setObj = {
                                                'KYC_Number': LM_Data.KYC_Number,
                                                'KYC_Full_Name': LM_Data.KYC_FullName,
                                                'KYC_Status': LM_Data.KYC_Status,
                                                'Modified_On': new Date(),
                                                'KYC_URL': LM_Data.KYC_Redirect_URL,
                                                'Quote_Id': data.uniqueId ? data.uniqueId : objRequest.Quote_Id
                                            };
                                            let cond = {
                                                'Insurer_Id': objRequest.Insurer_Id - 0,
                                                'PB_CRN': (objRequest.PB_CRN === undefined || objRequest.PB_CRN === "" || objRequest.PB_CRN === null) ? "" : objRequest.PB_CRN - 0
                                            };
                                            kyc_detail.update(cond, {$set: setObj}, function (err, users) {
                                                if (err) {
                                                    res.json({"Insurer": "Royal Sundaram", "Msg": err, "Status": "FAIL"});
                                                } else {
                                                    //res.json({"Insurer": "Royal Sundaram", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                                }
                                            });
                                            let queryObj1 = {
                                                'PB_CRN': objRequest.PB_CRN ? objRequest.PB_CRN : "",
                                                'User_Data_Id': objRequest.User_Data_Id ? objRequest.User_Data_Id : "",
                                                'Insurer_Id': objRequest.Insurer_Id,
                                                'Product_Id': objRequest.Product_Id ? objRequest.Product_Id : "",
                                                'PAN': (objRequest.PAN === undefined || objRequest.PAN === "" || objRequest.PAN === null) ? "" : objRequest.PAN,
                                                'Aadhaar': (objRequest.Aadhaar === undefined || objRequest.Aadhaar === "" || objRequest.Aadhaar === null) ? "" : objRequest.Aadhaar,
                                                'DOB': (objRequest.DOB === undefined || objRequest.DOB === "" || objRequest.DOB === null) ? "" : objRequest.DOB,
                                                'Full_Name': objRequest.Proposal_Request['middle_name'] === "" ? (objRequest.Proposal_Request['first_name'] + " " + objRequest.Proposal_Request['last_name']) : (objRequest.Proposal_Request['first_name'] + " " + objRequest.Proposal_Request['middle_name'] + " " + objRequest.Proposal_Request['last_name']),
                                                'Mobile': (objRequest.Mobile === undefined || objRequest.Mobile === "" || objRequest.Mobile === null) ? "" : objRequest.Mobile - 0,
                                                'Email': (objRequest.Email === undefined || objRequest.Email === "" || objRequest.Email === null) ? "" : objRequest.Email,
                                                'KYC_Number': LM_Data.KYC_Number,
                                                'Search_Type': objRequest.Search_Type ? objRequest.Search_Type : "",
                                                'KYC_Status': LM_Data.KYC_Status,
                                                'PAN_Doc': objRequest.PAN_Doc ? objRequest.PAN_Doc : "",
                                                'Aadhar_Doc': objRequest.Aadhar_Doc ? objRequest.Aadhar_Doc : "",
                                                'KYC_URL': LM_Data.KYC_Redirect_URL,
                                                'Created_On': new Date(),
                                                'Modified_On': new Date(),
                                                'Proposal_Id': (objRequest.Proposal_Id === undefined || objRequest.Proposal_Id === "" || objRequest.Proposal_Id === null) ? "" : objRequest.Proposal_Id,
                                                'Quote_Id': (objRequest.Quote_Id === undefined || objRequest.Quote_Id === "" || objRequest.Quote_Id === null) ? "" : objRequest.Quote_Id,
                                                'KYC_Request_Core': kyc_fetch_request,
                                                'KYC_Response_Core': kyc_fetch_response
                                            };
                                            var kyc_history1 = new kyc_history(queryObj1);
                                            kyc_history1.save(queryObj1, function (err, users) {
                                                if (err) {
                                                    res.json({"Insurer": "Royal Sundaram", "Msg": err, "Status": "FAIL"});
                                                } else {
                                                    //res.json({"Insurer": "Royal Sundaram", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                                }
                                            });
                                        } catch (e) {
                                            res.json({"Insurer": "Royal Sundaram", "Msg": e.stack, "Status": "FAIL"});
                                        }
                                        res.json({"Insurer": "Royal Sundaram", "Msg": LM_Data, "Status": LM_Data.KYC_Status});
                                    } else {
                                        res.json({"Insurer": "Royal Sundaram", "Msg": "KYC verify services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                                    }
                                });
                            } else {
                                res.json({"Insurer": "Royal Sundaram", "Msg": "Could Not Generate Token. Please try again later.", "Status": "FAIL"});
                            }
                        } catch (e2) {
                            res.json({"Insurer": "Royal Sundaram", "Msg": e2.stack, "Status": "FAIL"});
                        }
                    } else {
                        res.json({"Insurer": "Royal Sundaram", "Msg": "KYC-Token not generated. Please try again later.", "Status": "FAIL"});
                    }
                } else {
                    res.json({"Insurer": "Royal Sundaram", "Msg": "KYC-Token generation services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                }
            });
        } catch (e1) {
            res.json({"Insurer": "Royal Sundaram", "Msg": e1.stack, "Status": "FAIL"});
        }
    });

    app.post('/kyc_details/royal_verify_kyc_details', function (req, res) {
        try {
            let objRequest = req.body;
            let kyc_fetch_request = "";
            let kyc_fetch_response = "";
            let royal_token_service = (config.environment.name === "Production") ? "https://kyc.royalsundaram.in/eKycServices/ekyc/generateKYCToken" : "https://ekyc.royalsundaram.net/eKycServices/ekyc/generateKYCToken";
            let royal_verify_service =(config.environment.name === "Production") ? "https://kyc.royalsundaram.in/eKycServices/ekyc/v1/getKycStatusResults" : "https://ekyc.royalsundaram.net/eKycServices/ekyc/v1/getKycStatusResults";
            var user_kyc_no = (objRequest.KYC_Number === undefined || objRequest.KYC_Number === "" || objRequest.KYC_Number === null) ? "" : objRequest.KYC_Number;
            var cust_name = null;
            if (objRequest.Proposal_Request.middle_name === undefined || objRequest.Proposal_Request.middle_name === "" || objRequest.Proposal_Request.middle_name === null) {
                cust_name = ((objRequest.Proposal_Request.first_name === undefined || objRequest.Proposal_Request.first_name === "" || objRequest.Proposal_Request.first_name === null) ? "" : objRequest.Proposal_Request.first_name) + " " +
                        ((objRequest.Proposal_Request.last_name === undefined || objRequest.Proposal_Request.last_name === "" || objRequest.Proposal_Request.last_name === null) ? "" : objRequest.Proposal_Request.last_name);
            } else {
                cust_name = ((objRequest.Proposal_Request.first_name === undefined || objRequest.Proposal_Request.first_name === "" || objRequest.Proposal_Request.first_name === null) ? "" : objRequest.Proposal_Request.first_name) + " " +
                        ((objRequest.Proposal_Request.middle_name === undefined || objRequest.Proposal_Request.middle_name === "" || objRequest.Proposal_Request.middle_name === null) ? "" : objRequest.Proposal_Request.middle_name) + " " +
                        ((objRequest.Proposal_Request.last_name === undefined || objRequest.Proposal_Request.last_name === "" || objRequest.Proposal_Request.last_name === null) ? "" : objRequest.Proposal_Request.last_name);
            }
            let req_txt = {
                "uniqueId": objRequest.Quote_Id
            };
            let args1 = {
                data: {
                    "appId": "D2C",
                    "appKey": "D2C"
                },
                headers: {
                    "Content-Type": "application/json",
                    "Accept": "*/*"
                }
            };
            kyc_fetch_request = req_txt;
            let KYC_Status = "VERIFY_FAIL";
            let kyc_id = 0;
            let token = null;
            var Client = require('node-rest-client').Client;
            var client = new Client();
            let LM_Data = {
                "KYC_Pan_No": objRequest.PAN ? objRequest.PAN : "",
                "KYC_Number": "",
                "KYC_FullName": "",
                "KYC_Ref_No": "",
                "KYC_Redirect_URL": "",
                "KYC_Insurer_ID": objRequest.Insurer_Id,
                "KYC_PB_CRN": objRequest.PB_CRN,
                "KYC_Status": KYC_Status
            };
            client.post(royal_token_service, args1, function (data1, response1) {
                if (data1) {
                    if (data1.hasOwnProperty("token") && data1.token && data1.token !== "" && data1.errorMsg === null) {
                        req_txt['token'] = data1.token;
                        token = data1.token;
                        let args = {
                            data: JSON.stringify(req_txt),
                            headers: {
                                "Content-Type": "application/json",
                                "Accept": "*/*",
                                "TokenKey": ""
                            }
                        };
                        try {
                            if (token) {
                                args.headers.TokenKey = token;
                                var client1 = new Client();
                                client1.post(royal_verify_service, args, function (data, response) {
                                    if (data) {
                                        kyc_fetch_response = data;
                                        if (data && data.hasOwnProperty("applicationStatus") && data.applicationStatus === "Success") {
                                                LM_Data['KYC_Number'] = data['ckycNo'];
                                                LM_Data['KYC_Status'] = "VERIFY_SUCCESS";
                                                LM_Data['KYC_FullName'] = (data.hasOwnProperty("middleName") && data.middleName === "") ? data.firstName + data.lastName : data.firstName + " " + data.middleName + " " + data.lastName;
                                                LM_Data['KYC_Ref_No'] = data['kycRefNo'];
                                            } else {
                                                LM_Data['KYC_Status'] = "VERIFY_FAIL";
                                            LM_Data['KYC_Ref_No'] = data['kycRefNo'] ? data['kycRefNo'] : "";
                                                LM_Data['KYC_Redirect_URL'] = data.url ? data.url : objRequest.KYC_URL;
                                            }

                                        try {
                                            let setObj = {
                                                'KYC_Number': LM_Data.KYC_Number,
                                                'KYC_Full_Name': LM_Data.KYC_FullName,
                                                'KYC_Status': LM_Data.KYC_Status,
                                                'Modified_On': new Date(),
                                                'KYC_URL': LM_Data.KYC_Redirect_URL,
                                                'Quote_Id': data.uniqueId ? data.uniqueId : objRequest.Quote_Id
                                            };
                                            let cond = {
                                                'Insurer_Id': objRequest.Insurer_Id - 0,
                                                'PB_CRN': (objRequest.PB_CRN === undefined || objRequest.PB_CRN === "" || objRequest.PB_CRN === null) ? "" : objRequest.PB_CRN - 0
                                            };
                                            kyc_detail.update(cond, {$set: setObj}, function (err, users) {
                                                if (err) {
                                                    res.json({"Insurer": "Royal Sundaram", "Msg": err, "Status": "FAIL"});
                                                } else {
                                                    //res.json({"Insurer": "Royal Sundaram", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                                }
                                            });
                                            let queryObj1 = {
                                                'PB_CRN': objRequest.PB_CRN ? objRequest.PB_CRN : "",
                                                'User_Data_Id': objRequest.User_Data_Id ? objRequest.User_Data_Id : "",
                                                'Insurer_Id': objRequest.Insurer_Id,
                                                'Product_Id': objRequest.Product_Id ? objRequest.Product_Id : "",
                                                'PAN': (objRequest.PAN === undefined || objRequest.PAN === "" || objRequest.PAN === null) ? "" : objRequest.PAN,
                                                'Aadhaar': (objRequest.Aadhaar === undefined || objRequest.Aadhaar === "" || objRequest.Aadhaar === null) ? "" : objRequest.Aadhaar,
                                                'DOB': (objRequest.DOB === undefined || objRequest.DOB === "" || objRequest.DOB === null) ? "" : objRequest.DOB,
                                                'Full_Name': objRequest.Proposal_Request['middle_name'] === "" ? (objRequest.Proposal_Request['first_name'] + " " + objRequest.Proposal_Request['last_name']) : (objRequest.Proposal_Request['first_name'] + " " + objRequest.Proposal_Request['middle_name'] + " " + objRequest.Proposal_Request['last_name']),
                                                'Mobile': (objRequest.Mobile === undefined || objRequest.Mobile === "" || objRequest.Mobile === null) ? "" : objRequest.Mobile - 0,
                                                'Email': (objRequest.Email === undefined || objRequest.Email === "" || objRequest.Email === null) ? "" : objRequest.Email,
                                                'KYC_Number': LM_Data.KYC_Number,
                                                'Search_Type': objRequest.Search_Type ? objRequest.Search_Type : "",
                                                'KYC_Status': LM_Data.KYC_Status,
                                                'PAN_Doc': objRequest.PAN_Doc ? objRequest.PAN_Doc : "",
                                                'Aadhar_Doc': objRequest.Aadhar_Doc ? objRequest.Aadhar_Doc : "",
                                                'KYC_URL': LM_Data.KYC_Redirect_URL,
                                                'Created_On': new Date(),
                                                'Modified_On': new Date(),
                                                'Proposal_Id': (objRequest.Proposal_Id === undefined || objRequest.Proposal_Id === "" || objRequest.Proposal_Id === null) ? "" : objRequest.Proposal_Id,
                                                'Quote_Id':  data.uniqueId ? data.uniqueId : objRequest.Quote_Id ? objRequest.Quote_Id : "",
                                                'KYC_Request_Core': kyc_fetch_request,
                                                'KYC_Response_Core': kyc_fetch_response
                                            };
                                            var kyc_history1 = new kyc_history(queryObj1);
                                            kyc_history1.save(queryObj1, function (err, users) {
                                                if (err) {
                                                    res.json({"Insurer": "Royal Sundaram", "Msg": err, "Status": "FAIL"});
                                                } else {
                                                    //res.json({"Insurer": "Royal Sundaram", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                                }
                                            });
                                        } catch (e) {
                                            res.json({"Insurer": "Royal Sundaram", "Msg": e.stack, "Status": "FAIL"});
                                        }
                                        res.json({"Insurer": "Royal Sundaram", "Msg": LM_Data, "Status": LM_Data.KYC_Status});
                                    } else {
                                        res.json({"Insurer": "Royal Sundaram", "Msg": "KYC verify services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                                    }
                                });
                            } else {
                                res.json({"Insurer": "Royal Sundaram", "Msg": "Could Not Generate Token. Please try again later.", "Status": "FAIL"});
                            }
                        } catch (e2) {
                            res.json({"Insurer": "Royal Sundaram", "Msg": e2.stack, "Status": "FAIL"});
                        }
                    } else {
                        res.json({"Insurer": "Royal Sundaram", "Msg": "KYC-Token not generated. Please try again later.", "Status": "FAIL"});
                    }
                } else {
                    res.json({"Insurer": "Royal Sundaram", "Msg": "KYC-Token generation services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                }
            });
        } catch (e1) {
            res.json({"Insurer": "Royal Sundaram", "Msg": e1.stack, "Status": "FAIL"});
        }
    });

    app.post('/kyc_details/bajaj_fetch_kyc_details', function (req, res) {
        try {
            let ObjRequest = req.body;
            let proposal_request = ObjRequest.hasOwnProperty('Proposal_Request') && ObjRequest.Proposal_Request ? ObjRequest.Proposal_Request : {};
            let kyc_fetch_request = "";
            let kyc_fetch_response = "";
            let vehicle_registration_type = (ObjRequest.vehicle_registration_type === undefined || ObjRequest.vehicle_registration_type === "" || ObjRequest.vehicle_registration_type === null) ? "I" : (ObjRequest.vehicle_registration_type.toLowerCase() === "corporate" ? "O" : "I");
            let req_txt = {
                "docTypeCode": "C",
                "docNumber": (ObjRequest.PAN === undefined || ObjRequest.PAN === "" || ObjRequest.PAN === null) ? "" : ObjRequest.PAN,
                "fieldType": "PROPOSAL_NUMBER",
                "fieldValue": (ObjRequest.Quote_Id === undefined || ObjRequest.Quote_Id === "" || ObjRequest.Quote_Id === null) ? "" : ObjRequest.Quote_Id,
                "dob": (ObjRequest.DOB === undefined || ObjRequest.DOB === "" || ObjRequest.DOB === null) ? "" : moment(ObjRequest.DOB, 'DD/MM/YYYY').format('DD-MMM-YYYY'),
                "appType": "KYC_WS_BROKER",
                "productCode": "3313",
                "sysType": "OPUS",
                "locationCode": "9906",
                "userId": (ObjRequest.PB_CRN === undefined || ObjRequest.PB_CRN === "" || ObjRequest.PB_CRN === null) ? "" : ObjRequest.PB_CRN,
                "kycType": "03",
                "customerType": vehicle_registration_type,
                "passportFileNumber": "",
                "gender": (proposal_request.gender === undefined || proposal_request.gender === "" || proposal_request.gender === null) ? "" : proposal_request.gender,
                "field1": "MOTOR"
            };
            let args = {
                data: JSON.stringify(req_txt),
                headers: {
                    "Content-Type": "application/json",
                    "Accept": "application/json"
                }
            };
            let token_req = {
                "sub": "KYC_WS_BROKER",
                "exp": 1668407854,
                "iat": 1668406054
            };
            let args_token = {
                data: JSON.stringify(token_req)
            };
            let KYC_Status = "FETCH_FAIL";
            let kyc_id = 0;
            var Client = require('node-rest-client').Client;
            var client = new Client();
            let LM_Data = {
                "KYC_Pan_No": "",
                "KYC_Number": "",
                "KYC_FullName": "",
                "KYC_Ref_No": "",
                "KYC_Redirect_URL": "",
                "KYC_Insurer_ID": "",
                "KYC_PB_CRN": ObjRequest.PB_CRN,
                "KYC_Status": KYC_Status
            };
            let token = jwt.encode(token_req, secret, 'HS512');
            try {
                var key = CryptoJS.enc.Utf8.parse("kycwsbrkmotr2023");
                var iv = CryptoJS.enc.Utf8.parse("kycwsbrkmotr2023");
                let encrypted_req = CryptoJS.AES.encrypt(JSON.stringify(req_txt), key, {iv: iv}).toString();
                kyc_fetch_request = encrypted_req;
                let temp_args = {"payload": encrypted_req};
                let args1 = {
                    data: JSON.stringify(temp_args),
                    headers: {
                        "Content-Type": "application/json",
                        "BusinessCorelationId": "36c18e93-ac17-4990-8451-e1929f42ea88"
                    }
                };
                //token = "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJLWUNfV1NfQlJPS0VSIiwiZXhwIjoxNjY4NDA3ODU0LCJpYXQiOjE2Njg0MDYwNTR9.oMZmDrYKBqb-5OOmb8fLyq1UxJHBRMeWV3cD8uRkI0iRBwfOXABRliBn_AsLFx8DhQxa2rxVkp32AAf868LJxg";
                config.environment.name !== 'Production' ? (args1.headers.Auth = 'Bearer ' + token) : (args1.headers.Authorization = 'Bearer ' + token);
                console.log(JSON.stringify(args1));
                client.post("https://api.bagicuat.bajajallianz.com/csckyc/validateCkycDetails", args1, function (data, response) {
                    if (data) {
                        kyc_fetch_response = data;
                        var key = CryptoJS.enc.Utf8.parse("kycwsbrkmotr2023");
                        var iv = CryptoJS.enc.Utf8.parse("kycwsbrkmotr2023");
                        var decrypted = CryptoJS.AES.decrypt(data.payload, key, {iv: iv});
                        let val = decrypted.toString(CryptoJS.enc.Utf8);
                        let decrypted_res = JSON.parse(val);

                        //kyc_fetch_response = decrypted_res; // kyc_insurer_response
                        if (decrypted_res.hasOwnProperty("kycStatus") && decrypted_res.kycStatus === "KYC_SUCCESS" && decrypted_res.hasOwnProperty("ckycNumber") && decrypted_res["ckycNumber"]) {
                            LM_Data.KYC_Status = "FETCH_SUCCESS";
                            LM_Data.KYC_Number = decrypted_res["ckycNumber"];
                            LM_Data.KYC_FullName = (decrypted_res.hasOwnProperty("fullName")) ? decrypted_res.fullName : "";
                        } else {
                            LM_Data.KYC_Status = "FETCH_FAIL";
                            LM_Data.KYC_Number = decrypted_res.hasOwnProperty("ckycNumber") ? decrypted_res["ckycNumber"] : '';
                        }
                        try {
                            let cond = {
                                'Insurer_Id': ObjRequest.Insurer_Id - 0,
                                'PB_CRN': (ObjRequest.PB_CRN === undefined || ObjRequest.PB_CRN === "" || ObjRequest.PB_CRN === null) ? "" : ObjRequest.PB_CRN - 0
//                                                      'User_Data_Id': (ObjRequest.User_Data_Id === undefined || ObjRequest.User_Data_Id === "" || ObjRequest.User_Data_Id === null) ? 0 : ObjRequest.User_Data_Id - 0
                            };
                            let setObj = {
                                'KYC_Number': LM_Data.KYC_Number,
                                'KYC_Full_Name': LM_Data.KYC_FullName,
                                'KYC_Status': LM_Data.KYC_Status,
                                'Modified_On': new Date(),
                                'KYC_URL': LM_Data.KYC_Redirect_URL
                            };
                            kyc_detail.update(cond, {$set: setObj}, function (err, users) {
                                if (err) {
                                    res.json({"Insurer": "Edelweiss", "Msg": err, "Status": "FAIL"});
                                } else {
                                    //res.json({"Insurer": "Edelweiss", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                }
                            });
                            let queryObj1 = {
                                'PB_CRN': ObjRequest.PB_CRN ? ObjRequest.PB_CRN : "",
                                'User_Data_Id': ObjRequest.User_Data_Id ? ObjRequest.User_Data_Id : "",
                                'Insurer_Id': ObjRequest.Insurer_Id,
                                'Product_Id': ObjRequest.Product_Id ? ObjRequest.Product_Id : "",
                                'PAN': (ObjRequest.PAN === undefined || ObjRequest.PAN === "" || ObjRequest.PAN === null) ? "" : ObjRequest.PAN,
                                'Aadhar': (ObjRequest.Aadhaar === undefined || ObjRequest.Aadhaar === "" || ObjRequest.Aadhaar === null) ? "" : ObjRequest.Aadhaar,
                                'DOB': (ObjRequest.DOB === undefined || ObjRequest.DOB === "" || ObjRequest.DOB === null) ? "" : ObjRequest.DOB,
                                'Full_Name': ObjRequest.Proposal_Request['middle_name'] === "" ? (ObjRequest.Proposal_Request['first_name'] + " " + ObjRequest.Proposal_Request['last_name']) : (ObjRequest.Proposal_Request['first_name'] + " " + ObjRequest.Proposal_Request['middle_name'] + " " + ObjRequest.Proposal_Request['last_name']),
                                'KYC_Full_Name': LM_Data.KYC_FullName,
                                'Mobile': (ObjRequest.Mobile === undefined || ObjRequest.Mobile === "" || ObjRequest.Mobile === null) ? "" : ObjRequest.Mobile - 0,
                                'Email': (ObjRequest.Email === undefined || ObjRequest.Email === "" || ObjRequest.Email === null) ? "" : ObjRequest.Email,
                                'KYC_Number': LM_Data.KYC_Number,
                                'Search_Type': ObjRequest.Search_Type ? ObjRequest.Search_Type : "",
                                'KYC_Status': LM_Data.KYC_Status,
                                'PAN_Doc': ObjRequest.PAN_Doc ? ObjRequest.PAN_Doc : "",
                                'Aadhar_Doc': ObjRequest.Aadhar_Doc ? ObjRequest.Aadhar_Doc : "",
                                'KYC_URL': LM_Data.KYC_Redirect_URL,
                                'Created_On': new Date(),
                                'Modified_On': new Date(),
                                //'Proposal_Request': (ObjRequest.Proposal_Request === undefined || ObjRequest.Proposal_Request === "" || ObjRequest.Proposal_Request === null) ? "" : ObjRequest.Proposal_Request,
                                'Proposal_Id': (ObjRequest.Proposal_Id === undefined || ObjRequest.Proposal_Id === "" || ObjRequest.Proposal_Id === null) ? "" : ObjRequest.Proposal_Id,
                                'Quote_Id': (ObjRequest.Quote_Id === undefined || ObjRequest.Quote_Id === "" || ObjRequest.Quote_Id === null) ? "" : ObjRequest.Quote_Id,
                                'KYC_Request_Core': kyc_fetch_request,
                                'KYC_Response_Core': kyc_fetch_response
                            };
                            var kyc_history1 = new kyc_history(queryObj1);
                            kyc_history1.save(queryObj1, function (err, users) {
                                if (err) {
                                    res.json({"Insurer": "BAJAJ", "Msg": err, "Status": "FAIL"});
                                } else {
                                    //res.json({"Insurer": "BAJAJ", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                }
                            });
                        } catch (e) {
                            res.json({"Insurer": "BAJAJ", "Msg": e.stack, "Status": "FAIL"});
                        }
                        res.json({"Insurer": "BAJAJ", "Msg": LM_Data, "Status": LM_Data.KYC_Status});
                        res.json({"Insurer": "BAJAJ", "Msg": LM_Data, "Status": LM_Data.KYC_Status});
                    } else {
                        res.json({"Insurer": "BAJAJ", "Msg": "KYC fetch services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                    }
                });
            } catch (e2) {
                res.json({"Insurer": "BAJAJ", "Msg": e2.stack, "Status": "FAIL"});
            }
        } catch (e1) {
            res.json({"Insurer": "BAJAJ", "Msg": e1.stack, "Status": "FAIL"});
        }
    });

    app.post('/kyc_details/bajaj_create_kyc_details', function (req, res) {
        try {
            let ObjRequest = req.body;
            let proposal_request = ObjRequest.hasOwnProperty('Proposal_Request') && ObjRequest.Proposal_Request ? ObjRequest.Proposal_Request : {};
            let kyc_create_request = "";
            let kyc_create_response = "";
            let vehicle_registration_type = (ObjRequest.vehicle_registration_type === undefined || ObjRequest.vehicle_registration_type === "" || ObjRequest.vehicle_registration_type === null) ? "I" : (ObjRequest.vehicle_registration_type.toLowerCase() === "corporate" ? "O" : "I");
            var user_kyc_no = (ObjRequest.user_kyc_no === undefined || ObjRequest.user_kyc_no === "" || ObjRequest.user_kyc_no === null) ? "" : ObjRequest.user_kyc_no;
            let req_txt = {
                "appType": "KYC_WS_BROKER",
                "fieldType": "PROPOSAL_NUMBER",
                "fieldValue": (ObjRequest.Quote_Id === undefined || ObjRequest.Quote_Id === "" || ObjRequest.Quote_Id === null) ? "" : ObjRequest.Quote_Id,
                "kycDocumentType": "POI",
                "kycDocumentCategory": "C",
                "documentNumber": (proposal_request.pan === undefined || proposal_request.pan === "" || proposal_request.pan === null) ? "" : proposal_request.pan,
                "documentExtension": (ObjRequest.PAN_Doc_Extension === undefined || ObjRequest.PAN_Doc_Extension === "" || ObjRequest.PAN_Doc_Extension === null) ? "" : ObjRequest.PAN_Doc_Extension.toLowerCase(),
                "documentArray": (ObjRequest.PAN_Doc === undefined || ObjRequest.PAN_Doc === "" || ObjRequest.PAN_Doc === null) ? "" : ObjRequest.PAN_Doc
            };
            let token_req = {
                "sub": "KYC_WS_BROKER",
                "exp": 1668407854,
                "iat": 1668406054
            };
            let KYC_Status = "CREATE_FAIL";
            var Client = require('node-rest-client').Client;
            var client = new Client();
            let LM_Data = {
                "KYC_Pan_No": "",
                "KYC_Number": "",
                "KYC_FullName": "",
                "KYC_Ref_No": "",
                "KYC_Redirect_URL": "",
                "KYC_Insurer_ID": "",
                "KYC_PB_CRN": ObjRequest.PB_CRN,
                "KYC_Status": KYC_Status
            };
            /* IMAGE SAVE START */
            let path = appRoot + "/tmp/kyc_documents";
            let doc = [];
            let aadhar_path = '';
            let pan_path = '';
            if (ObjRequest.PAN_Doc) {
                doc.push({'doc_type':'PAN','doc_name': ObjRequest.PAN_Doc_FileName, 'doc_data': ObjRequest.PAN_Doc});
                pan_path = appRoot + "/tmp/kyc_documents/" + ObjRequest.PB_CRN + "_" + ObjRequest.PAN + "_"  + ObjRequest.Insurer_Id + "." + ObjRequest.PAN_Doc_Extension;
            }
            if (ObjRequest.Aadhar_Doc) {
                doc.push({'doc_type':'Aadhar','doc_name': ObjRequest.Aadhar_Doc_FileName, 'doc_data': ObjRequest.Aadhar_Doc});
                aadhar_path = appRoot + "/tmp/kyc_documents/" + ObjRequest.PB_CRN + "_" + ObjRequest.Aadhar + "_"  + ObjRequest.Insurer_Id + "." + ObjRequest.Aadhar_Doc_Extension;
            }
            try {
                for (var i = 0; i < doc.length; i++) {
                    var doc_decoded = decodeURIComponent(doc[i]['doc_data']);
                    if (!fs.existsSync(appRoot + "/tmp/kyc_documents")) {
                        fs.mkdirSync(appRoot + "/tmp/kyc_documents");
                    }
                    if (fs.existsSync(path)) {
                        var data = doc_decoded.replace(/^data:image\/\w+;base64,/, "");
                        if (data === "") {
                            res.json({"Insurer": "BAJAJ", "Msg": 'Document Unavailable', "Status": KYC_Status});
                        } else {
                            var buf = new Buffer(data, 'base64');
                            if(doc[i]['doc_type'] == "PAN"){
                                fs.writeFileSync(pan_path, buf);
                            }else{
                                fs.writeFileSync(aadhar_path, buf);
                            }
                        }
                    }
                }
            } catch (err) {
                res.json({"Insurer": "BAJAJ", "Msg": err.stack, "Status": "FAIL"});
            }
            /* IMAGE SAVE END */
            let token = jwt.encode(token_req, secret, 'HS512');
            try {
                let args = {
                    data: JSON.stringify(req_txt),
                    headers: {
                        "Content-Type": "application/json",
                        "BusinessCorelationId": "36c18e93-ac17-4990-8451-e1929f42ea88"
                    }
                };
                kyc_create_request = req_txt;
                //token = "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJLWUNfV1NfQlJPS0VSIiwiZXhwIjoxNjY4NDA3ODU0LCJpYXQiOjE2Njg0MDYwNTR9.oMZmDrYKBqb-5OOmb8fLyq1UxJHBRMeWV3cD8uRkI0iRBwfOXABRliBn_AsLFx8DhQxa2rxVkp32AAf868LJxg";
                config.environment.name !== 'Production' ? (args.headers.Auth = 'Bearer ' + token) : (args1.headers.Authorization = 'Bearer ' + token);
                client.post("https://api.bagicuat.bajajallianz.com/csckyc/uploadKYCDocument", args, function (data, response) {
                    if (data) {
                        kyc_create_response = data;
                        if (data && data.hasOwnProperty("documentUploadStatus") && data.documentUploadStatus) {
                            if(data.documentUploadStatus.hasOwnProperty("poiDocUploadStatus") &&  data.documentUploadStatus.poiDocUploadStatus &&  data.documentUploadStatus.poiDocUploadStatus.toLowerCase() === "success"){
                                LM_Data.KYC_Status = "CREATE_SUCCESS";
                                LM_Data.KYC_Number = data.hasOwnProperty("ckycNumber") ? data["ckycNumber"] : '';
                                LM_Data.KYC_FullName = (data.hasOwnProperty("fullName")) ? data.fullName : "";
                            }else {
                                LM_Data.KYC_Status = "CREATE_FAIL";
                                LM_Data.KYC_Number = data.hasOwnProperty("ckycNumber") ? data["ckycNumber"] : '';
                            }
                        } else {
                            LM_Data.KYC_Status = "CREATE_FAIL";
                            LM_Data.KYC_Number = data.hasOwnProperty("ckycNumber") ? data["ckycNumber"] : '';
                        }
                        try {
                        let cond = {
                            'Insurer_Id': ObjRequest.Insurer_Id - 0,
                            'PB_CRN': (ObjRequest.PB_CRN === undefined || ObjRequest.PB_CRN === "" || ObjRequest.PB_CRN === null) ? "" : ObjRequest.PB_CRN - 0
//                                                'User_Data_Id': (ObjRequest.User_Data_Id === undefined || ObjRequest.User_Data_Id === "" || ObjRequest.User_Data_Id === null) ? 0 : ObjRequest.User_Data_Id - 0
                        };
                        let setObj = {
                            'KYC_Number': LM_Data.KYC_Number,
                            'KYC_Full_Name': LM_Data.KYC_FullName,
                            'KYC_Status': LM_Data.KYC_Status,
                            'Modified_On': new Date(),
                            'KYC_URL': LM_Data.KYC_Redirect_URL
                        };
                        kyc_detail.update(cond, {$set: setObj}, function (err, users) {
                            if (err) {
                                res.json({"Insurer": "BAJAJ", "Msg": err, "Status": "FAIL"});
                            } else {
                                //res.json({"Insurer": "BAJAJ", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                            }
                        });
                        kyc_create_request['documentArray'] = ObjRequest.PAN_Doc_FileName;
                        let queryObj1 = {
                            'PB_CRN': ObjRequest.PB_CRN ? ObjRequest.PB_CRN : "",
                            'User_Data_Id': ObjRequest.User_Data_Id ? ObjRequest.User_Data_Id : "",
                            'Insurer_Id': ObjRequest.Insurer_Id,
                            'Product_Id': ObjRequest.Product_Id ? ObjRequest.Product_Id : "",
                            'PAN': (ObjRequest.PAN === undefined || ObjRequest.PAN === "" || ObjRequest.PAN === null) ? "" : ObjRequest.PAN,
                            'Aadhar': (ObjRequest.Aadhaar === undefined || ObjRequest.Aadhaar === "" || ObjRequest.Aadhaar === null) ? "" : ObjRequest.Aadhaar,
                            'DOB': (ObjRequest.DOB === undefined || ObjRequest.DOB === "" || ObjRequest.DOB === null) ? "" : ObjRequest.DOB,
                            'Full_Name': ObjRequest.Proposal_Request['middle_name'] === "" ? (ObjRequest.Proposal_Request['first_name'] + " " + ObjRequest.Proposal_Request['last_name']) : (ObjRequest.Proposal_Request['first_name'] + " " + ObjRequest.Proposal_Request['middle_name'] + " " + ObjRequest.Proposal_Request['last_name']),
                            'Mobile': (ObjRequest.Mobile === undefined || ObjRequest.Mobile === "" || ObjRequest.Mobile === null) ? "" : ObjRequest.Mobile - 0,
                            'Email': (ObjRequest.Email === undefined || ObjRequest.Email === "" || ObjRequest.Email === null) ? "" : ObjRequest.Email,
                            'KYC_Number': LM_Data.KYC_Number,
                            'Search_Type': ObjRequest.Search_Type ? ObjRequest.Search_Type : "",
                            'KYC_Status': LM_Data.KYC_Status,
                            'PAN_Doc': ObjRequest.PAN_Doc_FileName ? ObjRequest.PAN_Doc_FileName :"",//ObjRequest.PAN_Doc ? ObjRequest.PAN_Doc : "",
                            'Aadhar_Doc': ObjRequest.Aadhar_Doc ? ObjRequest.Aadhar_Doc : "",
                            'KYC_URL': LM_Data.KYC_Redirect_URL,
                            'Created_On': new Date(),
                            'Modified_On': new Date(),
                            //'Proposal_Request': (ObjRequest.Proposal_Request === undefined || ObjRequest.Proposal_Request === "" || ObjRequest.Proposal_Request === null) ? "" : ObjRequest.Proposal_Request,
                            'Proposal_Id': (ObjRequest.Proposal_Id === undefined || ObjRequest.Proposal_Id === "" || ObjRequest.Proposal_Id === null) ? "" : ObjRequest.Proposal_Id,
                            'Quote_Id': (ObjRequest.Quote_Id === undefined || ObjRequest.Quote_Id === "" || ObjRequest.Quote_Id === null) ? "" : ObjRequest.Quote_Id,
                            'KYC_Request_Core': kyc_create_request,
                            'KYC_Response_Core': kyc_create_response
                        };
                        var kyc_history1 = new kyc_history(queryObj1);
                        kyc_history1.save(queryObj1, function (err, users) {
                            if (err) {
                                res.json({"Insurer": "BAJAJ", "Msg": err, "Status": "FAIL"});
                            } else {
                                //res.json({"Insurer": "BAJAJ", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                            }
                        });
                    } catch (e) {
                        res.json({"Insurer": "BAJAJ", "Msg": e.stack, "Status": "FAIL"});
                    }
                        res.json({"Insurer": "BAJAJ", "Msg": LM_Data, "Status": LM_Data.KYC_Status});
                    } else {
                        res.json({"Insurer": "BAJAJ", "Msg": "KYC create service failed due to technical issue. Please try again later.", "Status": "FAIL"});
                    }
                });
            } catch (e2) {
                res.json({"Insurer": "BAJAJ", "Msg": e2.stack, "Status": "FAIL"});
            }
        } catch (e1) {
            res.json({"Insurer": "BAJAJ", "Msg": e1.stack, "Status": "FAIL"});
        }
    });

    app.post('/kyc_details/bajaj_verify_kyc_details', function (req, res) {
        try {
            let ObjRequest = req.body;
            let proposal_request = ObjRequest.hasOwnProperty('Proposal_Request') && ObjRequest.Proposal_Request ? ObjRequest.Proposal_Request : {};
            let kyc_verify_request = "";
            let kyc_verify_response = "";
            let vehicle_registration_type = (ObjRequest.vehicle_registration_type === undefined || ObjRequest.vehicle_registration_type === "" || ObjRequest.vehicle_registration_type === null) ? "I" : (ObjRequest.vehicle_registration_type.toLowerCase() === "corporate" ? "O" : "I");
            var user_kyc_no = (ObjRequest.user_kyc_no === undefined || ObjRequest.user_kyc_no === "" || ObjRequest.user_kyc_no === null) ? "" : ObjRequest.user_kyc_no;
            let req_txt = {
                "docTypeCode": "Z",
                "docNumber": user_kyc_no,
                "fieldType": "PROPOSAL_NUMBER",
                "fieldValue": (ObjRequest.PB_CRN === undefined || ObjRequest.PB_CRN === "" || ObjRequest.PB_CRN === null) ? "" : ObjRequest.PB_CRN,
                "dob": (ObjRequest.DOB === undefined || ObjRequest.DOB === "" || ObjRequest.DOB === null) ? "" : moment(ObjRequest.DOB, 'DD/MM/YYYY').format('DD-MMM-YYYY'),
                "appType": "KYC_WS_BROKER",
                "productCode": "3313",
                "sysType": "OPUS",
                "locationCode": "9906",
                "userId": (ObjRequest.PB_CRN === undefined || ObjRequest.PB_CRN === "" || ObjRequest.PB_CRN === null) ? "" : ObjRequest.PB_CRN,
                "kycType": "03",
                "customerType": vehicle_registration_type,
                "passportFileNumber": "",
                "gender": (proposal_request.gender === undefined || proposal_request.gender === "" || proposal_request.gender === null) ? "" : proposal_request.gender,
                "field1": "MOTOR"
            };
            let args = {
                data: JSON.stringify(req_txt),
                headers: {
                    "Content-Type": "application/json",
                    "Accept": "application/json"
                }
            };
            let token_req = {
                "sub": "KYC_WS_BROKER",
                "exp": 1668407854,
                "iat": 1668406054
            };
            let args_token = {
                data: JSON.stringify(token_req)
            };
            let KYC_Status = "VERIFY_FAIL";
            let kyc_id = 0;
            var Client = require('node-rest-client').Client;
            var client = new Client();
            let LM_Data = {
                "KYC_Pan_No": "",
                "KYC_Number": "",
                "KYC_FullName": "",
                "KYC_Ref_No": "",
                "KYC_Redirect_URL": "",
                "KYC_Insurer_ID": "",
                "KYC_PB_CRN": ObjRequest.PB_CRN,
                "KYC_Status": KYC_Status
            };
            let token = jwt.encode(token_req, secret, 'HS512');
            try {
                var key = CryptoJS.enc.Utf8.parse("kycwsbrkmotr2023");
                var iv = CryptoJS.enc.Utf8.parse("kycwsbrkmotr2023");
                let encrypted_req = CryptoJS.AES.encrypt(JSON.stringify(req_txt), key, {iv: iv}).toString();
                kyc_verify_request = encrypted_req;
                let temp_args = {"payload": encrypted_req};
                let args1 = {
                    data: JSON.stringify(temp_args),
                    headers: {
                        "Content-Type": "application/json",
                        "BusinessCorelationId": "36c18e93-ac17-4990-8451-e1929f42ea88"
                    }
                };
                //token = "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJLWUNfV1NfQlJPS0VSIiwiZXhwIjoxNjY4NDA3ODU0LCJpYXQiOjE2Njg0MDYwNTR9.oMZmDrYKBqb-5OOmb8fLyq1UxJHBRMeWV3cD8uRkI0iRBwfOXABRliBn_AsLFx8DhQxa2rxVkp32AAf868LJxg";
                config.environment.name !== 'Production' ? (args1.headers.Auth = 'Bearer ' + token) : (args1.headers.Authorization = 'Bearer ' + token);
                client.post("https://api.bagicuat.bajajallianz.com/csckyc/validateCkycDetails", args1, function (data, response) {
                    if (data) {
                        kyc_verify_response = data;
                        var key = CryptoJS.enc.Utf8.parse("kycwsbrkmotr2023");
                        var iv = CryptoJS.enc.Utf8.parse("kycwsbrkmotr2023");
                        var decrypted = CryptoJS.AES.decrypt(data.payload, key, {iv: iv});
                        let val = decrypted.toString(CryptoJS.enc.Utf8);
                        let decrypted_res = JSON.parse(val);
                        //kyc_verify_response = decrypted_res; // kyc_insurer_response
                        if (decrypted_res.hasOwnProperty("kycStatus") && decrypted_res.kycStatus === "KYC_SUCCESS" && decrypted_res.hasOwnProperty("ckycNumber") && decrypted_res["ckycNumber"]) {
                            LM_Data.KYC_Status = "VERIFY_SUCCESS";
                            LM_Data.KYC_Number = decrypted_res["ckycNumber"];
                            LM_Data.KYC_FullName = (decrypted_res.hasOwnProperty("fullName")) ? decrypted_res.fullName : "";
                        } else {
                            LM_Data.KYC_Status = "VERIFY_FAIL";
                            LM_Data.KYC_Number = decrypted_res.hasOwnProperty("ckycNumber") ? decrypted_res["ckycNumber"] : '';
                        }
                        try {
                            let queryObj = {
                                'Search_Type': (ObjRequest.Verify_Search_Type === undefined || ObjRequest.Verify_Search_Type === "" || ObjRequest.Verify_Search_Type === null) ? "" : ObjRequest.Verify_Search_Type,
                                'KYC_Number': user_kyc_no,
                                'KYC_Status': LM_Data.KYC_Status,
                                'Modified_On': new Date()
                            };
                            let cond = {
                                'Insurer_Id': ObjRequest.Insurer_Id - 0,
                                'PB_CRN': (ObjRequest.PB_CRN === undefined || ObjRequest.PB_CRN === "" || ObjRequest.PB_CRN === null) ? "" : ObjRequest.PB_CRN - 0
//                                                'User_Data_Id': (ObjRequest.User_Data_Id === undefined || ObjRequest.User_Data_Id === "" || ObjRequest.User_Data_Id === null) ? 0 : ObjRequest.User_Data_Id - 0
                            };
                            //var kyc_detail1 = new kyc_detail(queryObj);
                            kyc_detail.update(cond, {$set: queryObj}, function (err, users) {
                                if (err) {
                                    res.json({"Insurer": "BAJAJ", "Msg": err, "Status": "FAIL"});
                                } else {
                                    //res.json({"Insurer": "HDFC", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                }
                            });
                            let queryObj1 = {
                                'PB_CRN': ObjRequest.PB_CRN ? ObjRequest.PB_CRN : "",
                                'User_Data_Id': ObjRequest.User_Data_Id ? ObjRequest.User_Data_Id : "",
                                'Insurer_Id': ObjRequest.Insurer_Id,
                                'Product_Id': ObjRequest.Product_Id ? ObjRequest.Product_Id : "",
                                'PAN': (ObjRequest.PAN === undefined || ObjRequest.PAN === "" || ObjRequest.PAN === null) ? "" : ObjRequest.PAN,
                                'Aadhar': (ObjRequest.Aadhaar === undefined || ObjRequest.Aadhaar === "" || ObjRequest.Aadhaar === null) ? "" : ObjRequest.Aadhaar,
                                'DOB': (ObjRequest.DOB === undefined || ObjRequest.DOB === "" || ObjRequest.DOB === null) ? "" : ObjRequest.DOB,
                                'Full_Name': ObjRequest.Proposal_Request['middle_name'] === "" ? (ObjRequest.Proposal_Request['first_name'] + " " + ObjRequest.Proposal_Request['last_name']) : (ObjRequest.Proposal_Request['first_name'] + " " + ObjRequest.Proposal_Request['middle_name'] + " " + ObjRequest.Proposal_Request['last_name']),
                                'Mobile': (ObjRequest.Mobile === undefined || ObjRequest.Mobile === "" || ObjRequest.Mobile === null) ? "" : ObjRequest.Mobile - 0,
                                'Email': (ObjRequest.Email === undefined || ObjRequest.Email === "" || ObjRequest.Email === null) ? "" : ObjRequest.Email,
                                'KYC_Number': LM_Data.KYC_Number,
                                'Search_Type': ObjRequest.Search_Type ? ObjRequest.Search_Type : "",
                                'KYC_Status': LM_Data.KYC_Status,
                                'PAN_Doc': ObjRequest.PAN_Doc ? ObjRequest.PAN_Doc : "",
                                'Aadhar_Doc': ObjRequest.Aadhar_Doc ? ObjRequest.Aadhar_Doc : "",
                                'KYC_URL': LM_Data.KYC_Redirect_URL,
                                'Created_On': new Date(),
                                'Modified_On': new Date(),
                                //'Proposal_Request': (ObjRequest.Proposal_Request === undefined || ObjRequest.Proposal_Request === "" || ObjRequest.Proposal_Request === null) ? "" : ObjRequest.Proposal_Request,
                                'Proposal_Id': (ObjRequest.Proposal_Id === undefined || ObjRequest.Proposal_Id === "" || ObjRequest.Proposal_Id === null) ? "" : ObjRequest.Proposal_Id,
                                'Quote_Id': (ObjRequest.Quote_Id === undefined || ObjRequest.Quote_Id === "" || ObjRequest.Quote_Id === null) ? "" : ObjRequest.Quote_Id,
                                'KYC_Request_Core': kyc_verify_request,
                                'KYC_Response_Core': kyc_verify_response
                            };
                            var kyc_history1 = new kyc_history(queryObj1);
                            kyc_history1.save(queryObj1, function (err, users) {
                                if (err) {
                                    res.json({"Insurer": "BAJAJ", "Msg": err, "Status": "FAIL"});
                                } else {
                                    //res.json({"Insurer": "BAJAJ", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                }
                            });
                        } catch (e) {
                            res.json({"Insurer": "BAJAJ", "Msg": e.stack, "Status": "FAIL"});
                        }
                        res.json({"Insurer": "BAJAJ", "Msg": LM_Data, "Status": LM_Data.KYC_Status});
                    } else {
                        res.json({"Insurer": "BAJAJ", "Msg": "KYC verify services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                    }
                });
            } catch (e2) {
                res.json({"Insurer": "BAJAJ", "Msg": e2.stack, "Status": "FAIL"});
            }
        } catch (e1) {
            res.json({"Insurer": "BAJAJ", "Msg": e1.stack, "Status": "FAIL"});
        }
    });

    app.post('/kyc_details/bajaj_encrypting', function (req, res) {
        try {
            var user_kyc_no = (req.body.user_kyc_no === undefined || req.body.user_kyc_no === "" || req.body.user_kyc_no === null) ? "" : req.body.user_kyc_no;
            var user_name = null;
            if (req.body.middle_name === undefined || req.body.middle_name === "" || req.body.middle_name === null) {
                user_name = ((req.body.first_name === undefined || req.body.first_name === "" || req.body.first_name === null) ? "" : req.body.first_name) + " " +
                        ((req.body.last_name === undefined || req.body.last_name === "" || req.body.last_name === null) ? "" : req.body.last_name);
            } else {
                user_name = ((req.body.first_name === undefined || req.body.first_name === "" || req.body.first_name === null) ? "" : req.body.first_name) + " " +
                        ((req.body.middle_name === undefined || req.body.middle_name === "" || req.body.middle_name === null) ? "" : req.body.middle_name) + " " +
                        ((req.body.last_name === undefined || req.body.last_name === "" || req.body.last_name === null) ? "" : req.body.last_name);
            }
            let req_txt = {
                "mobile": (req.body.mobile === undefined || req.body.mobile === "" || req.body.mobile === null) ? "" : req.body.mobile,
                "name": user_name,
                "kyc_id": user_kyc_no,
                "dob": (req.body.dob === undefined || req.body.dob === "" || req.body.dob === null) ? "" : req.body.dob,
                "ckyc_number": user_kyc_no,
                "pan": (req.body.pan === undefined || req.body.pan === "" || req.body.pan === null) ? "" : req.body.pan,
                "aadhaar_uid": (req.body.aadhar === undefined || req.body.aadhar === "" || req.body.aadhar === null) ? "" : (req.body.aadhar.substr(req.body.aadhar.length - 4)), //"last 4 digits of aadhar",
                "agent_id": "",
                "gc_cust_id": "",
                "eia_number": "",
                "email_address": (req.body.email === undefined || req.body.email === "" || req.body.email === null) ? "" : req.body.email,
                "redirect_url": ""
            };

            let args = {headers: {"token": ""}};
            let args1 = {
                headers: {
                    "api_key": "8d399be8-0b6f-4a"
                }
            };
            let KYC_Status = "PENDING";
            let token = null;
            var Client = require('node-rest-client').Client;
            var client = new Client();
            client.get("https://ekyc-uat.hdfcergo.com/e-kyc/tgt/generate-token", args1, function (data1, response1) {
                if (data1) {
                    if (data1.hasOwnProperty("success") && data1.success === true) {
                        if (data1.hasOwnProperty("data") && data1.data.hasOwnProperty("token") && data1.data.token !== "" && data1.data.token !== null) {
                            token = data1.data.token;
                            try {
                                if (token) {
                                    args.headers.token = token;
                                    var client1 = new Client();
                                    client1.get("https://ekyc-uat.hdfcergo.com/e-kyc/primary/kyc-status/" + user_kyc_no, args, function (data, response) {
                                        if (data) {
                                            let LM_Data = {
                                                'KYC_Obj': {
                                                    'kyc_id': ''
                                                },
                                                'LM_Obj': {
                                                    'iskycVerified': '',
                                                    'redirect_link': '',
                                                    'status': ''
                                                },
                                                'Hdfc_Obj': {
                                                    'data': ''
                                                },
                                                'tmp_Obj': ''
                                            };
                                            if (data.hasOwnProperty("message") && data.message !== "") {
                                                KYC_Status = "FAIL";
                                                LM_Data.Hdfc_Obj.data = data.message;
                                                LM_Data.tmp_Obj = LM_Data.Hdfc_Obj.data;
                                            } else {
                                                if (data.hasOwnProperty("success") && data.success === true && data.hasOwnProperty("data") && data.data.hasOwnProperty("iskycVerified")) {
                                                    if (data.data.iskycVerified === 1) {
                                                        KYC_Status = "SUCCESS";
                                                        LM_Data.KYC_Obj.kyc_id = user_kyc_no;
                                                        LM_Data.tmp_Obj = LM_Data.KYC_Obj;
                                                    } else if (data.data.iskycVerified === 0) {
                                                        KYC_Status = "FAIL";
                                                        LM_Data.Hdfc_Obj.data = data;
                                                        LM_Data.tmp_Obj = LM_Data.Hdfc_Obj.data;
                                                    } else {
                                                        KYC_Status = "FAIL";
                                                        LM_Data.Hdfc_Obj.data = data;
                                                        LM_Data.tmp_Obj = LM_Data.Hdfc_Obj.data;
                                                    }
                                                } else {
                                                    KYC_Status = "FAIL";
                                                    LM_Data.Hdfc_Obj.data = data;
                                                    LM_Data.tmp_Obj = LM_Data.Hdfc_Obj.data;
                                                }
                                            }

                                            try {
                                                //data.data.Msg.kyc_id = user_kyc_no;
                                                let queryObj = {
                                                    'Insurer_Id': req.body.insurer_id,
                                                    'Search_Type': (req.body.search_type === undefined || req.body.search_type === "" || req.body.search_type === null) ? "" : req.body.search_type,
                                                    'KYC_Number': user_kyc_no,
                                                    'Mobile': (req.body.mobile === undefined || req.body.mobile === "" || req.body.mobile === null) ? "" : req.body.mobile,
                                                    'PAN': (req.body.pan === undefined || req.body.pan === "" || req.body.pan === null) ? "" : req.body.pan,
                                                    'Aadhar': (req.body.aadhar === undefined || req.body.aadhar === "" || req.body.aadhar === null) ? "" : req.body.aadhar,
                                                    'KYC_Status': KYC_Status,
                                                    'DOB': (req.body.dob === undefined || req.body.dob === "" || req.body.dob === null) ? "" : req.body.dob,
                                                    'Created_On': new Date(),
                                                    'Modified_On': new Date(),
                                                    'User_Data_Id': (req.body.udid === undefined || req.body.udid === "" || req.body.udid === null) ? 0 : req.body.udid,
                                                    'Product_Id': (req.body.product_id === undefined || req.body.product_id === "" || req.body.product_id === null) ? 0 : req.body.product_id,
                                                    'Email': (req.body.email === undefined || req.body.email === "" || req.body.email === null) ? "" : req.body.email,
                                                    'PB_CRN': (req.body.crn === undefined || req.body.crn === "" || req.body.crn === null) ? "" : req.body.crn
                                                };
                                                var kyc_detail1 = new kyc_detail(queryObj);
                                                kyc_detail1.save(queryObj, function (err, users) {
                                                    if (err) {
                                                        res.json({"Insurer": "Bajaj", "Msg": err, "Status": "FAIL"});
                                                    } else {
                                                        //res.json({"Insurer": "Bajaj", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                                    }
                                                });
                                                let queryObj1 = {
                                                    'PB_CRN': (req.body.crn === undefined || req.body.crn === "" || req.body.crn === null) ? "" : req.body.crn,
                                                    'User_Data_Id': (req.body.udid === undefined || req.body.udid === "" || req.body.udid === null) ? 0 : req.body.udid,
                                                    'PAN': (req.body.pan === undefined || req.body.pan === "" || req.body.pan === null) ? "" : req.body.pan,
                                                    'Aadhaar': (req.body.aadhar === undefined || req.body.aadhar === "" || req.body.aadhar === null) ? "" : req.body.aadhar,
                                                    'DOB': (req.body.dob === undefined || req.body.dob === "" || req.body.dob === null) ? "" : req.body.dob,
                                                    'Mobile': (req.body.mobile === undefined || req.body.mobile === "" || req.body.mobile === null) ? "" : req.body.mobile,
                                                    'Email': (req.body.email === undefined || req.body.email === "" || req.body.email === null) ? "" : req.body.email,
                                                    'Insurer_Id': req.body.insurer_id,
                                                    'KYC_Request_Core': req_txt,
                                                    'KYC_Response_Core': data,
                                                    'Status': "completed",
                                                    'Created_On': new Date(),
                                                    'Modified_On': new Date()
                                                };
                                                var kyc_history1 = new kyc_history(queryObj1);
                                                kyc_history1.save(queryObj1, function (err, users) {
                                                    if (err) {
                                                        res.json({"Insurer": "Bajaj", "Msg": err, "Status": "FAIL"});
                                                    } else {
                                                        //res.json({"Insurer": "Bajaj", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                                    }
                                                });
                                            } catch (e) {
                                                res.json({"Insurer": "Bajaj", "Msg": e.stack, "Status": "FAIL"});
                                            }
                                            res.json({"Insurer": "Bajaj", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                        } else {
                                            res.json({"Insurer": "Bajaj", "Msg": "KYC verify services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                                        }
                                    });
                                } else {
                                    res.json({"Insurer": "Bajaj", "Msg": "Could Not Generate Token. Please try again later.", "Status": "FAIL"});
                                }
                            } catch (e2) {
                                res.json({"Insurer": "Bajaj", "Msg": e2.stack, "Status": "FAIL"});
                            }
                        } else {
                            res.json({"Insurer": "Bajaj", "Msg": "KYC-Token not generated. Please try again later.", "Status": "FAIL"});
                        }
                    } else {
                        res.json({"Insurer": "Bajaj", "Msg": "KYC-Token generation services was not successful. Please try again later.", "Status": "FAIL"});
                    }
                } else {
                    res.json({"Insurer": "Bajaj", "Msg": "KYC-Token generation services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                }
            });
        } catch (e1) {
            res.json({"Insurer": "Bajaj", "Msg": e1.stack, "Status": "FAIL"});
        }
    });

    app.get('/kyc_details/get_kyc_status_NIU/:crn/:udid', function (req, res) {
        try {
            let crn = req.params.crn - 0;
            let udid = req.params.udid - 0;
            let kyc_detail = require('../models/kyc_detail');
            kyc_detail.findOne({'PB_CRN': crn, 'User_Data_Id': udid}).sort({Modified_On:-1}).exec(function (err, data) {
                if (err) {
                    res.json({"Msg": err, "Status": "FAIL"});
                } else {
                    if (data) {
                        res.json({"Msg": data['_doc'], "Status": data['_doc'].KYC_Status});
                    } else {
                        res.json({"Msg": "No Data Available", "Status": "NEW"});
                    }
                }
            });
        } catch (err) {
            res.json({"Msg": err.stack, "Status": "FAIL"});
        }
    });
    app.get('/kyc_details/get_kyc_status/:crn/:insurer_id', function (req, res) {
        try {
            let crn = req.params.crn - 0;
            let insurer_id = req.params.insurer_id - 0;
            let kyc_detail = require('../models/kyc_detail');
            kyc_detail.findOne({'PB_CRN': crn, 'Insurer_Id': insurer_id}).sort({Modified_On: -1}).exec(function (err, data) {
                if (err) {
                    res.json({"Msg": err, "Status": "FAIL"});
                } else {
                    if (data) {
                        res.json({"Msg": data['_doc'], "Status": data['_doc'].KYC_Status});
                    } else {
                        res.json({"Msg": "No Data Available", "Status": "NEW"});
                    }
                }
            });
        } catch (err) {
            res.json({"Msg": err.stack, "Status": "FAIL"});
        }
    });
    app.get('/kyc_details/verify_scheduler', function (req, res, next) {
        var Client = require('node-rest-client').Client;
        var client = new Client();
        let data_count = 0;
        kyc_detail.find({KYC_Status: 'FAIL'}).exec(function (err, dbRequest) {
            if (err)
                res.send("Error :" + err.stack);
            if (dbRequest.length > 0) {
                let objCallSummary = {
                    'main': {
                        'total_job': dbRequest.length,
                        'success_job_cnt': 0,
                        'fail_job_cnt': 0,
                        'verified_status_cnt': 0,
                        'pending_status_cnt': 0
                    },
                    'success_job': [],
                    'fail_job': [],
                    'verified_job': [],
                    'pending_job': []
                };

                let service_method_url = config.environment.weburl + "/postservicecall/kyc_details/search_kyc_details";
                for (let i in dbRequest) {
                    data_count++;
                    let arg_obj = dbRequest[i]['_doc'];
                    let args = {
                        data: {
                            "search_type": "VERIFY",
                            "pan": arg_obj['PAN'],
                            "dob": arg_obj['DOB'],
                            "insurer_id": arg_obj['Insurer_Id'] - 0,
                            "crn": arg_obj['PB_CRN'] - 0,
                            "user_kyc_no": "",
                            "udid": 270228 - 0,
                            "product_id": 1 - 0,
                            "secret_key": "SECRET-HZ07QRWY-JIBT-XRMQ-ZP95-J0RWP3DYRACW",
                            "client_key": "CLIENT-CNTP6NYE-CU9N-DUZW-CSPI-SH1IS4DOVHB9"
                        },
                        headers: {
                            "Content-Type": "application/json"
                        }
                    };
                    try {
                        client.post(service_method_url, args, function (data, response) {
                            if (data.Status === 'Success') {
                                objCallSummary.main.success_job_cnt++;
                                objCallSummary.success_job.push(data.Summary);
                                if (data.MSG === "Verify") {
                                    objCallSummary.main.verified_status_cnt++;
                                    objCallSummary.verified_job.push(data.Summary);
                                } else {
                                    objCallSummary.main.pending_status_cnt++;
                                    objCallSummary.pending_job.push(data.Summary);
                                }
                            } else {
                                objCallSummary.main.fail_job_cnt++;
                                var SummaryErr = {
                                    'url': service_method_url,
                                    'err': data,
                                    'status': 'api_failed'
                                };
                                objCallSummary.fail_job.push(SummaryErr);
                            }
                        });
                    } catch (ex) {
                        var SummaryErr = {
                            'url': service_method_url,
                            'err': ex.stack,
                            'status': 'api_exception'
                        };
                        console.error('Exception', 'post_call_error', ex.stack);
                        objCallSummary.fail_job.push(SummaryErr);
                    }
                    if (i === dbRequest.length - 1) {
                        res.send(objCallSummary);
                    }
                }
            } else {
                res.send("Record Not found for verify KYC");
            }
        });
    });
    
    app.post('/kyc_details/tataaig_fetch_kyc_details', function (req, res) {
        try {
            let ObjRequest = req.body;
            let kyc_fetch_request = "";
            let kyc_fetch_response = "";
            let proposal_request = ObjRequest.Proposal_Request;
            let tokenservice_url = ((config.environment.name === 'Production') ? 'https://foyer-tataaig.auth.ap-south-1.amazoncognito.com/oauth2/token' : 'https://uatapigw-tataaig.auth.ap-south-1.amazoncognito.com/oauth2/token');
            let grant_type = ((config.environment.name === 'Production') ? 'client_credentials' : 'client_credentials');
            let scope = ((config.environment.name === 'Production') ? 'https://foyer.tataaig.com/write' : 'https://api.iorta.in/write');
            let client_id = ((config.environment.name === 'Production') ? '1f146p9242uaqnpim8rkc4vfvf' : '5qdbqng8plqp1ko2sslu695n2g');
            let client_secret = ((config.environment.name === 'Production') ? '1b56bupo8m4b9em5pj8csrur08nca48la1q2977sajcuhe6lk1h6' : 'gki6eqtltmjj37gpqq0dt52dt651o079dn6mls62ptkvsa2b45c');
            let token_args = {
                "grant_type": grant_type,
                "scope": scope,
                "client_id": client_id,
                "client_secret": client_secret
            };
            let kyc_token_args = {
                data: token_args,
                headers: {
                    "Content-Type": "application/x-www-form-urlencoded"
                }
            };
            function jsonToQueryString(json) {
                return  Object.keys(json).map(function (key) {
                    return encodeURIComponent(key) + '=' +
                            encodeURIComponent(json[key]);
                }).join('&');
            }
            kyc_token_args.data = jsonToQueryString(kyc_token_args.data);
            let full_name = proposal_request['middle_name'] === "" ? (proposal_request['first_name'] + " " + proposal_request['last_name']) : (proposal_request['first_name'] + " " + proposal_request['middle_name'] + " " + proposal_request['last_name']);
            let product_name_obj = {1: "motor", 10: "motor", 12: "motor", 2: "", 4: "travel"};
            let product_name = product_name_obj[ObjRequest.Product_Id];
            let KYC_Status = "PENDING";
            let kyc_id = 0;
            let token = null;
            let Client = require('node-rest-client').Client;
            let client = new Client();
            let user_datas = {};
            let LM_Data = {
                "KYC_Pan_No": "",
                "KYC_Number": "",
                "KYC_FullName": "",
                "KYC_Ref_No": "",
                "KYC_Redirect_URL": "",
                "KYC_Insurer_ID": ObjRequest.Insurer_Id,
                "KYC_PB_CRN": ObjRequest.PB_CRN,
                "KYC_Status": KYC_Status
            };
            client.post(tokenservice_url, kyc_token_args, function (token_data, response1) {
                if (token_data) {
                    if (token_data.hasOwnProperty("access_token") && token_data.access_token) {
                        token = token_data.access_token;
                        try {
                            if (token) {
//                                client.get(config.environment.weburl + '/user_datas/view/' + req.body.User_Data_Id, {}, function (db_user_data, response) {
//                                    if (db_user_data) {
//                                        user_datas = db_user_data[0];
//                                        let objProduct = {
//                                            "Quote_Id": user_datas['Processed_Request']['___insurer_customer_identifier___'],
//                                            "Modified_On": new Date()
//                                        };
//                                        kyc_detail.update({"PB_CRN": user_datas['PB_CRN'] - 0, "User_Data_Id": req.body.User_Data_Id}, {$set: objProduct}, function (err, objKyCDetails) {
//                                            if (err) {
//                                                res.json({"Insurer": "TATA_AIG", "Msg": 'KYC fetch services failed due to KYC Details not Updated. Please try again later.', "Status": "Fail"});
//                                            } else {
//                                                client.get(config.environment.weburl + '/kyc_details/get_kyc_status/' + user_datas['PB_CRN'] + '/' + ObjRequest.Insurer_Id, {}, function (db_kyc_details, response) {
//                                                    if (db_kyc_details) {
                                                        let verify_kyc_service_url = ((config.environment.name === 'Production') ? 'https://foyer.tataaig.com/ckyc/verify?product=' : 'https://uatapigw.tataaig.com/ckyc/verify?product=') + product_name;
                                                        let verify_args = {
                                                            "quote_id": ObjRequest.Proposal_Id,
                                                            "id_type": (ObjRequest.Search_Type === undefined || ObjRequest.Search_Type === "" || ObjRequest.Search_Type === null) ? "" : ObjRequest.Search_Type,
                                                            "id_num": (proposal_request.pan === undefined || proposal_request.pan === "" || proposal_request.pan === null) ? "" : proposal_request.pan,
                                                            "customer_name": full_name
                                                        };
                                                        kyc_fetch_request = verify_args;
                                                        let kyc_verify_args = {
                                                            data: verify_args,
                                                            headers: {
                                                                "Content-Type": "application/json",
                                                                "Authorization": token,
                                                                "x-api-key": ((config.environment.name === 'Production') ? 'jgThgmdYqc2Vl2jUF5t3EaxWQFzPjrgv6M041hYc' : 'g8hoqi8TBA2mBpxgMohdTcWxAfv6JsJ6wLztOWm4')
                                                            }
                                                        };
                                                        let client1 = new Client();
                                                        client1.post(verify_kyc_service_url, kyc_verify_args, function (kyc_verify_data, response) {
                                                            if (kyc_verify_data) {
                                                                kyc_fetch_response = kyc_verify_data;
                                                                if (kyc_verify_data.hasOwnProperty("status") && kyc_verify_data.status === 400 && kyc_verify_data.hasOwnProperty("message_txt") && kyc_verify_data.message_txt) {
                                                                    LM_Data.KYC_Status = "FETCH_FAIL";
                                                                } else if (kyc_verify_data.hasOwnProperty("status") && kyc_verify_data.status === 200) {
                                                                    if (kyc_verify_data.hasOwnProperty('data') && kyc_verify_data.data.hasOwnProperty('result') && kyc_verify_data.data.result.hasOwnProperty('ckyc_number')) {
                                                                        if (kyc_verify_data.data.result.ckyc_number) {
                                                                            kyc_id = kyc_verify_data.data.result.ckyc_number;
                                                                    LM_Data.KYC_Number = kyc_id;
                                                                            LM_Data.KYC_FullName = kyc_verify_data.data.result.registered_name;
                                                                            LM_Data.KYC_Pan_No = ObjRequest.PAN;
                                                                    LM_Data.KYC_Status = "FETCH_SUCCESS";
                                                                } else {
                                                                    LM_Data.KYC_Status = "FETCH_FAIL";
                                                                            LM_Data.KYC_Pan_No = ObjRequest.PAN;
                                                                            LM_Data.KYC_Ref_No = kyc_verify_data.data.req_id;
                                                                }
                                                                    } else {
                                                                        LM_Data.KYC_Status = "FETCH_FAIL";
                                                                        LM_Data.KYC_Pan_No = ObjRequest.PAN;
                                                                        LM_Data.KYC_Ref_No = kyc_verify_data.data.req_id;
                                                                    }
                                                                } else {
                                                                    LM_Data.KYC_Status = "FETCH_FAIL";
                                                                    if (kyc_verify_data.hasOwnProperty('data') && kyc_verify_data.data.hasOwnProperty('req_id')) {
                                                                        LM_Data.KYC_Ref_No = kyc_verify_data.data.req_id; // request id
                                                                    }
                                                                }
                                                                try {
                                                                    let cond = {
                                                                        'Insurer_Id': ObjRequest.Insurer_Id - 0,
                                                                        'PB_CRN': (ObjRequest.PB_CRN === undefined || ObjRequest.PB_CRN === "" || ObjRequest.PB_CRN === null) ? "" : ObjRequest.PB_CRN - 0
//                                                                        'User_Data_Id': (ObjRequest.User_Data_Id === undefined || ObjRequest.User_Data_Id === "" || ObjRequest.User_Data_Id === null) ? 0 : ObjRequest.User_Data_Id - 0
                                                                    };
                                                                    let setObj = {
                                                                        'KYC_Number': LM_Data.KYC_Number,
                                                                        'KYC_Full_Name': LM_Data.KYC_FullName,
                                                                        'KYC_Status': LM_Data.KYC_Status,
                                                                        'Modified_On': new Date(),
                                                                        'KYC_URL': "",
                                                                        'KYC_Ref_No': LM_Data.KYC_Ref_No
                                                                    };
                                                                    kyc_detail.update(cond, {$set: setObj}, function (err, users) {
                                                                        if (err) {
                                                                            res.json({"Insurer": "TATA_AIG", "Msg": err, "Status": "FAIL"});
                                                                        } else {
                                                                            //res.json({"Insurer": "TATA_AIG", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                                                        }
                                                                    });
                                                                    let queryObj1 = {
                                                                        'PB_CRN': ObjRequest.PB_CRN ? ObjRequest.PB_CRN : "",
                                                                        'User_Data_Id': ObjRequest.User_Data_Id ? ObjRequest.User_Data_Id : "",
                                                                        'Insurer_Id': ObjRequest.Insurer_Id,
                                                                        'Product_Id': ObjRequest.Product_Id ? ObjRequest.Product_Id : "",
                                                                        'PAN': (ObjRequest.PAN === undefined || ObjRequest.PAN === "" || ObjRequest.PAN === null) ? "" : ObjRequest.PAN,
                                                                        'Aadhar': (ObjRequest.Aadhaar === undefined || ObjRequest.Aadhaar === "" || ObjRequest.Aadhaar === null) ? "" : ObjRequest.Aadhaar,
                                                                        'DOB': (ObjRequest.DOB === undefined || ObjRequest.DOB === "" || ObjRequest.DOB === null) ? "" : ObjRequest.DOB,
                                                                        'Full_Name': ObjRequest.Proposal_Request['middle_name'] === "" ? (ObjRequest.Proposal_Request['first_name'] + " " + ObjRequest.Proposal_Request['last_name']) : (ObjRequest.Proposal_Request['first_name'] + " " + ObjRequest.Proposal_Request['middle_name'] + " " + ObjRequest.Proposal_Request['last_name']),
                                                                        'Mobile': (ObjRequest.Mobile === undefined || ObjRequest.Mobile === "" || ObjRequest.Mobile === null) ? "" : ObjRequest.Mobile - 0,
                                                                        'Email': (ObjRequest.Email === undefined || ObjRequest.Email === "" || ObjRequest.Email === null) ? "" : ObjRequest.Email,
                                                                        'KYC_Number': LM_Data.KYC_Number,
                                                                        'Search_Type': ObjRequest.Search_Type ? ObjRequest.Search_Type : "",
                                                                        'KYC_Status': LM_Data.KYC_Status,
                                                                        'PAN_Doc': ObjRequest.PAN_Doc ? ObjRequest.PAN_Doc : "",
                                                                        'Aadhar_Doc': ObjRequest.Aadhar_Doc ? ObjRequest.Aadhar_Doc : "",
                                                                        'KYC_URL': LM_Data.KYC_Redirect_URL,
                                                                        'KYC_Ref_No': LM_Data.KYC_Ref_No,
                                                                        'Created_On': new Date(),
                                                                        'Modified_On': new Date(),
                                                                        //'Proposal_Request': (ObjRequest.Proposal_Request === undefined || ObjRequest.Proposal_Request === "" || ObjRequest.Proposal_Request === null) ? "" : ObjRequest.Proposal_Request,
                                                                        'Proposal_Id': (ObjRequest.Proposal_Id === undefined || ObjRequest.Proposal_Id === "" || ObjRequest.Proposal_Id === null) ? "" : ObjRequest.Proposal_Id,
                                                                        'Quote_Id': (ObjRequest.Quote_Id === undefined || ObjRequest.Quote_Id === "" || ObjRequest.Quote_Id === null) ? "" : ObjRequest.Quote_Id,
                                                                        'KYC_Request_Core': kyc_fetch_request,
                                                                        'KYC_Response_Core': kyc_fetch_response
                                                                    };
                                                                    var kyc_history1 = new kyc_history(queryObj1);
                                                                    kyc_history1.save(queryObj1, function (err, users) {
                                                                        if (err) {
                                                                            res.json({"Insurer": "TATA_AIG", "Msg": err, "Status": "FAIL"});
                                                                        } else {
                                                                            //res.json({"Insurer": "TATA_AIG", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                                                        }
                                                                    });
                                                                } catch (e) {
                                                                    res.json({"Insurer": "TATA_AIG", "Msg": e.stack, "Status": "FAIL"});
                                                                }
                                                                res.json({"Insurer": "TATA_AIG", "Msg": LM_Data, "Status": LM_Data.KYC_Status});
                                                            } else {
                                                                res.json({"Insurer": "TATA_AIG", "Msg": "KYC fetch services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                                                            }
                                                        });
//                                                    } else {
//                                                        res.json({"Insurer": "TATA_AIG", "Msg": "KYC fetch services failed due to no details available in KYC Details Database. Please try again later.", "Status": "FAIL"});
//                                                    }
//                                                });
//                                            }
//                                        });
//                                    } else {
//                                        res.json({"Insurer": "TATA_AIG", "Msg": "KYC fetch services failed due to no details available in user data. Please try again later.", "Status": "FAIL"});
//                                    }
//                                });
                            } else {
                                res.json({"Insurer": "TATA_AIG", "Msg": "Could Not Generate Token. Please try again later.", "Status": "FAIL"});
                            }
                        } catch (e2) {
                            res.json({"Insurer": "TATA_AIG", "Msg": e2.stack, "Status": "FAIL"});
                        }
                    } else {
                        res.json({"Insurer": "TATA_AIG", "Msg": "KYC-Token generation services was not successful. Please try again later.", "Status": "FAIL"});
                    }
                } else {
                    res.json({"Insurer": "TATA_AIG", "Msg": "KYC-Token generation services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                }
            });
        } catch (e1) {
            res.json({"Insurer": "TATA_AIG", "Msg": e1.stack, "Status": "FAIL"});
        }
    });
    app.post('/kyc_details/tataaig_verify_kyc_details', function (req, res) {
        try {
            let ObjRequest = req.body;
            let kyc_verify_request = "";
            let kyc_verify_response = "";
            let full_name = proposal_request['middle_name'] === "" ? (proposal_request['first_name'] + " " + proposal_request['last_name']) : (proposal_request['first_name'] + " " + proposal_request['middle_name'] + " " + proposal_request['last_name']);
            let user_kyc_no = (ObjRequest.user_kyc_no === undefined || ObjRequest.user_kyc_no === "" || ObjRequest.user_kyc_no === null) ? "" : ObjRequest.user_kyc_no;
            let proposal_request = ObjRequest.Proposal_Request;
            let tokenservice_url = ((config.environment.name === 'Production') ? 'https://foyer-tataaig.auth.ap-south-1.amazoncognito.com/oauth2/token' : 'https://uatapigw-tataaig.auth.ap-south-1.amazoncognito.com/oauth2/token');
            let grant_type = ((config.environment.name === 'Production') ? 'client_credentials' : 'client_credentials');
            let scope = ((config.environment.name === 'Production') ? 'https://foyer.tataaig.com/write' : 'https://api.iorta.in/write');
            let client_id = ((config.environment.name === 'Production') ? '1f146p9242uaqnpim8rkc4vfvf' : '5qdbqng8plqp1ko2sslu695n2g');
            let client_secret = ((config.environment.name === 'Production') ? '1b56bupo8m4b9em5pj8csrur08nca48la1q2977sajcuhe6lk1h6' : 'gki6eqtltmjj37gpqq0dt52dt651o079dn6mls62ptkvsa2b45c');
            let token_args = {
                "grant_type": grant_type,
                "scope": scope,
                "client_id": client_id,
                "client_secret": client_secret
            };
            let kyc_token_args = {
                data: token_args,
                headers: {
                    "Content-Type": "application/x-www-form-urlencoded"
                }
            };
            function jsonToQueryString(json) {
                return  Object.keys(json).map(function (key) {
                    return encodeURIComponent(key) + '=' +
                            encodeURIComponent(json[key]);
                }).join('&');
            }
            kyc_token_args.data = jsonToQueryString(kyc_token_args.data);
            let product_name_obj = {1: "motor", 10: "motor", 12: "motor", 2: "", 4: "travel"};
            let product_name = product_name_obj[ObjRequest.Product_Id];
            let KYC_Status = "VERIFY_FAIL";
            let token = null;
            let Client = require('node-rest-client').Client;
            let client = new Client();
            let user_datas = {};
            let LM_Data = {
                "KYC_Pan_No": "",
                "KYC_Number": "",
                "KYC_FullName": "",
                "KYC_Ref_No": "",
                "KYC_Redirect_URL": "",
                "KYC_Insurer_ID": ObjRequest.Insurer_Id,
                "KYC_PB_CRN": ObjRequest.PB_CRN,
                "KYC_Status": KYC_Status
            };
            client.post(tokenservice_url, kyc_token_args, function (token_data, response1) {
                if (token_data) {
                    if (token_data.hasOwnProperty("access_token") && token_data.access_token) {
                        token = token_data.access_token;
                        try {
                            if (token) {
//                                client.get(config.environment.weburl + '/user_datas/view/' + req.body.User_Data_Id, {}, function (db_user_data, response) {
//                                    if (db_user_data) {
//                                        user_datas = db_user_data[0];
//                                        let objProduct = {
//                                            "Quote_Id": user_datas['Processed_Request']['___insurer_customer_identifier___'],
//                                            "Modified_On": new Date()
//                                        };
//                                        kyc_detail.update({"PB_CRN": user_datas['PB_CRN'] - 0, "User_Data_Id": req.body.User_Data_Id}, {$set: objProduct}, function (err, objKyCDetails) {
//                                            if (err) {
//                                                res.json({"Insurer": "TATA_AIG", "Msg": 'KYC fetch services failed due to KYC Details not Updated. Please try again later.', "Status": "Fail"});
//                                            } else {
//                                                client.get(config.environment.weburl + '/kyc_details/get_kyc_status/' + user_datas['PB_CRN'] + '/' + ObjRequest.Insurer_Id, {}, function (db_kyc_details, response) {
//                                                    if (db_kyc_details) {
                                                        let verify_kyc_service_url = ((config.environment.name === 'Production') ? 'https://foyer.tataaig.com/ckyc/verify?product=' : 'https://uatapigw.tataaig.com/ckyc/verify?product=') + product_name;
                                                        let verify_args = {
                                                            "quote_id": ObjRequest.Proposal_Id,
                                                            "customer_name": full_name,
                                                            "id_type": (ObjRequest.Search_Type === undefined || ObjRequest.Search_Type === "" || ObjRequest.Search_Type === null) ? "" : ObjRequest.Search_Type,
                                                            "id_num": (proposal_request.pan === undefined || proposal_request.pan === "" || proposal_request.pan === null) ? "" : proposal_request.pan,
                                                            "full_name": full_name,
                                                            "dob": (ObjRequest.DOB === undefined || ObjRequest.DOB === "" || ObjRequest.DOB === null) ? "" : ObjRequest.DOB,
                                                            "gender": (proposal_request.gender === undefined || proposal_request.gender === "" || proposal_request.gender === null) ? "" : proposal_request.gender,
                                                            "req_id": user_kyc_no
                                                        };
                                                        kyc_verify_request = verify_args;
                                                        let kyc_verify_args = {
                                                            data: verify_args,
                                                            headers: {
                                                                "Content-Type": "application/json",
                                                                "Authorization": token,
                                                                "x-api-key": ((config.environment.name === 'Production') ? 'jgThgmdYqc2Vl2jUF5t3EaxWQFzPjrgv6M041hYc' : 'g8hoqi8TBA2mBpxgMohdTcWxAfv6JsJ6wLztOWm4')
                                                            }
                                                        };
                                                        let client1 = new Client();
                                                        client1.post(verify_kyc_service_url, kyc_verify_args, function (kyc_verify_data, response) {
                                                            if (kyc_verify_data) {
                                                                kyc_verify_response = kyc_verify_data;
                                                                if (kyc_verify_data.hasOwnProperty("status") && kyc_verify_data.status === 400 && kyc_verify_data.hasOwnProperty("message_txt") && kyc_verify_data.message_txt) {
                                                                    LM_Data.KYC_Status = "VERIFY_FAIL";
                                                                } else if (kyc_verify_data.hasOwnProperty("status") && kyc_verify_data.status === 200 && kyc_verify_data.hasOwnProperty('data') && kyc_verify_data.data.hasOwnProperty('ckyc_number') && kyc_verify_data.data.ckyc_number) {
                                                                    user_kyc_no = kyc_verify_data.data.ckyc_number;
                                                                    LM_Data.KYC_Number = user_kyc_no;
                                                                    LM_Data.KYC_Status = "VERIFY_SUCCESS";
                                                                } else {
                                                                    LM_Data.KYC_Status = "VERIFY_FAIL";
                                                                }
                                                                try {
                                                                    let queryObj = {
                                                                        'Search_Type': (ObjRequest.Verify_Search_Type === undefined || ObjRequest.Verify_Search_Type === "" || ObjRequest.Verify_Search_Type === null) ? "" : ObjRequest.Verify_Search_Type,
                                                                        'KYC_Number': user_kyc_no,
                                                                        'KYC_Status': LM_Data.KYC_Status,
                                                                        'Modified_On': new Date()
                                                                    };
                                                                    let cond = {
                                                                        'Insurer_Id': ObjRequest.Insurer_Id - 0,
                                                                        'PB_CRN': (ObjRequest.PB_CRN === undefined || ObjRequest.PB_CRN === "" || ObjRequest.PB_CRN === null) ? "" : ObjRequest.PB_CRN - 0
//                                                                        'User_Data_Id': (ObjRequest.User_Data_Id === undefined || ObjRequest.User_Data_Id === "" || ObjRequest.User_Data_Id === null) ? 0 : ObjRequest.User_Data_Id - 0
                                                                    };
                                                                    //var kyc_detail1 = new kyc_detail(queryObj);
                                                                    kyc_detail.update(cond, {$set: queryObj}, function (err, users) {
                                                                        if (err) {
                                                                            res.json({"Insurer": "TATA_AIG", "Msg": err, "Status": "FAIL"});
                                                                        } else {
                                                                            //res.json({"Insurer": "TATA_AIG", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                                                        }
                                                                    });
                                                                    let queryObj1 = {
                                                                        'PB_CRN': ObjRequest.PB_CRN ? ObjRequest.PB_CRN : "",
                                                                        'User_Data_Id': ObjRequest.User_Data_Id ? ObjRequest.User_Data_Id : "",
                                                                        'Insurer_Id': ObjRequest.Insurer_Id,
                                                                        'Product_Id': ObjRequest.Product_Id ? ObjRequest.Product_Id : "",
                                                                        'PAN': (ObjRequest.PAN === undefined || ObjRequest.PAN === "" || ObjRequest.PAN === null) ? "" : ObjRequest.PAN,
                                                                        'Aadhar': (ObjRequest.Aadhaar === undefined || ObjRequest.Aadhaar === "" || ObjRequest.Aadhaar === null) ? "" : ObjRequest.Aadhaar,
                                                                        'DOB': (ObjRequest.DOB === undefined || ObjRequest.DOB === "" || ObjRequest.DOB === null) ? "" : ObjRequest.DOB,
                                                                        'Full_Name': ObjRequest.Proposal_Request['middle_name'] === "" ? (ObjRequest.Proposal_Request['first_name'] + " " + ObjRequest.Proposal_Request['last_name']) : (ObjRequest.Proposal_Request['first_name'] + " " + ObjRequest.Proposal_Request['middle_name'] + " " + ObjRequest.Proposal_Request['last_name']),
                                                                        'Mobile': (ObjRequest.Mobile === undefined || ObjRequest.Mobile === "" || ObjRequest.Mobile === null) ? "" : ObjRequest.Mobile - 0,
                                                                        'Email': (ObjRequest.Email === undefined || ObjRequest.Email === "" || ObjRequest.Email === null) ? "" : ObjRequest.Email,
                                                                        'KYC_Number': LM_Data.KYC_Number,
                                                                        'Search_Type': ObjRequest.Search_Type ? ObjRequest.Search_Type : "",
                                                                        'KYC_Status': LM_Data.KYC_Status,
                                                                        'PAN_Doc': ObjRequest.PAN_Doc ? ObjRequest.PAN_Doc : "",
                                                                        'Aadhar_Doc': ObjRequest.Aadhar_Doc ? ObjRequest.Aadhar_Doc : "",
                                                                        'KYC_URL': LM_Data.KYC_Redirect_URL,
                                                                        'KYC_Ref_No': LM_Data.KYC_Ref_No,
                                                                        'Created_On': new Date(),
                                                                        'Modified_On': new Date(),
                                                                        //'Proposal_Request': (ObjRequest.Proposal_Request === undefined || ObjRequest.Proposal_Request === "" || ObjRequest.Proposal_Request === null) ? "" : ObjRequest.Proposal_Request,
                                                                        'Proposal_Id': (ObjRequest.Proposal_Id === undefined || ObjRequest.Proposal_Id === "" || ObjRequest.Proposal_Id === null) ? "" : ObjRequest.Proposal_Id,
                                                                        'Quote_Id': (ObjRequest.Quote_Id === undefined || ObjRequest.Quote_Id === "" || ObjRequest.Quote_Id === null) ? "" : ObjRequest.Quote_Id,
                                                                        'KYC_Request_Core': kyc_verify_request,
                                                                        'KYC_Response_Core': kyc_verify_response
                                                                    };
                                                                    var kyc_history1 = new kyc_history(queryObj1);
                                                                    kyc_history1.save(queryObj1, function (err, users) {
                                                                        if (err) {
                                                                            res.json({"Insurer": "TATA_AIG", "Msg": err, "Status": "FAIL"});
                                                                        } else {
                                                                            //res.json({"Insurer": "TATA_AIG", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                                                        }
                                                                    });
                                                                } catch (e) {
                                                                    res.json({"Insurer": "TATA_AIG", "Msg": e.stack, "Status": "FAIL"});
                                                                }
                                                                res.json({"Insurer": "TATA_AIG", "Msg": LM_Data, "Status": LM_Data.KYC_Status});
                                                            } else {
                                                                res.json({"Insurer": "TATA_AIG", "Msg": "KYC verify services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                                                            }
                                                        });
////                                                    } else {
////                                                        res.json({"Insurer": "TATA_AIG", "Msg": "KYC verify services failed due to no details available in KYC Details Database. Please try again later.", "Status": "FAIL"});
////                                                    }
////                                                });
////                                            }
////                                        });
//                                    } else {
//                                        res.json({"Insurer": "TATA_AIG", "Msg": "KYC verify services failed due to no details available in user data. Please try again later.", "Status": "FAIL"});
//                                    }
//                                });
                            } else {
                                res.json({"Insurer": "TATA_AIG", "Msg": "Could Not Generate Token. Please try again later.", "Status": "FAIL"});
                            }
                        } catch (e2) {
                            res.json({"Insurer": "TATA_AIG", "Msg": e2.stack, "Status": "FAIL"});
                        }
                    } else {
                        res.json({"Insurer": "TATA_AIG", "Msg": "KYC-Token generation services was not successful. Please try again later.", "Status": "FAIL"});
                    }
                } else {
                    res.json({"Insurer": "TATA_AIG", "Msg": "KYC-Token generation services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                }
            });
        } catch (e1) {
            res.json({"Insurer": "TATA_AIG", "Msg": e1.stack, "Status": "FAIL"});
        }
    });
    app.get('/kyc_details/tataaig_update_proposal_kyc/:udid', function (req, res) {
        try {
            let udid = req.params['udid'] - 0;
            let Client = require('node-rest-client').Client;
            let client = new Client();
            let LM_Data = {"KYC_Status": "KYC_UPDATE_FAIL"};
            let kyc_update_request = "";
            let kyc_update_response = "";
            kyc_detail.findOne({'User_Data_Id': udid}).sort({Modified_On: -1}).exec(function (err, db_kyc_details) {
                if (db_kyc_details) {
                    let obj_Kyc_details = db_kyc_details._doc;
                    let t = ((config.environment.name === 'Production') ? '76FA61783DDADCD9A738131EEE3DDE223122EFC4A867959369EBC40E99AC64BD93A197BBC43176B46B2D6F5ADC6E88209A2EB505032B219F65B9D27A3604A6E4D35E90FD5D7E56F94DDA36BDDDEACC8C8A5A4858894E99DC91D5BCA85D17D0CF3C15F0D4B8BABDA7313129E007BD492205E00A2DB09E9E22B5A7ED79375B4F799E0CC7751A730A4830801DCDFBE66B1E7FCC8D9B11F6F20E8407F25486BB41B26DC84593294CF78DBBD19F529B13614F' : '2D9D1BC5A837E7A2741C6121317E9EE6CE1D32145CBCF7084FA4493ECDA2C2804969A5473610BC2AB4FC034359C11D55F99F8AEC736D84F0EFD531DFE24FFC74F0923F1288A83121B8045A8AAA4D9F920B4D737E3A1134B824E23B1F0561D97AEA647554A31570720BDB6E4CE3D8813A1138ABF16F2A23A8E6BAB012DD07B768019A5B583351F6D36C1F6F26B5C8D474D2F701E664A96F73806EE3A5235DEFFD76CF4106F7F074A55258D75B1DDEFD38');
                    let product_code = ((config.environment.name === 'Production') ? '3121' : '3121');
                    const event = new Date();
                    let update_args = {
                        "T": t,
                        "product_code": product_code,
                        "proposal_no": obj_Kyc_details.Proposal_Id,
                        "p_ckyc_pan": obj_Kyc_details.PAN,
                        "p_ckyc_no": obj_Kyc_details.KYC_Number,
                        "p_ckyc_id_type": obj_Kyc_details.Search_Type,
                        "p_ckyc_id_no": "",
                        "timestamp": event.toISOString(),
                        "kyc_status": "SUCCESS"
                    };
                    kyc_update_request = update_args;
                    let kyc_token_args = {
                        data: update_args,
                        headers: {
                            "Content-Type": "application/x-www-form-urlencoded"
                        }
                    };
                    function jsonToQueryString(json) {
                        return  Object.keys(json).map(function (key) {
                            return encodeURIComponent(key) + '=' +
                                    encodeURIComponent(json[key]);
                        }).join('&');
                    }
                    kyc_token_args.data = jsonToQueryString(kyc_token_args.data);
                    let update_kyc_detail = ((config.environment.name === 'Production') ? 'https://inode.tataaig.com/tagicinodems/ws/v1/ws/getws/kycdet' : 'https://pipuat.tataaiginsurance.in/tagichubms/ws/v1/ws/getws/kycdet');
                    client.post(update_kyc_detail, kyc_token_args, function (get_update_date, response12) {
                        kyc_update_response = get_update_date;
                        if (get_update_date && get_update_date.hasOwnProperty('status') && get_update_date['status'] === "1" && get_update_date.hasOwnProperty('errcode') && get_update_date['errcode'] === "KYC002") {
                            LM_Data['KYC_Status'] = "KYC_UPDATE_SUCCESS";
//                            res.json({"Insurer": "TATA_AIG", "Msg": get_update_date, "Status": "KYC_UPDATE_SUCCESS"});
                        } else {
                            LM_Data['KYC_Status'] = "KYC_UPDATE_FAIL";
//                            res.json({"Insurer": "TATA_AIG", "Msg": get_update_date, "Status": "KYC_UPDATE_FAIL"});
                        }
                        try {
                            let queryObj = {
                                'Search_Type': "Update",
                                'KYC_Number': obj_Kyc_details.KYC_Number,
                                'KYC_Status': LM_Data['KYC_Status'],
                                'Modified_On': new Date()
                            };
                            let cond = {
                                'Insurer_Id': obj_Kyc_details.Insurer_Id - 0,
                                'PB_CRN': (obj_Kyc_details.PB_CRN === undefined || obj_Kyc_details.PB_CRN === "" || obj_Kyc_details.PB_CRN === null) ? "" : obj_Kyc_details.PB_CRN - 0
                            };
                            kyc_detail.update(cond, {$set: queryObj}, function (err, users) {
                                if (err) {
                                    res.json({"Insurer": "UPDATE_KYC", "Msg": err, "Status": "FAIL"});
                                } else {

                                }
                            });
                            let queryObj1 = {
                                'PB_CRN': obj_Kyc_details.PB_CRN ? obj_Kyc_details.PB_CRN : "",
                                'User_Data_Id': obj_Kyc_details.User_Data_Id ? obj_Kyc_details.User_Data_Id : "",
                                'Insurer_Id': obj_Kyc_details.Insurer_Id,
                                'Product_Id': obj_Kyc_details.Product_Id ? obj_Kyc_details.Product_Id : "",
                                'PAN': (obj_Kyc_details.PAN === undefined || obj_Kyc_details.PAN === "" || obj_Kyc_details.PAN === null) ? "" : obj_Kyc_details.PAN,
                                'Aadhar': (obj_Kyc_details.Aadhaar === undefined || obj_Kyc_details.Aadhaar === "" || obj_Kyc_details.Aadhaar === null) ? "" : obj_Kyc_details.Aadhaar,
                                'DOB': (obj_Kyc_details.DOB === undefined || obj_Kyc_details.DOB === "" || obj_Kyc_details.DOB === null) ? "" : obj_Kyc_details.DOB,
                                'Full_Name': obj_Kyc_details.Proposal_Request['middle_name'] === "" ? (obj_Kyc_details.Proposal_Request['first_name'] + " " + obj_Kyc_details.Proposal_Request['last_name']) : (obj_Kyc_details.Proposal_Request['first_name'] + " " + obj_Kyc_details.Proposal_Request['middle_name'] + " " + obj_Kyc_details.Proposal_Request['last_name']),
                                'Mobile': (obj_Kyc_details.Mobile === undefined || obj_Kyc_details.Mobile === "" || obj_Kyc_details.Mobile === null) ? "" : obj_Kyc_details.Mobile - 0,
                                'Email': (obj_Kyc_details.Email === undefined || obj_Kyc_details.Email === "" || obj_Kyc_details.Email === null) ? "" : obj_Kyc_details.Email,
                                'KYC_Number': obj_Kyc_details.KYC_Number,
                                'Search_Type': "Update",
                                'KYC_Status': LM_Data['KYC_Status'],
                                'PAN_Doc': obj_Kyc_details.PAN_Doc ? obj_Kyc_details.PAN_Doc : "",
                                'Aadhar_Doc': obj_Kyc_details.Aadhar_Doc ? obj_Kyc_details.Aadhar_Doc : "",
                                'KYC_URL': obj_Kyc_details.KYC_Redirect_URL,
                                'KYC_Ref_No': obj_Kyc_details.KYC_Ref_No,
                                'Created_On': new Date(),
                                'Modified_On': new Date(),
                                //'Proposal_Request': (obj_Kyc_details.Proposal_Request === undefined || obj_Kyc_details.Proposal_Request === "" || obj_Kyc_details.Proposal_Request === null) ? "" : obj_Kyc_details.Proposal_Request,
                                'Proposal_Id': (obj_Kyc_details.Proposal_Id === undefined || obj_Kyc_details.Proposal_Id === "" || obj_Kyc_details.Proposal_Id === null) ? "" : obj_Kyc_details.Proposal_Id,
                                'Quote_Id': (obj_Kyc_details.Quote_Id === undefined || obj_Kyc_details.Quote_Id === "" || obj_Kyc_details.Quote_Id === null) ? "" : obj_Kyc_details.Quote_Id,
                                'KYC_Request_Core': kyc_update_request,
                                'KYC_Response_Core': kyc_update_response
                            };
                            var kyc_history1 = new kyc_history(queryObj1);
                            kyc_history1.save(queryObj1, function (err, users) {
                                if (err) {
                                    res.json({"Insurer": "UPDATE_KYC", "Msg": err, "Status": "FAIL"});
                                } else {

                                }
                            });
                            res.json({"Insurer": "UPDATE_KYC", "Msg": get_update_date, "Status": LM_Data['KYC_Status']});
                        } catch (e) {
                            res.json({"Insurer": "UPDATE_KYC", "Msg": e.stack, "Status": "FAIL"});
                        }
                    });
                } else {
                    res.json({"Insurer": "UPDATE_KYC", "Msg": "tataaig_update_proposal_kyc services failed due to no kyc details found. Please try again later.", "Status": "FAIL"});
                }
            });
        } catch (e) {
            res.json({"Insurer": "UPDATE_KYC", "Msg": "tataaig_update_proposal_kyc services failed due to Exception. Please try again later.", "Status": "FAIL"});
        }
    });
    app.post('/kyc_details/iffco_create_kyc_details', function (req, res) {
        try {
            let ObjRequest = req.body;
            let crn = ObjRequest.crn - 0;
            let insurer_id = ObjRequest.insurer_id - 0;
            let udid = ObjRequest.udid - 0;
            let full_name = ObjRequest.Proposal_Request['middle_name'] === "" ? (ObjRequest.Proposal_Request['first_name'] + " " + ObjRequest.Proposal_Request['last_name']) : (ObjRequest.Proposal_Request['first_name'] + " " + ObjRequest.Proposal_Request['middle_name'] + " " + ObjRequest.Proposal_Request['last_name']);
            let proposal_request = ObjRequest.hasOwnProperty('Proposal_Request') && ObjRequest.Proposal_Request ? ObjRequest.Proposal_Request : {};
            let req_txt = {
                "prefix": (proposal_request.salutation === undefined || proposal_request.salutation === "" || proposal_request.salutation === null) ? "" : proposal_request.salutation,
                "firstName": (proposal_request.first_name === undefined || proposal_request.first_name === "" || proposal_request.first_name === null) ? "" : proposal_request.first_name,
                "middleName": (proposal_request.middle_name === undefined || proposal_request.middle_name === "" || proposal_request.middle_name === null) ? "" : proposal_request.middle_name,
                "lastName": (proposal_request.last_name === undefined || proposal_request.last_name === "" || proposal_request.last_name === null) ? "" : proposal_request.last_name,
                "gender": (proposal_request.gender === undefined || proposal_request.gender === "" || proposal_request.gender === null) ? "" : proposal_request.gender,
                "dateofBirth": (proposal_request.birth_date === undefined || proposal_request.birth_date === "" || proposal_request.birth_date === null) ? "" : moment(proposal_request.birth_date, 'DD/MM/YYYY').format('DD-MM-YYYY'),
                "relatedPersonPrefix": "Mr",
                "relatedPersonFirstName": (proposal_request.nominee_name === undefined || proposal_request.nominee_name === "" || proposal_request.nominee_name === null) ? "" : proposal_request.nominee_name.includes(" ") ? proposal_request.nominee_name.split(' ')[0] : proposal_request.nominee_name,
                "relatedPersonMiddleName": (proposal_request.nominee_name === undefined || proposal_request.nominee_name === "" || proposal_request.nominee_name === null) ? "" : (proposal_request.nominee_name.includes(" ") ? (proposal_request.nominee_name.split(' ').length > 2 ? proposal_request.nominee_name.split(' ')[1] : "") : ""),
                "relatedPersonLastName": (proposal_request.nominee_name === undefined || proposal_request.nominee_name === "" || proposal_request.nominee_name === null) ? "" : proposal_request.nominee_name.includes(" ") ? (proposal_request.nominee_name.split(' ').length > 2 ? proposal_request.nominee_name.split(' ')[2] : (proposal_request.nominee_name.split(' ').length > 1 ? proposal_request.nominee_name.split(' ')[1] : "")) : "",
                "relationshipType": (proposal_request.nominee_relation_text === undefined || proposal_request.nominee_relation_text === "" || proposal_request.nominee_relation_text === null) ? "" : proposal_request.nominee_relation_text,
                "mobileNumber": (proposal_request.mobile === undefined || proposal_request.mobile === "" || proposal_request.mobile === null) ? "" : proposal_request.mobile,
                "emailAddress": (proposal_request.email === undefined || proposal_request.email === "" || proposal_request.email === null) ? "" : proposal_request.email,
                //"minor": moment().diff(moment(proposal_request.dob, 'DD/MM/YYYY'), 'years') >= 18 ? "Y" : "N",
                "addressLine1": (proposal_request.permanent_address_1 === undefined || proposal_request.permanent_address_1 === "" || proposal_request.permanent_address_1 === null) ? "" : proposal_request.permanent_address_1,
                "city": (proposal_request.permanent_city === undefined || proposal_request.permanent_city === "" || proposal_request.permanent_city === null) ? "" : proposal_request.permanent_city,
                "district": (proposal_request.permanent_city === undefined || proposal_request.permanent_city === "" || proposal_request.permanent_city === null) ? "" : proposal_request.permanent_city,
                "state": (proposal_request.permanent_state === undefined || proposal_request.permanent_state === "" || proposal_request.permanent_state === null) ? "" : proposal_request.permanent_state,
                "country": "India",
                "pinCode": (proposal_request.permanent_pincode === undefined || proposal_request.permanent_pincode === "" || proposal_request.permanent_pincode === null) ? "" : proposal_request.permanent_pincode,
                "correspondenceAddressLine1": (proposal_request.communication_address_1 === undefined || proposal_request.communication_address_1 === "" || proposal_request.communication_address_1 === null) ? "" : proposal_request.communication_address_1,
                "correspondenceCity": (proposal_request.communication_city === undefined || proposal_request.communication_city === "" || proposal_request.communication_city === null) ? "" : proposal_request.communication_city,
                "correspondenceDistrict": (proposal_request.communication_city === undefined || proposal_request.communication_city === "" || proposal_request.communication_city === null) ? "" : proposal_request.communication_city,
                "correspondenceState": (proposal_request.communication_state === undefined || proposal_request.communication_state === "" || proposal_request.communication_state === null) ? "" : proposal_request.communication_state,
                "correspondenceCountry": "India",
                "correspondencePinCode": (proposal_request.communication_pincode === undefined || proposal_request.communication_pincode === "" || proposal_request.communication_pincode === null) ? "" : proposal_request.communication_pincode,
                "kycDocuments": [
                    {
                        "idType": "IDENTITY_PROOF",
                        "idName": "PAN",
                        "idNumber": (proposal_request.pan === undefined || proposal_request.pan === "" || proposal_request.pan === null) ? "" : proposal_request.pan,
                        "fileName": (ObjRequest.PAN_Doc_FileName === undefined || ObjRequest.PAN_Doc_FileName === "" || ObjRequest.PAN_Doc_FileName === null) ? "" : ObjRequest.PAN_Doc_FileName,
                        "fileExtension": (ObjRequest.PAN_Doc_Extension === undefined || ObjRequest.PAN_Doc_Extension === "" || ObjRequest.PAN_Doc_Extension === null) ? "" : ObjRequest.PAN_Doc_Extension.toLowerCase(),
                        "fileBase64": (ObjRequest.PAN_Doc === undefined || ObjRequest.PAN_Doc === "" || ObjRequest.PAN_Doc === null) ? "" : ObjRequest.PAN_Doc
                    },
                    {
                        "idType": "ADDRESS_PROOF",
                        "idName": "AADHAR CARD NUMBER",
                        "idNumber": (ObjRequest.Aadhar === undefined || ObjRequest.Aadhar === "" || ObjRequest.Aadhar === null) ? "" : typeof (ObjRequest.Aadhar) == 'number' ? JSON.stringify(ObjRequest.Aadhar) : ObjRequest.Aadhar,
                        "fileName": (ObjRequest.Aadhar_Doc_FileName === undefined || ObjRequest.Aadhar_Doc_FileName === "" || ObjRequest.Aadhar_Doc_FileName === null) ? "" : ObjRequest.Aadhar_Doc_FileName,
                        "fileExtension": (ObjRequest.Aadhar_Doc_Extension === undefined || ObjRequest.Aadhar_Doc_Extension === "" || ObjRequest.Aadhar_Doc_Extension === null) ? "" : ObjRequest.Aadhar_Doc_Extension.toLowerCase(),
                        "fileBase64": (ObjRequest.Aadhar_Doc === undefined || ObjRequest.Aadhar_Doc === "" || ObjRequest.Aadhar_Doc === null) ? "" : ObjRequest.Aadhar_Doc
                    }
                ]
            };
            let auth = 'Basic ' + Buffer.from('ITGIMOT001:partner@2020').toString('base64');
            let args = {
                data: JSON.stringify(req_txt),
                headers: {
                    "Content-Type": "application/json",
                    "Accept": "application/json",
                    'Authorization': auth
                }
            };
            kyc_create_request = req_txt;
            let upload_req_txt = {
                "firstName": (proposal_request.first_name === undefined || proposal_request.first_name === "" || proposal_request.first_name === null) ? "" : proposal_request.first_name,
                "lastName": (proposal_request.last_name === undefined || proposal_request.last_name === "" || proposal_request.last_name === null) ? "" : proposal_request.last_name,
                "dateofBirth": (proposal_request.birth_date === undefined || proposal_request.birth_date === "" || proposal_request.birth_date === null) ? "" : proposal_request.birth_date,
                "kycDocuments": [
                    {
                        "idType": "IDENTITY_PROOF",
                        "idName": "PAN",
                        "idNumber": (proposal_request.pan === undefined || proposal_request.pan === "" || proposal_request.pan === null) ? "" : proposal_request.pan,
                        "fileName": (ObjRequest.PAN_Doc_FileName === undefined || ObjRequest.PAN_Doc_FileName === "" || ObjRequest.PAN_Doc_FileName === null) ? "" : ObjRequest.PAN_Doc_FileName,
                        "fileExtension": (ObjRequest.PAN_Doc_Extension === undefined || ObjRequest.PAN_Doc_Extension === "" || ObjRequest.PAN_Doc_Extension === null) ? "" : ObjRequest.PAN_Doc_Extension.toLowerCase(),
                        "fileBase64": (ObjRequest.PAN_Doc === undefined || ObjRequest.PAN_Doc === "" || ObjRequest.PAN_Doc === null) ? "" : ObjRequest.PAN_Doc
                    },
                    {
                        "idType": "ADDRESS_PROOF",
                        "idName": "AADHAR CARD NUMBER",
                        "idNumber": (ObjRequest.Aadhar === undefined || ObjRequest.Aadhar === "" || ObjRequest.Aadhar === null) ? "" : typeof (ObjRequest.Aadhar) == 'number' ? JSON.stringify(ObjRequest.Aadhar) : ObjRequest.Aadhar,
                        "fileName": (ObjRequest.Aadhar_Doc_FileName === undefined || ObjRequest.Aadhar_Doc_FileName === "" || ObjRequest.Aadhar_Doc_FileName === null) ? "" : ObjRequest.Aadhar_Doc_FileName,
                        "fileExtension": (ObjRequest.Aadhar_Doc_Extension === undefined || ObjRequest.Aadhar_Doc_Extension === "" || ObjRequest.Aadhar_Doc_Extension === null) ? "" : ObjRequest.Aadhar_Doc_Extension.toLowerCase(),
                        "fileBase64": (ObjRequest.Aadhar_Doc === undefined || ObjRequest.Aadhar_Doc === "" || ObjRequest.Aadhar_Doc === null) ? "" : ObjRequest.Aadhar_Doc
                    }
                ]
            };
            kyc_upload_request = upload_req_txt;
            let KYC_Status = "PENDING";
            let kyc_id = 0;
            var Client = require('node-rest-client').Client;
            var client = new Client();
            var call_upload = false;
            let LM_Data = {
                "KYC_Pan_No": "",
                "KYC_Number": "",
                "KYC_FullName": "",
                "KYC_Ref_No": "",
                "KYC_Redirect_URL": "",
                "KYC_Insurer_ID": "",
                "KYC_PB_CRN": ObjRequest.PB_CRN,
                "KYC_Status": KYC_Status
            };
             /* IMAGE SAVE START */
            let path = appRoot + "/tmp/kyc_documents";
            let doc = [];
            let aadhar_path = '';
            let pan_path = '';
            if (ObjRequest.PAN_Doc) {
                doc.push({'doc_type':'PAN','doc_name': ObjRequest.PAN_Doc_FileName, 'doc_data': ObjRequest.PAN_Doc});
                pan_path = appRoot + "/tmp/kyc_documents/" + ObjRequest.PB_CRN + "_" + ObjRequest.PAN + "_"  + ObjRequest.Insurer_Id + "." + ObjRequest.PAN_Doc_Extension;
            }
            if (ObjRequest.Aadhar_Doc) {
                doc.push({'doc_type':'Aadhar','doc_name': ObjRequest.Aadhar_Doc_FileName, 'doc_data': ObjRequest.Aadhar_Doc});
                aadhar_path = appRoot + "/tmp/kyc_documents/" + ObjRequest.PB_CRN + "_" + ObjRequest.Aadhar + "_"  + ObjRequest.Insurer_Id + "." + ObjRequest.Aadhar_Doc_Extension;
            }
            try {
                for (var i = 0; i < doc.length; i++) {
                    var doc_decoded = decodeURIComponent(doc[i]['doc_data']);
                    if (!fs.existsSync(appRoot + "/tmp/kyc_documents")) {
                        fs.mkdirSync(appRoot + "/tmp/kyc_documents");
                    }
                    if (fs.existsSync(path)) {
                        var data = doc_decoded.replace(/^data:image\/\w+;base64,/, "");
                        if (data === "") {
                            res.json({"Insurer": "IFFCO", "Msg": 'Document Unavailable', "Status": KYC_Status});
                        } else {
                            var buf = new Buffer(data, 'base64');
                            if(doc[i]['doc_type'] == "PAN"){
                                fs.writeFileSync(pan_path, buf);
                            }else{
                                fs.writeFileSync(aadhar_path, buf);
                            }
                        }
                    }
                }
            } catch (err) {
                res.json({"Insurer": "IFFCO", "Msg": err.stack, "Status": "FAIL"});
            }
            /* IMAGE SAVE END */
            let iffco_create_kyc_service_url = ((config.environment.name !== 'Production') ? 'https://staging.iffcotokio.co.in/partner-services/kyc/create' : '');
            client.post(iffco_create_kyc_service_url, args, function (data, response) {
                try {
                    kyc_create_response = data;
                    if (data.hasOwnProperty("status") && data.status == 200 && data.hasOwnProperty("result")) {
                        if (data.result.hasOwnProperty("status") && (data.result.status === 'SUCCESS' || data.result.status === 'EXISTING RECORD') && data.result.hasOwnProperty("itgiUniqueReferenceId") && data.result.itgiUniqueReferenceId) {
                            kyc_id = data.result.itgiUniqueReferenceId;
                            LM_Data.KYC_Status = "CREATE_SUCCESS";
                            LM_Data.KYC_Number = kyc_id;
                        } else {
                            call_upload = true;
                            kyc_id = data.result.itgiUniqueReferenceId;
                            LM_Data.KYC_Status = "CREATE_FAIL";
                            LM_Data.KYC_Number = kyc_id;
                            upload_req_txt.itgiUniqueReferenceId = data.result.itgiUniqueReferenceId;
                            let upload_args = {
                                data: JSON.stringify(upload_req_txt),
                                headers: {
                                    "Content-Type": "application/json",
                                    "Accept": "application/json"
                                }
                            };
                            let iffco_upload_kyc_service_url = ((config.environment.name !== 'Production') ? 'https://staging.iffcotokio.co.in/partner-services/kyc/upload' : '');
                            client.post(iffco_upload_kyc_service_url, upload_args, function (data, response) {
                                console.log('iffco_fetch_kyc_details upload doc api data - ' + data);
                                if (data.hasOwnProperty("status") && data.status === 200 && data.hasOwnProperty("result") && data.result.hasOwnProperty('apiStatus') && data.result.apiStatus === "SUCCESS") {
                                    res.json({"Insurer": "IFFCO", "Msg": LM_Data, "Status": KYC_Status});
                                } else {
                                    res.json({"Insurer": "IFFCO", "Msg": LM_Data, "Status": KYC_Status});
                                }
                            });
                        }
                    } else if (data && data.hasOwnProperty("status") && data.status !== 200 && data.hasOwnProperty("errors")) {
                        kyc_id = data.result.itgiUniqueReferenceId;
                        LM_Data.KYC_Status = "CREATE_FAIL";
                        LM_Data.KYC_Number = kyc_id;
                    } else {
                        LM_Data.KYC_Status = "CREATE_FAIL";
                    }
                    try {
                        let cond = {
                            'Insurer_Id': ObjRequest.Insurer_Id - 0,
                            'PB_CRN': (ObjRequest.PB_CRN === undefined || ObjRequest.PB_CRN === "" || ObjRequest.PB_CRN === null) ? "" : ObjRequest.PB_CRN - 0
//                                                'User_Data_Id': (ObjRequest.User_Data_Id === undefined || ObjRequest.User_Data_Id === "" || ObjRequest.User_Data_Id === null) ? 0 : ObjRequest.User_Data_Id - 0
                        };
                        let setObj = {
                            'KYC_Number': LM_Data.KYC_Number,
                            'KYC_Full_Name': LM_Data.KYC_FullName,
                            'KYC_Status': LM_Data.KYC_Status,
                            'Modified_On': new Date(),
                            'KYC_URL': LM_Data.KYC_Redirect_URL
                        };
                        kyc_detail.update(cond, {$set: setObj}, function (err, users) {
                            if (err) {
                                res.json({"Insurer": "IFFCO", "Msg": err, "Status": "FAIL"});
                            } else {
                                //res.json({"Insurer": "IFFCO", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                            }
                        });
                        kyc_create_request['kycDocuments'][0]['fileBase64'] = kyc_create_request['kycDocuments'][0]['fileName'];
                        kyc_create_request['kycDocuments'][1]['fileBase64'] = kyc_create_request['kycDocuments'][1]['fileName'];
                        let queryObj1 = {
                            'PB_CRN': ObjRequest.PB_CRN ? ObjRequest.PB_CRN : "",
                            'User_Data_Id': ObjRequest.User_Data_Id ? ObjRequest.User_Data_Id : "",
                            'Insurer_Id': ObjRequest.Insurer_Id,
                            'Product_Id': ObjRequest.Product_Id ? ObjRequest.Product_Id : "",
                            'PAN': (ObjRequest.PAN === undefined || ObjRequest.PAN === "" || ObjRequest.PAN === null) ? "" : ObjRequest.PAN,
                            'Aadhar': (ObjRequest.Aadhaar === undefined || ObjRequest.Aadhaar === "" || ObjRequest.Aadhaar === null) ? "" : ObjRequest.Aadhaar,
                            'DOB': (ObjRequest.DOB === undefined || ObjRequest.DOB === "" || ObjRequest.DOB === null) ? "" : ObjRequest.DOB,
                            'Full_Name': ObjRequest.Proposal_Request['middle_name'] === "" ? (ObjRequest.Proposal_Request['first_name'] + " " + ObjRequest.Proposal_Request['last_name']) : (ObjRequest.Proposal_Request['first_name'] + " " + ObjRequest.Proposal_Request['middle_name'] + " " + ObjRequest.Proposal_Request['last_name']),
                            'Mobile': (ObjRequest.Mobile === undefined || ObjRequest.Mobile === "" || ObjRequest.Mobile === null) ? "" : ObjRequest.Mobile - 0,
                            'Email': (ObjRequest.Email === undefined || ObjRequest.Email === "" || ObjRequest.Email === null) ? "" : ObjRequest.Email,
                            'KYC_Number': LM_Data.KYC_Number,
                            'Search_Type': ObjRequest.Search_Type ? ObjRequest.Search_Type : "",
                            'KYC_Status': LM_Data.KYC_Status,
                            'PAN_Doc':  kyc_create_request['kycDocuments'][0]['fileName'],//ObjRequest.PAN_Doc ? ObjRequest.PAN_Doc : "",
                            'Aadhar_Doc':  kyc_create_request['kycDocuments'][1]['fileName'],//ObjRequest.Aadhar_Doc ? ObjRequest.Aadhar_Doc : "",
                            'KYC_URL': LM_Data.KYC_Redirect_URL,
                            'Created_On': new Date(),
                            'Modified_On': new Date(),
                            //'Proposal_Request': (ObjRequest.Proposal_Request === undefined || ObjRequest.Proposal_Request === "" || ObjRequest.Proposal_Request === null) ? "" : ObjRequest.Proposal_Request,
                            'Proposal_Id': (ObjRequest.Proposal_Id === undefined || ObjRequest.Proposal_Id === "" || ObjRequest.Proposal_Id === null) ? "" : ObjRequest.Proposal_Id,
                            'Quote_Id': (ObjRequest.Quote_Id === undefined || ObjRequest.Quote_Id === "" || ObjRequest.Quote_Id === null) ? "" : ObjRequest.Quote_Id,
                            'KYC_Request_Core': kyc_create_request,
                            'KYC_Response_Core': kyc_create_response
                        };
                        var kyc_history1 = new kyc_history(queryObj1);
                        kyc_history1.save(queryObj1, function (err, users) {
                            if (err) {
                                res.json({"Insurer": "IFFCO", "Msg": err, "Status": "FAIL"});
                            } else {
                                //res.json({"Insurer": "IFFCO", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                            }
                        });
                    } catch (e) {
                        res.json({"Insurer": "IFFCO", "Msg": e.stack, "Status": "FAIL"});
                    }
                    if (!call_upload) {
                        res.json({"Insurer": "IFFCO", "Msg": LM_Data, "Status": LM_Data.KYC_Status});
                        //res.json({"Insurer": "IFFCO", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                    }
                } catch (err) {
                    res.json({"Insurer": "IFFCO", "Msg": err.stack, "Status": "FAIL"});
                }
            });
        } catch (e1) {
            res.json({"Insurer": "IFFCO", "Msg": e1.stack, "Status": "FAIL"});
        }
    });

    app.post('/kyc_details/iffco_fetch_kyc_details', function (req, res) {
        try {
            let ObjRequest = req.body;
            let kyc_fetch_request = "";
            let kyc_fetch_response = "";
            let vehicle_registration_type = (ObjRequest.vehicle_registration_type === undefined || ObjRequest.vehicle_registration_type === "" || ObjRequest.vehicle_registration_type === null) ? "" : ObjRequest.vehicle_registration_type;
            vehicle_registration_type = (vehicle_registration_type === "") ? "" : (vehicle_registration_type === "corporate" ? "C" : "I");
            vehicle_registration_type = "I";
            var user_kyc_no = (req.body.user_kyc_no === undefined || req.body.user_kyc_no === "" || req.body.user_kyc_no === null) ? "" : req.body.user_kyc_no;
            let req_txt = {
                "firstName": (ObjRequest.Proposal_Request.first_name === undefined || ObjRequest.Proposal_Request.first_name === "" || ObjRequest.Proposal_Request.first_name === null) ? "" : ObjRequest.Proposal_Request.first_name,
                "lastName": (ObjRequest.Proposal_Request.last_name === undefined || ObjRequest.Proposal_Request.last_name === "" || ObjRequest.Proposal_Request.last_name === null) ? "" : ObjRequest.Proposal_Request.last_name,
                "dateofBirth": (ObjRequest.Proposal_Request.birth_date === undefined || ObjRequest.Proposal_Request.birth_date === "" || ObjRequest.Proposal_Request.birth_date === null || ObjRequest.Proposal_Request.birth_date === "Invalid Date") ? "" : moment(ObjRequest.Proposal_Request.birth_date, 'DD/MM/YYYY').format('DD-MM-YYYY'),
                "gender": (ObjRequest.Proposal_Request.gender === undefined || ObjRequest.Proposal_Request.gender === "" || ObjRequest.Proposal_Request.gender === null) ? "" : ObjRequest.Proposal_Request.gender
            };
            if (ObjRequest.Proposal_Request.hasOwnProperty('pan') && ObjRequest.Proposal_Request.pan !== undefined && ObjRequest.Proposal_Request.pan !== "" && ObjRequest.Proposal_Request.pan !== null) {
                req_txt['idType'] = 'PAN';
                req_txt['idNumber'] = ObjRequest.Proposal_Request.pan;
            } else if (ObjRequest.Proposal_Request.hasOwnProperty('aadhar') && ObjRequest.Proposal_Request.aadhar !== undefined && ObjRequest.Proposal_Request.aadhar !== "" && ObjRequest.Proposal_Request.aadhar !== null) {
                req_txt['idType'] = 'AADHAR CARD NUMBER';
                req_txt['idNumber'] = ObjRequest.Proposal_Request.aadhar;
            }
            var auth = 'Basic ' + Buffer.from('ITGIMOT001:partner@2020').toString('base64');
            let args = {
                data: JSON.stringify(req_txt),
                headers: {
                    "Content-Type": "application/json",
                    "Accept": "application/json",
                    'Authorization': auth
                }
            };
            kyc_fetch_request = req_txt;
            let KYC_Status = "PENDING";
            let kyc_id = 0;
            var Client = require('node-rest-client').Client;
            var client = new Client();
            let LM_Data = {
                "KYC_Pan_No": "",
                "KYC_Number": "",
                "KYC_FullName": "",
                "KYC_Ref_No": "",
                "KYC_Redirect_URL": "",
                "KYC_Insurer_ID": "",
                "KYC_PB_CRN": ObjRequest.PB_CRN,
                "KYC_Status": KYC_Status
            };
            let iffco_fetch_kyc_service_url = ((config.environment.name !== 'Production') ? 'https://staging.iffcotokio.co.in/partner-services/kyc/fetch' : '');
            client.post(iffco_fetch_kyc_service_url, args, function (data, response) {
                if (data) {
                    kyc_fetch_response = data;
                    if (data.hasOwnProperty("status") && data.status == 200 && data.hasOwnProperty("result") && data.result.hasOwnProperty("itgiUniqueReferenceId") && data.result.itgiUniqueReferenceId) {
                        LM_Data.KYC_Status = "FETCH_SUCCESS";
                        kyc_id = data.result.itgiUniqueReferenceId;
                        LM_Data.KYC_Number = kyc_id;
                        LM_Data.KYC_FullName = ((data.result.hasOwnProperty("firstName") ? data.result.firstName : '').trim() + ' ' + (data.result.hasOwnProperty("middleName") ? data.result.middleName : '').trim()).trim() + ' ' + (data.result.hasOwnProperty("lastName") ? data.result.lastName : '').trim();
                    } else {
                        LM_Data.KYC_Status = "FETCH_FAIL";
                    }

                    try {
                        let cond = {
                            'Insurer_Id': ObjRequest.Insurer_Id - 0,
                            'PB_CRN': (ObjRequest.PB_CRN === undefined || ObjRequest.PB_CRN === "" || ObjRequest.PB_CRN === null) ? "" : ObjRequest.PB_CRN - 0
//                                                'User_Data_Id': (ObjRequest.User_Data_Id === undefined || ObjRequest.User_Data_Id === "" || ObjRequest.User_Data_Id === null) ? 0 : ObjRequest.User_Data_Id - 0
                        };
                        let setObj = {
                            'KYC_Number': LM_Data.KYC_Number,
                            'KYC_Full_Name': LM_Data.KYC_FullName,
                            'KYC_Status': LM_Data.KYC_Status,
                            'Modified_On': new Date(),
                            'KYC_URL': LM_Data.KYC_Redirect_URL
                        };
                        kyc_detail.update(cond, {$set: setObj}, function (err, users) {
                            if (err) {
                                res.json({"Insurer": "IFFCO", "Msg": err, "Status": "FAIL"});
                            } else {
                                //res.json({"Insurer": "IFFCO", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                            }
                        });
                        let queryObj1 = {
                            'PB_CRN': ObjRequest.PB_CRN ? ObjRequest.PB_CRN : "",
                            'User_Data_Id': ObjRequest.User_Data_Id ? ObjRequest.User_Data_Id : "",
                            'Insurer_Id': ObjRequest.Insurer_Id,
                            'Product_Id': ObjRequest.Product_Id ? ObjRequest.Product_Id : "",
                            'PAN': (ObjRequest.PAN === undefined || ObjRequest.PAN === "" || ObjRequest.PAN === null) ? "" : ObjRequest.PAN,
                            'Aadhar': (ObjRequest.Aadhaar === undefined || ObjRequest.Aadhaar === "" || ObjRequest.Aadhaar === null) ? "" : ObjRequest.Aadhaar,
                            'DOB': (ObjRequest.DOB === undefined || ObjRequest.DOB === "" || ObjRequest.DOB === null) ? "" : ObjRequest.DOB,
                            'Full_Name': ObjRequest.Proposal_Request['middle_name'] === "" ? (ObjRequest.Proposal_Request['first_name'] + " " + ObjRequest.Proposal_Request['last_name']) : (ObjRequest.Proposal_Request['first_name'] + " " + ObjRequest.Proposal_Request['middle_name'] + " " + ObjRequest.Proposal_Request['last_name']),
                            'Mobile': (ObjRequest.Mobile === undefined || ObjRequest.Mobile === "" || ObjRequest.Mobile === null) ? "" : ObjRequest.Mobile - 0,
                            'Email': (ObjRequest.Email === undefined || ObjRequest.Email === "" || ObjRequest.Email === null) ? "" : ObjRequest.Email,
                            'KYC_Number': LM_Data.KYC_Number,
                            'Search_Type': ObjRequest.Search_Type ? ObjRequest.Search_Type : "",
                            'KYC_Status': LM_Data.KYC_Status,
                            'PAN_Doc': ObjRequest.PAN_Doc ? ObjRequest.PAN_Doc : "",
                            'Aadhar_Doc': ObjRequest.Aadhar_Doc ? ObjRequest.Aadhar_Doc : "",
                            'KYC_URL': LM_Data.KYC_Redirect_URL,
                            'Created_On': new Date(),
                            'Modified_On': new Date(),
                            //'Proposal_Request': (ObjRequest.Proposal_Request === undefined || ObjRequest.Proposal_Request === "" || ObjRequest.Proposal_Request === null) ? "" : ObjRequest.Proposal_Request,
                            'Proposal_Id': (ObjRequest.Proposal_Id === undefined || ObjRequest.Proposal_Id === "" || ObjRequest.Proposal_Id === null) ? "" : ObjRequest.Proposal_Id,
                            'Quote_Id': (ObjRequest.Quote_Id === undefined || ObjRequest.Quote_Id === "" || ObjRequest.Quote_Id === null) ? "" : ObjRequest.Quote_Id,
                            'KYC_Request_Core': kyc_fetch_request,
                            'KYC_Response_Core': kyc_fetch_response
                        };
                        var kyc_history1 = new kyc_history(queryObj1);
                        kyc_history1.save(queryObj1, function (err, users) {
                            if (err) {
                                res.json({"Insurer": "IFFCO", "Msg": err, "Status": "FAIL"});
                            } else {
                                //res.json({"Insurer": "IFFCO", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                            }
                        });
                    } catch (e) {
                        res.json({"Insurer": "IFFCO", "Msg": e.stack, "Status": "FAIL"});
                    }
                    res.json({"Insurer": "IFFCO", "Msg": LM_Data, "Status": LM_Data.KYC_Status});
                } else {
                    res.json({"Insurer": "IFFCO", "Msg": "KYC verify services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                }
            });
        } catch (e1) {
            res.json({"Insurer": "IFFCO", "Msg": e1.stack, "Status": "FAIL"});
        }
    });

    app.post('/kyc_details/iffco_verify_kyc_details', function (req, res) {
        try {
            let ObjRequest = req.body;
            let kyc_fetch_request = "";
            let kyc_fetch_response = "";
            let vehicle_registration_type = (ObjRequest.vehicle_registration_type === undefined || ObjRequest.vehicle_registration_type === "" || ObjRequest.vehicle_registration_type === null) ? "" : ObjRequest.vehicle_registration_type;
            vehicle_registration_type = (vehicle_registration_type === "") ? "" : (vehicle_registration_type === "corporate" ? "C" : "I");
            vehicle_registration_type = "I";
            var user_kyc_no = (ObjRequest.user_kyc_no === undefined || ObjRequest.user_kyc_no === "" || ObjRequest.user_kyc_no === null) ? "" : ObjRequest.user_kyc_no;
            let req_txt = {
                "firstName": (ObjRequest.Proposal_Request.first_name === undefined || ObjRequest.Proposal_Request.first_name === "" || ObjRequest.Proposal_Request.first_name === null) ? "" : ObjRequest.Proposal_Request.first_name,
                "lastName": (ObjRequest.Proposal_Request.last_name === undefined || ObjRequest.Proposal_Request.last_name === "" || ObjRequest.Proposal_Request.last_name === null) ? "" : ObjRequest.Proposal_Request.last_name,
                "dateofBirth": (ObjRequest.Proposal_Request.birth_date === undefined || ObjRequest.Proposal_Request.birth_date === "" || ObjRequest.Proposal_Request.birth_date === null || ObjRequest.Proposal_Request.birth_date === "Invalid Date") ? "" : moment(ObjRequest.Proposal_Request.birth_date, 'DD/MM/YYYY').format('DD-MM-YYYY'),
                "gender": (ObjRequest.Proposal_Request.gender === undefined || ObjRequest.Proposal_Request.gender === "" || ObjRequest.Proposal_Request.gender === null) ? "" : ObjRequest.Proposal_Request.gender,
                "idType": 'ITGI UNIQUE IDENTIFIER',
                "idNumber" : user_kyc_no
            };
            /*if (ObjRequest.Proposal_Request.hasOwnProperty('pan') && ObjRequest.Proposal_Request.pan !== undefined && ObjRequest.Proposal_Request.pan !== "" && ObjRequest.Proposal_Request.pan !== null) {
                req_txt['idType'] = 'PAN';
                req_txt['idNumber'] = ObjRequest.Proposal_Request.pan;
            } else if (ObjRequest.Proposal_Request.hasOwnProperty('aadhar') && ObjRequest.Proposal_Request.aadhar !== undefined && ObjRequest.Proposal_Request.aadhar !== "" && ObjRequest.Proposal_Request.aadhar !== null) {
                req_txt['idType'] = 'AADHAR CARD NUMBER';
                req_txt['idNumber'] = ObjRequest.Proposal_Request.aadhar;
            }*/
            
            var auth = 'Basic ' + Buffer.from('ITGIMOT001:partner@2020').toString('base64');
            let args = {
                data: JSON.stringify(req_txt),
                headers: {
                    "Content-Type": "application/json",
                    "Accept": "application/json",
                    'Authorization': auth
                }
            };
            kyc_verify_request = req_txt;
            let KYC_Status = "VERIFY_FAIL";
            let kyc_id = 0;
            var Client = require('node-rest-client').Client;
            var client = new Client();
            let LM_Data = {
                "KYC_Pan_No": "",
                "KYC_Number": "",
                "KYC_FullName": "",
                "KYC_Ref_No": "",
                "KYC_Redirect_URL": "",
                "KYC_Insurer_ID": "",
                "KYC_PB_CRN": ObjRequest.PB_CRN,
                "KYC_Status": KYC_Status
            };
            let iffco_fetch_kyc_service_url = ((config.environment.name !== 'Production') ? 'https://staging.iffcotokio.co.in/partner-services/kyc/fetch' : '');
            client.post(iffco_fetch_kyc_service_url, args, function (data, response) {
                if (data) {
                    kyc_verify_response = data;
                    if (data.hasOwnProperty("status") && data.status == 200 && data.hasOwnProperty("result") && data.result.hasOwnProperty("itgiUniqueReferenceId") && data.result.itgiUniqueReferenceId) {
                        LM_Data.KYC_Status = "VERIFY_SUCCESS";
                        kyc_id = data.result.itgiUniqueReferenceId;
                        LM_Data.KYC_Number = data.result.itgiUniqueReferenceId;
                        LM_Data.KYC_FullName = ((data.result.hasOwnProperty("firstName") ? data.result.firstName : '').trim() + ' ' + (data.result.hasOwnProperty("middleName") ? data.result.middleName : '').trim()).trim() + ' ' + (data.result.hasOwnProperty("lastName") ? data.result.lastName : '').trim();
                    } else {
                        LM_Data.KYC_Status = "VERIFY_FAIL";
                    }

                    try {
                        let queryObj = {
                            'Search_Type': (ObjRequest.Verify_Search_Type === undefined || ObjRequest.Verify_Search_Type === "" || ObjRequest.Verify_Search_Type === null) ? "" : ObjRequest.Verify_Search_Type,
                            'KYC_Number': user_kyc_no,
                            'KYC_Status': LM_Data.KYC_Status,
                            'Modified_On': new Date()
                        };
                        let cond = {
                            'Insurer_Id': ObjRequest.Insurer_Id - 0,
                            'PB_CRN': (ObjRequest.PB_CRN === undefined || ObjRequest.PB_CRN === "" || ObjRequest.PB_CRN === null) ? "" : ObjRequest.PB_CRN - 0
//                                                'User_Data_Id': (objRequest.User_Data_Id === undefined || objRequest.User_Data_Id === "" || objRequest.User_Data_Id === null) ? 0 : objRequest.User_Data_Id - 0
                        };
                        //var kyc_detail1 = new kyc_detail(queryObj);
                        kyc_detail.update(cond, {$set: queryObj}, function (err, users) {
                            if (err) {
                                res.json({"Insurer": "IFFCO", "Msg": err, "Status": "FAIL"});
                            } else {
                                //res.json({"Insurer": "IFFCO", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                            }
                        });
                        let queryObj1 = {
                            'PB_CRN': ObjRequest.PB_CRN ? ObjRequest.PB_CRN : "",
                            'User_Data_Id': ObjRequest.User_Data_Id ? ObjRequest.User_Data_Id : "",
                            'Insurer_Id': ObjRequest.Insurer_Id,
                            'Product_Id': ObjRequest.Product_Id ? ObjRequest.Product_Id : "",
                            'PAN': (ObjRequest.PAN === undefined || ObjRequest.PAN === "" || ObjRequest.PAN === null) ? "" : ObjRequest.PAN,
                            'Aadhar': (ObjRequest.Aadhaar === undefined || ObjRequest.Aadhaar === "" || ObjRequest.Aadhaar === null) ? "" : ObjRequest.Aadhaar,
                            'DOB': (ObjRequest.DOB === undefined || ObjRequest.DOB === "" || ObjRequest.DOB === null) ? "" : ObjRequest.DOB,
                            'Full_Name': ObjRequest.Proposal_Request['middle_name'] === "" ? (ObjRequest.Proposal_Request['first_name'] + " " + ObjRequest.Proposal_Request['last_name']) : (ObjRequest.Proposal_Request['first_name'] + " " + ObjRequest.Proposal_Request['middle_name'] + " " + ObjRequest.Proposal_Request['last_name']),
                            'Mobile': (ObjRequest.Mobile === undefined || ObjRequest.Mobile === "" || ObjRequest.Mobile === null) ? "" : ObjRequest.Mobile - 0,
                            'Email': (ObjRequest.Email === undefined || ObjRequest.Email === "" || ObjRequest.Email === null) ? "" : ObjRequest.Email,
                            'KYC_Number': LM_Data.KYC_Number,
                            'Search_Type': ObjRequest.Search_Type ? ObjRequest.Search_Type : "",
                            'KYC_Status': LM_Data.KYC_Status,
                            'PAN_Doc': ObjRequest.PAN_Doc ? ObjRequest.PAN_Doc : "",
                            'Aadhar_Doc': ObjRequest.Aadhar_Doc ? ObjRequest.Aadhar_Doc : "",
                            'KYC_URL': LM_Data.KYC_Redirect_URL,
                            'Created_On': new Date(),
                            'Modified_On': new Date(),
                            //'Proposal_Request': (ObjRequest.Proposal_Request === undefined || ObjRequest.Proposal_Request === "" || ObjRequest.Proposal_Request === null) ? "" : ObjRequest.Proposal_Request,
                            'Proposal_Id': (ObjRequest.Proposal_Id === undefined || ObjRequest.Proposal_Id === "" || ObjRequest.Proposal_Id === null) ? "" : ObjRequest.Proposal_Id,
                            'Quote_Id': (ObjRequest.Quote_Id === undefined || ObjRequest.Quote_Id === "" || ObjRequest.Quote_Id === null) ? "" : ObjRequest.Quote_Id,
                            'KYC_Request_Core': kyc_verify_request,
                            'KYC_Response_Core': kyc_verify_response
                        };
                        var kyc_history1 = new kyc_history(queryObj1);
                        kyc_history1.save(queryObj1, function (err, users) {
                            if (err) {
                                res.json({"Insurer": "IFFCO", "Msg": err, "Status": "FAIL"});
                            } else {
                                //res.json({"Insurer": "IFFCO", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                            }
                        });
                    } catch (e) {
                        res.json({"Insurer": "IFFCO", "Msg": e.stack, "Status": "FAIL"});
                    }
                    res.json({"Insurer": "IFFCO", "Msg": LM_Data, "Status": LM_Data.KYC_Status});
                } else {
                    res.json({"Insurer": "IFFCO", "Msg": "KYC verify services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                }
            });
        } catch (e1) {
            res.json({"Insurer": "IFFCO", "Msg": e1.stack, "Status": "FAIL"});
        }
    });
    app.post('/kyc_details/chola_fetch_kyc_details', function (req, res) {
        try {
            let objRequest = req.body;
            let proposal_request = objRequest.Proposal_Request;
            let kyc_fetch_request = "";
            let kyc_fetch_response = "";
            let vehicle_registration_type = (objRequest.vehicle_registration_type === undefined || objRequest.vehicle_registration_type === "" || objRequest.vehicle_registration_type === null) ? "" : objRequest.vehicle_registration_type;
            vehicle_registration_type = (vehicle_registration_type === "") ? "" : (vehicle_registration_type === "corporate" ? "C" : "I");
            let chola_token_service = (config.environment.name === "Production") ? "https://bapps.cholainsurance.com/ckycapi/api/KYC/CholaMS_CKYC_Auth" : "https://uatportal.cholainsurance.com/Epolicyv3API/api/KYC/CholaMS_CKYC_Auth";
            let chola_verify_service = (config.environment.name === "Production") ? "https://bapps.cholainsurance.com/ckycapi/api/KYC/CholaMS_CKYC_Verify" : "https://uatportal.cholainsurance.com/Epolicyv3API/api/KYC/CholaMS_CKYC_Verify";
            vehicle_registration_type = "I";
            var user_kyc_no = (objRequest.KYC_Number === undefined || objRequest.KYC_Number === "" || objRequest.KYC_Number === null) ? "" : objRequest.KYC_Number;
            var cust_name = null;
            if (objRequest.Proposal_Request.middle_name === undefined || objRequest.Proposal_Request.middle_name === "" || objRequest.Proposal_Request.middle_name === null) {
                cust_name = ((objRequest.Proposal_Request.first_name === undefined || objRequest.Proposal_Request.first_name === "" || objRequest.Proposal_Request.first_name === null) ? "" : objRequest.Proposal_Request.first_name) + " " +
                        ((objRequest.last_name === undefined || objRequest.Proposal_Request.last_name === "" || objRequest.Proposal_Request.last_name === null) ? "" : objRequest.Proposal_Request.last_name);
            } else {
                cust_name = ((objRequest.Proposal_Request.first_name === undefined || objRequest.Proposal_Request.first_name === "" || objRequest.Proposal_Request.first_name === null) ? "" : objRequest.Proposal_Request.first_name) + " " +
                        ((objRequest.Proposal_Request.middle_name === undefined || objRequest.Proposal_Request.middle_name === "" || objRequest.Proposal_Request.middle_name === null) ? "" : objRequest.Proposal_Request.middle_name) + " " +
                        ((objRequest.Proposal_Request.last_name === undefined || objRequest.Proposal_Request.last_name === "" || objRequest.Proposal_Request.last_name === null) ? "" : objRequest.Proposal_Request.last_name);
            }
            let req_txt = {
                "Verify_Type": "VERIFY_DEMOGRAPHY", //VERIFY or VERIFY_DEMOGRAPHY
                "App_Ref_No": objRequest.PB_CRN,
                "Customer_Type": vehicle_registration_type,
                "Customer_Name": cust_name,
                "Gender": (objRequest.Proposal_Request.gender === undefined || objRequest.Proposal_Request.gender === "" || objRequest.Proposal_Request.gender === null) ? "" : objRequest.Proposal_Request.gender,
                "DOB_DOI": (vehicle_registration_type === "I" && proposal_request.birth_date && proposal_request.birth_date !== "") ? proposal_request.birth_date : (vehicle_registration_type === "C" && objRequest.date_of_incorporation && objRequest.date_of_incorporation !== "") ? objRequest.date_of_incorporation : "",
                "Mobile_No": (objRequest.Proposal_Request.mobile === undefined || objRequest.Proposal_Request.mobile === "" || objRequest.Proposal_Request.mobile === null) ? "" : objRequest.Proposal_Request.mobile,
                "CKYC_No": user_kyc_no,
                "PAN_No": (proposal_request.pan === undefined || proposal_request.pan === "" || proposal_request.pan === null) ? "" : proposal_request.pan,
                "Aadhar_No": (proposal_request.aadhar === undefined || proposal_request.aadhar === "" || proposal_request.aadhar === null) ? "" : proposal_request.aadhar,
                "DL_No": "",
                "Voter_ID": "",
                "Passport_no": "",
                "CIN": ""
            };
            let args = {
                data: JSON.stringify(req_txt),
                headers: {
                    "Content-Type": "application/json",
                    "Accept": "*/*",
                    "TokenKey": ""
                }
            };
            let args1 = {
                data: {
                    "PrivateKey": (config.environment.name === "Production") ? "UEJMTUBDS1lD" : "VjRfU09CIUBDS1lDVWF0",
                    "UserID": (config.environment.name === "Production") ? "PBLM" : ""
                },
                headers: {
                    "Content-Type": "application/json",
                    "Accept": "*/*"
                }
            };
            kyc_fetch_request = req_txt;
            let KYC_Status = "PENDING";
            let kyc_id = 0;
            let token = null;
            var Client = require('node-rest-client').Client;
            var client = new Client();
            let LM_Data = {
                "KYC_Pan_No": objRequest.PAN ? objRequest.PAN : "",
                "KYC_Number": "",
                "KYC_FullName": "",
                "KYC_Ref_No": "",
                "KYC_Redirect_URL": "",
                "KYC_Insurer_ID": objRequest.Insurer_Id,
                "KYC_PB_CRN": objRequest.PB_CRN,
                "KYC_Status": KYC_Status,
                "ckyc_remarks": ""
            };
            client.post(chola_token_service, args1, function (data1, response1) {
                if (data1) {
                    if (data1.hasOwnProperty("TokenKey") && data1.TokenKey && data1.TokenKey !== "" && data1.ErrorMSG === 'Success') {
                        token = data1.TokenKey;
                        try {
                            if (token) {
                                args.headers.TokenKey = token;
                                var client1 = new Client();
                                client1.post(chola_verify_service, args, function (data, response) {
                                    if (data) {
                                        kyc_fetch_response = data;
                                        if (data.hasOwnProperty("Status") && data.Status === 'Success') {
                                            if (data.hasOwnProperty("CKYC_No") && data.CKYC_No && data.CKYC_No !== "") {
                                                LM_Data['KYC_Number'] = data['CKYC_No'];
                                                LM_Data['KYC_Status'] = "FETCH_SUCCESS";
                                                LM_Data['KYC_FullName'] = data['CKYC_Verified_Cust_Name'] ? data['CKYC_Verified_Cust_Name'] : "";
                                                LM_Data['KYC_Ref_No'] = data.Transaction_ID;
                                                LM_Data['ckyc_remarks'] = "NA";
                                            } else {
                                                LM_Data['KYC_Status'] = "FETCH_FAIL";
                                                LM_Data['KYC_Ref_No'] = data.Transaction_ID ? data.Transaction_ID : "";
                                                LM_Data['KYC_Redirect_URL'] = data.eKYC_Redirection_URL ? data.eKYC_Redirection_URL : objRequest.KYC_URL;
                                                LM_Data['ckyc_remarks'] = data.hasOwnProperty('ErrorMsg') ? data.ErrorMsg : data;
                                            }
                                        } else {
                                            LM_Data['KYC_Status'] = "FETCH_FAIL";
                                            LM_Data['KYC_Ref_No'] = data.Transaction_ID ? data.Transaction_ID : "";
                                            LM_Data['KYC_Redirect_URL'] = data.eKYC_Redirection_URL ? data.eKYC_Redirection_URL : objRequest.KYC_URL;
                                            LM_Data['ckyc_remarks'] = data.hasOwnProperty('ErrorMsg') ? data.ErrorMsg : data;
                                        }

                                        try {
                                            let setObj = {
                                                'KYC_Number': LM_Data.KYC_Number,
                                                'KYC_Full_Name': LM_Data.KYC_FullName,
                                                'KYC_Status': LM_Data.KYC_Status,
                                                'Modified_On': new Date(),
                                                'KYC_URL': LM_Data.KYC_Redirect_URL
                                            };
                                            let cond = {
                                                'Insurer_Id': objRequest.Insurer_Id - 0,
                                                'PB_CRN': (objRequest.PB_CRN === undefined || objRequest.PB_CRN === "" || objRequest.PB_CRN === null) ? "" : objRequest.PB_CRN - 0
                                                        // 'User_Data_Id': (objRequest.User_Data_Id === undefined || objRequest.User_Data_Id === "" || objRequest.User_Data_Id === null) ? 0 : objRequest.User_Data_Id - 0
                                            };
                                            kyc_detail.update(cond, {$set: setObj}, function (err, users) {
                                                if (err) {
                                                    res.json({"Insurer": "CholaMS", "Msg": err, "Status": "FAIL"});
                                                } else {
                                                    //res.json({"Insurer": "Edelweiss", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                                }
                                            });
                                            let queryObj1 = {
                                                'PB_CRN': objRequest.PB_CRN ? objRequest.PB_CRN : "",
                                                'User_Data_Id': objRequest.User_Data_Id ? objRequest.User_Data_Id : "",
                                                'Insurer_Id': objRequest.Insurer_Id,
                                                'Product_Id': objRequest.Product_Id ? objRequest.Product_Id : "",
                                                'PAN': (objRequest.PAN === undefined || objRequest.PAN === "" || objRequest.PAN === null) ? "" : objRequest.PAN,
                                                'Aadhaar': (objRequest.Aadhaar === undefined || objRequest.Aadhaar === "" || objRequest.Aadhaar === null) ? "" : objRequest.Aadhaar,
                                                'DOB': (objRequest.DOB === undefined || objRequest.DOB === "" || objRequest.DOB === null) ? "" : objRequest.DOB,
                                                'Full_Name': objRequest.Proposal_Request['middle_name'] === "" ? (objRequest.Proposal_Request['first_name'] + " " + objRequest.Proposal_Request['last_name']) : (objRequest.Proposal_Request['first_name'] + " " + objRequest.Proposal_Request['middle_name'] + " " + objRequest.Proposal_Request['last_name']),
                                                'Mobile': (objRequest.Mobile === undefined || objRequest.Mobile === "" || objRequest.Mobile === null) ? "" : objRequest.Mobile - 0,
                                                'Email': (objRequest.Email === undefined || objRequest.Email === "" || objRequest.Email === null) ? "" : objRequest.Email,
                                                'KYC_Number': LM_Data.KYC_Number,
                                                'Search_Type': objRequest.Search_Type ? objRequest.Search_Type : "",
                                                'KYC_Status': LM_Data.KYC_Status,
                                                'PAN_Doc': objRequest.PAN_Doc ? objRequest.PAN_Doc : "",
                                                'Aadhar_Doc': objRequest.Aadhar_Doc ? objRequest.Aadhar_Doc : "",
                                                'KYC_URL': LM_Data.KYC_Redirect_URL,
                                                'Created_On': new Date(),
                                                'Modified_On': new Date(),
                                                //'Proposal_Request': (objRequest.Proposal_Request === undefined || objRequest.Proposal_Request === "" || objRequest.Proposal_Request === null) ? "" : objRequest.Proposal_Request,
                                                'Proposal_Id': (objRequest.Proposal_Id === undefined || objRequest.Proposal_Id === "" || objRequest.Proposal_Id === null) ? "" : objRequest.Proposal_Id,
                                                'Quote_Id': (objRequest.Quote_Id === undefined || objRequest.Quote_Id === "" || objRequest.Quote_Id === null) ? "" : objRequest.Quote_Id,
                                                'KYC_Request_Core': kyc_fetch_request,
                                                'KYC_Response_Core': kyc_fetch_response
                                            };
                                            var kyc_history1 = new kyc_history(queryObj1);
                                            kyc_history1.save(queryObj1, function (err, users) {
                                                if (err) {
                                                    res.json({"Insurer": "CholaMS", "Msg": err, "Status": "FAIL"});
                                                } else {
                                                    //res.json({"Insurer": "CholaMS", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                                }
                                            });
                                        } catch (e) {
                                            res.json({"Insurer": "CholaMS", "Msg": e.stack, "Status": "FAIL"});
                                        }
                                        res.json({"Insurer": "CholaMS", "Msg": LM_Data, "Status": LM_Data.KYC_Status});
                                    } else {
                                        res.json({"Insurer": "CholaMS", "Msg": "KYC verify services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                                    }
                                });
                            } else {
                                res.json({"Insurer": "CholaMS", "Msg": "Could Not Generate Token. Please try again later.", "Status": "FAIL"});
                            }
                        } catch (e2) {
                            res.json({"Insurer": "CholaMS", "Msg": e2.stack, "Status": "FAIL"});
                        }
                    } else {
                        res.json({"Insurer": "CholaMS", "Msg": "KYC-Token not generated. Please try again later.", "Status": "FAIL"});
                    }
                } else {
                    res.json({"Insurer": "CholaMS", "Msg": "KYC-Token generation services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                }
            });
        } catch (e1) {
            res.json({"Insurer": "CholaMS", "Msg": e1.stack, "Status": "FAIL"});
        }
    });
	
    app.post('/kyc_details/chola_verify_kyc_details', function (req, res) {
        try {
            let objRequest = req.body;
            let kyc_fetch_request = "";
            let kyc_fetch_response = "";
            let vehicle_registration_type = (objRequest.vehicle_registration_type === undefined || objRequest.vehicle_registration_type === "" || objRequest.vehicle_registration_type === null) ? "" : objRequest.vehicle_registration_type;
            vehicle_registration_type = (vehicle_registration_type === "") ? "" : (vehicle_registration_type === "corporate" ? "C" : "I");
            let chola_token_service = (config.environment.name === "Production") ? "https://bapps.cholainsurance.com/ckycapi/api/KYC/CholaMS_CKYC_Auth" : "https://uatportal.cholainsurance.com/Epolicyv3API/api/KYC/CholaMS_CKYC_Auth";
            let chola_verify_service = (config.environment.name === "Production") ? "https://bapps.cholainsurance.com/ckycapi/api/KYC/CholaMS_CKYC_Verify" : "https://uatportal.cholainsurance.com/Epolicyv3API/api/KYC/CholaMS_CKYC_Verify";
            vehicle_registration_type = "I";
            var user_kyc_no = (objRequest.KYC_Number === undefined || objRequest.KYC_Number === "" || objRequest.KYC_Number === null) ? "" : objRequest.KYC_Number;
            var cust_name = null;
            if (objRequest.Proposal_Request.middle_name === undefined || objRequest.Proposal_Request.middle_name === "" || objRequest.Proposal_Request.middle_name === null) {
                cust_name = ((objRequest.Proposal_Request.first_name === undefined || objRequest.Proposal_Request.first_name === "" || objRequest.Proposal_Request.first_name === null) ? "" : objRequest.Proposal_Request.first_name) + " " +
                        ((objRequest.last_name === undefined || objRequest.Proposal_Request.last_name === "" || objRequest.Proposal_Request.last_name === null) ? "" : objRequest.Proposal_Request.last_name);
            } else {
                cust_name = ((objRequest.Proposal_Request.first_name === undefined || objRequest.Proposal_Request.first_name === "" || objRequest.Proposal_Request.first_name === null) ? "" : objRequest.Proposal_Request.first_name) + " " +
                        ((objRequest.Proposal_Request.middle_name === undefined || objRequest.Proposal_Request.middle_name === "" || objRequest.Proposal_Request.middle_name === null) ? "" : objRequest.Proposal_Request.middle_name) + " " +
                        ((objRequest.Proposal_Request.last_name === undefined || objRequest.Proposal_Request.last_name === "" || objRequest.Proposal_Request.last_name === null) ? "" : objRequest.Proposal_Request.last_name);
            }
            let req_txt = {
                "Verify_Type": "VERIFY_DEMOGRAPHY", //VERIFY or VERIFY_DEMOGRAPHY
                "App_Ref_No": objRequest.PB_CRN,
                "Customer_Type": vehicle_registration_type,
                "Customer_Name": cust_name,
                "Gender": (objRequest.Proposal_Request.gender === undefined || objRequest.Proposal_Request.gender === "" || objRequest.Proposal_Request.gender === null) ? "" : objRequest.Proposal_Request.gender,
                "DOB_DOI": (vehicle_registration_type === "I" && objRequest.DOB && objRequest.DOB !== "") ? objRequest.DOB : (vehicle_registration_type === "C" && objRequest.date_of_incorporation && objRequest.date_of_incorporation !== "") ? objRequest.date_of_incorporation : "",
                "Mobile_No": (objRequest.Proposal_Request.mobile === undefined || objRequest.Proposal_Request.mobile === "" || objRequest.Proposal_Request.mobile === null) ? "" : objRequest.Proposal_Request.mobile,
                "CKYC_No": user_kyc_no,
                "PAN_No": (objRequest.PAN === undefined || objRequest.PAN === "" || objRequest.PAN === null) ? "" : objRequest.PAN,
                "Aadhar_No": (objRequest.Aadhar === undefined || objRequest.Aadhar === "" || objRequest.Aadhar === null) ? "" : objRequest.Aadhar,
                "DL_No": "",
                "Voter_ID": "",
                "Passport_no": "",
                "CIN": ""
            };
            let args = {
                data: JSON.stringify(req_txt),
                headers: {
                    "Content-Type": "application/json",
                    "Accept": "*/*",
                    "TokenKey": ""
                }
            };
            let args1 = {
                data: {
                    "PrivateKey": (config.environment.name === "Production") ? "UEJMTUBDS1lD" : "VjRfU09CIUBDS1lDVWF0",
                    "UserID": (config.environment.name === "Production") ? "PBLM" : ""
                },
                headers: {
                    "Content-Type": "application/json",
                    "Accept": "*/*"
                }
            };
            kyc_fetch_request = req_txt;
            let KYC_Status = "VERIFY_FAIL";
            let kyc_id = 0;
            let token = null;
            var Client = require('node-rest-client').Client;
            var client = new Client();
            let LM_Data = {
                "KYC_Pan_No": objRequest.PAN ? objRequest.PAN : "",
                "KYC_Number": "",
                "KYC_FullName": "",
                "KYC_Ref_No": "",
                "KYC_Redirect_URL": "",
                "KYC_Insurer_ID": objRequest.Insurer_Id,
                "KYC_PB_CRN": objRequest.PB_CRN,
                "KYC_Status": KYC_Status,
                "ckyc_remarks": ""
            };
            client.post(chola_token_service, args1, function (data1, response1) {
                if (data1) {
                    if (data1.hasOwnProperty("TokenKey") && data1.TokenKey && data1.TokenKey !== "" && data1.ErrorMSG === 'Success') {
                        token = data1.TokenKey;
                        try {
                            if (token) {
                                args.headers.TokenKey = token;
                                var client1 = new Client();
                                client1.post(chola_verify_service, args, function (data, response) {
                                    if (data) {
                                        kyc_fetch_response = data;
                                        if (data.hasOwnProperty("Status") && data.Status === 'Success') {
                                            if (data.hasOwnProperty("CKYC_No") && data.CKYC_No && data.CKYC_No !== "") {
                                                LM_Data['KYC_Number'] = data['CKYC_No'];
                                                LM_Data['KYC_Status'] = "VERIFY_SUCCESS";
                                                LM_Data['KYC_FullName'] = data['CKYC_Verified_Cust_Name'] ? data['CKYC_Verified_Cust_Name'] : "";
                                                LM_Data['KYC_Ref_No'] = data.Transaction_ID;
                                                LM_Data['ckyc_remarks'] = "NA";
                                            } else {
                                                LM_Data['KYC_Status'] = "VERIFY_FAIL";
                                                LM_Data['KYC_Ref_No'] = data.Transaction_ID ? data.Transaction_ID : "";
                                                LM_Data['KYC_Redirect_URL'] = data.eKYC_Redirection_URL ? data.eKYC_Redirection_URL : "";
                                                LM_Data['ckyc_remarks'] = data.hasOwnProperty('ErrorMsg') ? data.ErrorMsg : data;
                                            }
                                        } else {
                                            LM_Data['KYC_Status'] = "VERIFY_FAIL";
                                            LM_Data['KYC_Ref_No'] = data.Transaction_ID ? data.Transaction_ID : "";
                                            LM_Data['KYC_Redirect_URL'] = data.eKYC_Redirection_URL ? data.eKYC_Redirection_URL : "";
                                            LM_Data['ckyc_remarks'] = data.hasOwnProperty('ErrorMsg') ? data.ErrorMsg : data;
                                        }

                                        try {
                                            let setObj = {
                                                'KYC_Number': LM_Data.KYC_Number,
                                                'KYC_Full_Name': LM_Data.KYC_FullName,
                                                'KYC_Status': LM_Data.KYC_Status,
                                                'Modified_On': new Date(),
                                                'KYC_URL': LM_Data.KYC_Redirect_URL
                                            };
                                            let cond = {
                                                'Insurer_Id': objRequest.Insurer_Id - 0,
                                                'PB_CRN': (objRequest.PB_CRN === undefined || objRequest.PB_CRN === "" || objRequest.PB_CRN === null) ? "" : objRequest.PB_CRN - 0
                                                        // 'User_Data_Id': (objRequest.User_Data_Id === undefined || objRequest.User_Data_Id === "" || objRequest.User_Data_Id === null) ? 0 : objRequest.User_Data_Id - 0
                                            };
                                            kyc_detail.update(cond, {$set: setObj}, function (err, users) {
                                                if (err) {
                                                    res.json({"Insurer": "CholaMS", "Msg": err, "Status": "FAIL"});
                                                } else {
                                                    //res.json({"Insurer": "CholaMS", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                                }
                                            });
                                            let queryObj1 = {
                                                'PB_CRN': objRequest.PB_CRN ? objRequest.PB_CRN : "",
                                                'User_Data_Id': objRequest.User_Data_Id ? objRequest.User_Data_Id : "",
                                                'Insurer_Id': objRequest.Insurer_Id,
                                                'Product_Id': objRequest.Product_Id ? objRequest.Product_Id : "",
                                                'PAN': (objRequest.PAN === undefined || objRequest.PAN === "" || objRequest.PAN === null) ? "" : objRequest.PAN,
                                                'Aadhaar': (objRequest.Aadhaar === undefined || objRequest.Aadhaar === "" || objRequest.Aadhaar === null) ? "" : objRequest.Aadhaar,
                                                'DOB': (objRequest.DOB === undefined || objRequest.DOB === "" || objRequest.DOB === null) ? "" : objRequest.DOB,
                                                'Full_Name': objRequest.Proposal_Request['middle_name'] === "" ? (objRequest.Proposal_Request['first_name'] + " " + objRequest.Proposal_Request['last_name']) : (objRequest.Proposal_Request['first_name'] + " " + objRequest.Proposal_Request['middle_name'] + " " + objRequest.Proposal_Request['last_name']),
                                                'Mobile': (objRequest.Mobile === undefined || objRequest.Mobile === "" || objRequest.Mobile === null) ? "" : objRequest.Mobile - 0,
                                                'Email': (objRequest.Email === undefined || objRequest.Email === "" || objRequest.Email === null) ? "" : objRequest.Email,
                                                'KYC_Number': LM_Data.KYC_Number,
                                                'Search_Type': objRequest.Search_Type ? objRequest.Search_Type : "",
                                                'KYC_Status': LM_Data.KYC_Status,
                                                'PAN_Doc': objRequest.PAN_Doc ? objRequest.PAN_Doc : "",
                                                'Aadhar_Doc': objRequest.Aadhar_Doc ? objRequest.Aadhar_Doc : "",
                                                'KYC_URL': LM_Data.KYC_Redirect_URL,
                                                'Created_On': new Date(),
                                                'Modified_On': new Date(),
                                                //'Proposal_Request': (objRequest.Proposal_Request === undefined || objRequest.Proposal_Request === "" || objRequest.Proposal_Request === null) ? "" : objRequest.Proposal_Request,
                                                'Proposal_Id': (objRequest.Proposal_Id === undefined || objRequest.Proposal_Id === "" || objRequest.Proposal_Id === null) ? "" : objRequest.Proposal_Id,
                                                'Quote_Id': (objRequest.Quote_Id === undefined || objRequest.Quote_Id === "" || objRequest.Quote_Id === null) ? "" : objRequest.Quote_Id,
                                                'KYC_Request_Core': kyc_fetch_request,
                                                'KYC_Response_Core': kyc_fetch_response
                                            };
                                            var kyc_history1 = new kyc_history(queryObj1);
                                            kyc_history1.save(queryObj1, function (err, users) {
                                                if (err) {
                                                    res.json({"Insurer": "CholaMS", "Msg": err, "Status": "FAIL"});
                                                } else {
                                                    //res.json({"Insurer": "CholaMS", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                                }
                                            });
                                        } catch (e) {
                                            res.json({"Insurer": "CholaMS", "Msg": e.stack, "Status": "FAIL"});
                                        }
                                        res.json({"Insurer": "CholaMS", "Msg": LM_Data, "Status": LM_Data.KYC_Status});
                                    } else {
                                        res.json({"Insurer": "CholaMS", "Msg": "KYC verify services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                                    }
                                });
                            } else {
                                res.json({"Insurer": "CholaMS", "Msg": "Could Not Generate Token. Please try again later.", "Status": "FAIL"});
                            }
                        } catch (e2) {
                            res.json({"Insurer": "CholaMS", "Msg": e2.stack, "Status": "FAIL"});
                        }
                    } else {
                        res.json({"Insurer": "CholaMS", "Msg": "KYC-Token not generated. Please try again later.", "Status": "FAIL"});
                    }
                } else {
                    res.json({"Insurer": "CholaMS", "Msg": "KYC-Token generation services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                }
            });
        } catch (e1) {
            res.json({"Insurer": "CholaMS", "Msg": e1.stack, "Status": "FAIL"});
        }
    });
	
    app.post('/kyc_details/bajaj_req_enc', function (req, res) {
        // encode
        var encoded = '';
        let plainText = req.body; 
        try {
            var m = crypto.createHash('md5');
            m.update('kycwsbrkmotr2023');
            var key = m.digest();
            var iv = 'kycwsbrkmotr2023';
            var cipher = crypto.createCipheriv('aes-256-cbc', key, iv);
            encoded = cipher.update(plainText, 'utf8', 'hex');
            encoded += cipher.final('hex');
            res.send(encoded);
        } catch (ex) {
            console.error('Exception', this.constructor.name, 'encrypt', ex);
            res.send(ex.stuck);
        }
    });
    app.post('/bajaj_enc', function (req, res) {
        // encode
        let token = jwt.encode(req.body, secret, 'HS512');
        res.send(token);
    });

    app.post('/bajaj_dec', function (req, res) {
        // decode
        let decoded = jwt.decode(req.body.token, secret, false, 'HS512');
        res.send(decoded);
    });
    app.post('/kyc_details/bajaj_body_enc', function (req, res) {
        // encode
        var key = CryptoJS.enc.Utf8.parse("kycwsbrkmotr2023");
        var iv = CryptoJS.enc.Utf8.parse("kycwsbrkmotr2023");

        var ciphertext = CryptoJS.AES.encrypt(JSON.stringify(req.body), key, {iv: iv}).toString();
        res.send(ciphertext);
    });
    app.post('/kyc_details/bajaj_body_dec', function (req, res) {
        // encode
        var key = CryptoJS.enc.Utf8.parse("kycwsbrkmotr2023");
        var iv = CryptoJS.enc.Utf8.parse("kycwsbrkmotr2023");
        var decrypted = CryptoJS.AES.decrypt(req.body.payload, key, {iv: iv});
        let val = decrypted.toString(CryptoJS.enc.Utf8);
        var objectdata = JSON.parse(val);
        res.send(objectdata);
    });
	
    //eKycpage.html Changes Start
    app.post('/kyc_details/hdfc_fetch_kyc_details_onload', function (req, res) {
        try {
            let ObjRequest = req.body;
            let kyc_fetch_request = "";
            let kyc_fetch_response = "";
            let hdfcReturnval = '';
            let req_txt = {
                "Mobile": (ObjRequest.mobile === undefined || ObjRequest.mobile === "" || ObjRequest.mobile === null) ? "" : ObjRequest.mobile,
                "Full_Name": (ObjRequest.fullName === undefined || ObjRequest.fullName === "" || ObjRequest.fullName === null) ? "" : ObjRequest.fullName,
                "DOB": (ObjRequest.DOB === undefined || ObjRequest.DOB === "" || ObjRequest.DOB === null) ? "" : ObjRequest.DOB,
                "PAN": (ObjRequest.PAN === undefined || ObjRequest.PAN === "" || ObjRequest.PAN === null) ? "" : ObjRequest.PAN,
                'Search_Type': (ObjRequest.search_type === undefined || ObjRequest.search_type === "" || ObjRequest.search_type === null) ? "" : ObjRequest.search_type,
                'KYC_Number': '',
                'KYC_Full_Name': '',
                'Aadhar': '',
                'KYC_Status': '',
                'Created_On': new Date(),
                'Modified_On': new Date(),
                'Insurer_Id': '',
                'PAN_Doc': '',
                'Aadhar_Doc': '',
                'PB_CRN': '',
                'User_Data_Id': '',
                'Product_Id': '',
                'Email': '',
                'Proposal_Request': '',
                'Proposal_Id': '',
                'Quote_Id': '',
                'KYC_URL': ''
            };
            kyc_fetch_request = req_txt;

            kyc_detail.findOne({'PAN': ObjRequest.PAN, 'Mobile': ObjRequest.mobile}).sort({Modified_On: -1}).exec(function (err, db_svae_kyc_detail) {
                if (err) {
                    res.json({"Msg": err, "Status": "FAIL"});
                } else {
                    if (db_svae_kyc_detail) {
                        kyc_detail.update({'PAN': ObjRequest.PAN, 'Mobile': ObjRequest.mobile}, {$set: kyc_fetch_request}, function (err, db_update_kyc_detail) {
                            if (err) {
                                res.json({"Msg": err, "Status": "FAIL"});
                            } else {
//                              hdfcReturnval =  hdfcFetchKycDetails(ObjRequest,kyc_fetch_request);
//                              res.json(hdfcReturnval);
                                let args = {
                                    data: JSON.stringify(kyc_fetch_request),
                                    headers: {
                                        "Content-Type": "application/json",
                                        "Accept": "application/json",
                                        "token": ""
                                    }
                                };
                                let args1 = {
                                    headers: {
                                        "api_key": "8d399be8-0b6f-4a"
                                    }
                                };
                                let KYC_Status = "PENDING";
                                let kyc_id = 0;
                                let token = null;
                                var Client = require('node-rest-client').Client;
                                var client = new Client();
                                let LM_Data = {
                                    "KYC_Pan_No": "",
                                    "KYC_Number": "",
                                    "KYC_FullName": "",
                                    "KYC_Ref_No": "",
                                    "KYC_Redirect_URL": "",
                                    "KYC_Insurer_ID": "",
                                    "KYC_PB_CRN": ObjRequest.PB_CRN,
                                    "KYC_Status": KYC_Status
                                };
                                client.get("https://ctrln-uat.hdfcergo.com/e-kyc/tgt/generate-token", args1, function (data1, response1) {
                                    if (data1) {
                                        if (data1.hasOwnProperty("success") && data1.success === true) {
                                            if (data1.hasOwnProperty("data") && data1.data.hasOwnProperty("token") && data1.data.token !== "" && data1.data.token !== null) {
                                                token = data1.data.token;
                                                try {
                                                    if (token) {
                                                        args.headers.token = token;
                                                        var client1 = new Client();
                                                        client1.get("https://ctrln-uat.hdfcergo.com/e-kyc/primary/kyc-verified", args, function (data, response) {
                                                            if (data) {
                                                                kyc_fetch_response = data; // kyc_insurer_response
                                                                if (data.hasOwnProperty("success") && data.success === true && data.hasOwnProperty("data") && data.data.hasOwnProperty("iskycVerified")) {
                                                                    if (data.data.iskycVerified === 1) {
                                                                        kyc_id = (data.data.hasOwnProperty("kyc_id")) ? data.data.kyc_id : "";
                                                                        LM_Data.KYC_Status = "FETCH_SUCCESS";
                                                                        LM_Data.KYC_Number = kyc_id;
                                                                    } else if (data.data.iskycVerified === 0) {
                                                                        kyc_id = (data.data.hasOwnProperty("kyc_id")) ? data.data.kyc_id : "";
                                                                        LM_Data.KYC_Status = "FETCH_FAIL";
                                                                        LM_Data.KYC_Redirect_URL = data.data.redirect_link;
                                                                    } else {
                                                                        LM_Data.KYC_Status = "FETCH_FAIL";
                                                                    }
                                                                } else {
                                                                    LM_Data.KYC_Status = "FETCH_FAIL";
                                                                }

                                                                try {
                                                                    let cond = {
                                                                        'PAN': ObjRequest.PAN ? ObjRequest.PAN : "",
                                                                        'Mobile': ObjRequest.mobile ? ObjRequest.mobile : ""
                                                                    };
                                                                    let setObj = {
                                                                        'KYC_Number': LM_Data.KYC_Number,
                                                                        'KYC_Full_Name': LM_Data.KYC_FullName,
                                                                        'KYC_Status': LM_Data.KYC_Status,
                                                                        'Modified_On': new Date(),
                                                                        'KYC_URL': LM_Data.KYC_Redirect_URL
                                                                    };
                                                                    kyc_detail.update(cond, {$set: setObj}, function (err, users) {
                                                                        if (err) {
                                                                            res.json({"Insurer": "Edelweiss", "Msg": err, "Status": "FAIL"});
                                                                        } else {
                                                                            //res.json({"Insurer": "Edelweiss", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                                                        }
                                                                    });
                                                                    let queryObj1 = {
                                                                        'PB_CRN': ObjRequest.PB_CRN ? ObjRequest.PB_CRN : "",
                                                                        'User_Data_Id': ObjRequest.User_Data_Id ? ObjRequest.User_Data_Id : "",
                                                                        'Insurer_Id': ObjRequest.Insurer_Id ? ObjRequest.Insurer_Id : "",
                                                                        'Product_Id': ObjRequest.Product_Id ? ObjRequest.Product_Id : "",
                                                                        'PAN': (ObjRequest.PAN === undefined || ObjRequest.PAN === "" || ObjRequest.PAN === null) ? "" : ObjRequest.PAN,
                                                                        'Aadhar': (ObjRequest.Aadhaar === undefined || ObjRequest.Aadhaar === "" || ObjRequest.Aadhaar === null) ? "" : ObjRequest.Aadhaar,
                                                                        'DOB': (ObjRequest.DOB === undefined || ObjRequest.DOB === "" || ObjRequest.DOB === null) ? "" : ObjRequest.DOB,
                                                                          'Full_Name':ObjRequest.fullName ? ObjRequest.fullName : '',
                                                                        'Mobile': (ObjRequest.Mobile === undefined || ObjRequest.Mobile === "" || ObjRequest.Mobile === null) ? "" : ObjRequest.Mobile - 0,
                                                                        'Email': (ObjRequest.Email === undefined || ObjRequest.Email === "" || ObjRequest.Email === null) ? "" : ObjRequest.Email,
                                                                        'KYC_Number': LM_Data.KYC_Number,
                                                                        'Search_Type': ObjRequest.Search_Type ? ObjRequest.Search_Type : "",
                                                                        'KYC_Status': LM_Data.KYC_Status,
                                                                        'PAN_Doc': ObjRequest.PAN_Doc ? ObjRequest.PAN_Doc : "",
                                                                        'Aadhar_Doc': ObjRequest.Aadhar_Doc ? ObjRequest.Aadhar_Doc : "",
                                                                        'KYC_URL': LM_Data.KYC_Redirect_URL,
                                                                        'Created_On': new Date(),
                                                                        'Modified_On': new Date(),
                                                                        //'Proposal_Request': '',
                                                                        'Proposal_Id': (ObjRequest.Proposal_Id === undefined || ObjRequest.Proposal_Id === "" || ObjRequest.Proposal_Id === null) ? "" : ObjRequest.Proposal_Id,
                                                                        'Quote_Id': (ObjRequest.Quote_Id === undefined || ObjRequest.Quote_Id === "" || ObjRequest.Quote_Id === null) ? "" : ObjRequest.Quote_Id,
                                                                        'KYC_Request_Core': kyc_fetch_request,
                                                                        'KYC_Response_Core': kyc_fetch_response
                                                                    };
                                                                    var kyc_history1 = new kyc_history(queryObj1);
                                                                    kyc_history1.save(queryObj1, function (err, users) {
                                                                        if (err) {
                                                                            res.json({"Insurer": "Edelweiss", "Msg": err, "Status": "FAIL"});
                                                                        } else {
                                                                            //res.json({"Insurer": "Edelweiss", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                                                        }
                                                                    });
                                                                } catch (e) {
                                                                    res.json({"Insurer": "HDFC", "Msg": e.stack, "Status": "FAIL"});
                                                                }
                                                                res.json({"Insurer": "HDFC", "Msg": LM_Data, "Status": LM_Data.KYC_Status});
                                                            } else {
                                                                res.json({"Insurer": "HDFC", "Msg": "KYC fetch services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                                                            }
                                                        });
                                                    } else {
                                                        res.json({"Insurer": "HDFC", "Msg": "Could Not Generate Token. Please try again later.", "Status": "FAIL"});
                                                    }
                                                } catch (e2) {
                                                    res.json({"Insurer": "HDFC", "Msg": e2.stack, "Status": "FAIL"});
                                                }
                                            } else {
                                                res.json({"Insurer": "HDFC", "Msg": "KYC-Token not generated. Please try again later.", "Status": "FAIL"});
                                            }
                                        } else {
                                            res.json({"Insurer": "HDFC", "Msg": "KYC-Token generation services was not successful. Please try again later.", "Status": "FAIL"});
                                        }
                                    } else {
                                        res.json({"Insurer": "HDFC", "Msg": "KYC-Token generation services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                                    }
                                });

                            }
                        });
                    } else {
                        let kyc_detail1 = new kyc_detail(req_txt);
                        kyc_detail1.save(req_txt, function (err, users) {
                            if (err) {
                                res.json({"Msg": err, "Status": "FAIL"});
                            } else {
//                                hdfcFetchKycDetails(ObjRequest,kyc_fetch_request);
//                              res.json(hdfcReturnval);
                                let args = {
                                    data: JSON.stringify(kyc_fetch_request),
                                    headers: {
                                        "Content-Type": "application/json",
                                        "Accept": "application/json",
                                        "token": ""
                                    }
                                };
                                let args1 = {
                                    headers: {
                                        "api_key": "8d399be8-0b6f-4a"
                                    }
                                };
                                let KYC_Status = "PENDING";
                                let kyc_id = 0;
                                let token = null;
                                var Client = require('node-rest-client').Client;
                                var client = new Client();
                                let LM_Data = {
                                    "KYC_Pan_No": "",
                                    "KYC_Number": "",
                                    "KYC_FullName": "",
                                    "KYC_Ref_No": "",
                                    "KYC_Redirect_URL": "",
                                    "KYC_Insurer_ID": "",
                                    "KYC_PB_CRN": ObjRequest.PB_CRN,
                                    "KYC_Status": KYC_Status
                                };
                                client.get("https://ctrln-uat.hdfcergo.com/e-kyc/tgt/generate-token", args1, function (data1, response1) {
                                    if (data1) {
                                        if (data1.hasOwnProperty("success") && data1.success === true) {
                                            if (data1.hasOwnProperty("data") && data1.data.hasOwnProperty("token") && data1.data.token !== "" && data1.data.token !== null) {
                                                token = data1.data.token;
                                                try {
                                                    if (token) {
                                                        args.headers.token = token;
                                                        var client1 = new Client();
                                                        client1.get("https://ctrln-uat.hdfcergo.com/e-kyc/primary/kyc-verified", args, function (data, response) {
                                                            if (data) {
                                                                kyc_fetch_response = data; // kyc_insurer_response
                                                                if (data.hasOwnProperty("success") && data.success === true && data.hasOwnProperty("data") && data.data.hasOwnProperty("iskycVerified")) {
                                                                    if (data.data.iskycVerified === 1) {
                                                                        kyc_id = (data.data.hasOwnProperty("kyc_id")) ? data.data.kyc_id : "";
                                                                        LM_Data.KYC_Status = "FETCH_SUCCESS";
                                                                        LM_Data.KYC_Number = kyc_id;
                                                                    } else if (data.data.iskycVerified === 0) {
                                                                        kyc_id = (data.data.hasOwnProperty("kyc_id")) ? data.data.kyc_id : "";
                                                                        LM_Data.KYC_Status = "FETCH_FAIL";
                                                                        LM_Data.KYC_Redirect_URL = data.data.redirect_link;
                                                                    } else {
                                                                        LM_Data.KYC_Status = "FETCH_FAIL";
                                                                    }
                                                                } else {
                                                                    LM_Data.KYC_Status = "FETCH_FAIL";
                                                                }

                                                                try {
                                                                    let cond = {
                                                                        'PAN': ObjRequest.PAN ? ObjRequest.PAN : "",
                                                                        'Mobile': ObjRequest.mobile ? ObjRequest.mobile : ""
                                                                    };
                                                                    let setObj = {
                                                                        'KYC_Number': LM_Data.KYC_Number,
                                                                        'KYC_Full_Name': LM_Data.KYC_FullName,
                                                                        'KYC_Status': LM_Data.KYC_Status,
                                                                        'Modified_On': new Date(),
                                                                        'KYC_URL': LM_Data.KYC_Redirect_URL
                                                                    };
                                                                    kyc_detail.update(cond, {$set: setObj}, function (err, users) {
                                                                        if (err) {
                                                                            res.json({"Insurer": "Edelweiss", "Msg": err, "Status": "FAIL"});
                                                                        } else {
                                                                            //res.json({"Insurer": "Edelweiss", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                                                        }
                                                                    });
                                                                    let queryObj1 = {
                                                                        'PB_CRN': ObjRequest.PB_CRN ? ObjRequest.PB_CRN : "",
                                                                        'User_Data_Id': ObjRequest.User_Data_Id ? ObjRequest.User_Data_Id : "",
                                                                        'Insurer_Id': ObjRequest.Insurer_Id ? ObjRequest.Insurer_Id : "",
                                                                        'Product_Id': ObjRequest.Product_Id ? ObjRequest.Product_Id : "",
                                                                        'PAN': (ObjRequest.PAN === undefined || ObjRequest.PAN === "" || ObjRequest.PAN === null) ? "" : ObjRequest.PAN,
                                                                        'Aadhar': (ObjRequest.Aadhaar === undefined || ObjRequest.Aadhaar === "" || ObjRequest.Aadhaar === null) ? "" : ObjRequest.Aadhaar,
                                                                        'DOB': (ObjRequest.DOB === undefined || ObjRequest.DOB === "" || ObjRequest.DOB === null) ? "" : ObjRequest.DOB,
                                                                        'Full_Name':ObjRequest.fullName ? ObjRequest.fullName : '',
                                                                        'Mobile': (ObjRequest.Mobile === undefined || ObjRequest.Mobile === "" || ObjRequest.Mobile === null) ? "" : ObjRequest.Mobile - 0,
                                                                        'Email': (ObjRequest.Email === undefined || ObjRequest.Email === "" || ObjRequest.Email === null) ? "" : ObjRequest.Email,
                                                                        'KYC_Number': LM_Data.KYC_Number,
                                                                        'Search_Type': ObjRequest.Search_Type ? ObjRequest.Search_Type : "",
                                                                        'KYC_Status': LM_Data.KYC_Status,
                                                                        'PAN_Doc': ObjRequest.PAN_Doc ? ObjRequest.PAN_Doc : "",
                                                                        'Aadhar_Doc': ObjRequest.Aadhar_Doc ? ObjRequest.Aadhar_Doc : "",
                                                                        'KYC_URL': LM_Data.KYC_Redirect_URL,
                                                                        'Created_On': new Date(),
                                                                        'Modified_On': new Date(),
                                                                        //'Proposal_Request': '',
                                                                        'Proposal_Id': '',
                                                                        'Quote_Id': (ObjRequest.Quote_Id === undefined || ObjRequest.Quote_Id === "" || ObjRequest.Quote_Id === null) ? "" : ObjRequest.Quote_Id,
                                                                        'KYC_Request_Core': kyc_fetch_request,
                                                                        'KYC_Response_Core': kyc_fetch_response
                                                                    };
                                                                    var kyc_history1 = new kyc_history(queryObj1);
                                                                    kyc_history1.save(queryObj1, function (err, users) {
                                                                        if (err) {
                                                                            res.json({"Insurer": "Edelweiss", "Msg": err, "Status": "FAIL"});
                                                                        } else {
                                                                            //res.json({"Insurer": "Edelweiss", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                                                        }
                                                                    });
                                                                } catch (e) {
                                                                    res.json({"Insurer": "HDFC", "Msg": e.stack, "Status": "FAIL"});
                                                                }
                                                                res.json({"Insurer": "HDFC", "Msg": LM_Data, "Status": LM_Data.KYC_Status});
                                                            } else {
                                                                res.json({"Insurer": "HDFC", "Msg": "KYC fetch services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                                                            }
                                                        });
                                                    } else {
                                                        res.json({"Insurer": "HDFC", "Msg": "Could Not Generate Token. Please try again later.", "Status": "FAIL"});
                                                    }
                                                } catch (e2) {
                                                    res.json({"Insurer": "HDFC", "Msg": e2.stack, "Status": "FAIL"});
                                                }
                                            } else {
                                                res.json({"Insurer": "HDFC", "Msg": "KYC-Token not generated. Please try again later.", "Status": "FAIL"});
                                            }
                                        } else {
                                            res.json({"Insurer": "HDFC", "Msg": "KYC-Token generation services was not successful. Please try again later.", "Status": "FAIL"});
                                        }
                                    } else {
                                        res.json({"Insurer": "HDFC", "Msg": "KYC-Token generation services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                                    }
                                });
                            }
                        });
                    }
                }
            });


        } catch (e1) {
            res.json({"Insurer": "HDFC", "Msg": e1.stack, "Status": "FAIL"});
        }
    });
    //eKycpage.html Changes End

    app.post('/kyc_details/future_fetch_kyc_details', function (req, res) {
        try {
            let objRequest = req.body;
            let proposal_request = objRequest.Proposal_Request;
            let kyc_fetch_request = "";
            let kyc_fetch_response = "";
            var cust_name = null;
            if (objRequest.Proposal_Request.middle_name === undefined || objRequest.Proposal_Request.middle_name === "" || objRequest.Proposal_Request.middle_name === null) {
                cust_name = ((objRequest.Proposal_Request.first_name === undefined || objRequest.Proposal_Request.first_name === "" || objRequest.Proposal_Request.first_name === null) ? "" : objRequest.Proposal_Request.first_name) + " " +
                        ((objRequest.last_name === undefined || objRequest.Proposal_Request.last_name === "" || objRequest.Proposal_Request.last_name === null) ? "" : objRequest.Proposal_Request.last_name);
            } else {
                cust_name = ((objRequest.Proposal_Request.first_name === undefined || objRequest.Proposal_Request.first_name === "" || objRequest.Proposal_Request.first_name === null) ? "" : objRequest.Proposal_Request.first_name) + " " +
                        ((objRequest.Proposal_Request.middle_name === undefined || objRequest.Proposal_Request.middle_name === "" || objRequest.Proposal_Request.middle_name === null) ? "" : objRequest.Proposal_Request.middle_name) + " " +
                        ((objRequest.Proposal_Request.last_name === undefined || objRequest.Proposal_Request.last_name === "" || objRequest.Proposal_Request.last_name === null) ? "" : objRequest.Proposal_Request.last_name);
            }
            let vehicle_registration_type = (objRequest.vehicle_registration_type === undefined || objRequest.vehicle_registration_type === "" || objRequest.vehicle_registration_type === null) ? "I" : (objRequest.vehicle_registration_type.toLowerCase() === "corporate" ? "C" : "I");
            let future_token_service = (config.environment.name === "Production") ? "https://verifyekyc.fggeneral.in/CKYC/API/CKYC/GenerateToken" : "https://verifyekyc.fggeneral.in/CKYC/API/CKYC/GenerateToken";
            let future_create_service = (config.environment.name === "Production") ? "https://verifyekyc.fggeneral.in/CKYC/API/CKYC/CreateCKYC" : "https://verifyekyc.fggeneral.in/CKYC/API/CKYC/CreateCKYC";
            let req_txt = {
                "req_id": "",
                "customer_type": vehicle_registration_type,
                "id_type": objRequest.Search_Type,
                "id_num": (proposal_request.pan === undefined || proposal_request.pan === "" || proposal_request.pan === null) ? "" : proposal_request.pan,
                "dob": (vehicle_registration_type === "I" && proposal_request.birth_date && proposal_request.birth_date !== "") ? (moment(proposal_request.birth_date, "DD/MM/YYYY").format("DD-MM-YYYY")) : "",
                "full_name": cust_name,
                "gender": (objRequest.Proposal_Request.gender === undefined || objRequest.Proposal_Request.gender === "" || objRequest.Proposal_Request.gender === null) ? "" : objRequest.Proposal_Request.gender,
                "url_type": "https://www.policyboss.com/webhook/ckyc/ckyc_capture/" + objRequest.PB_CRN + "/" + objRequest.Insurer_Id
            };
            let username = (config.environment.name === "Production") ? "FGCkyc" : "FGCkyc";
            let password = (config.environment.name === "Production") ? "FGCkyc@1" : "FGCkyc@1";
            let args = {
                data: JSON.stringify(req_txt),
                headers: {
                    "Content-Type": "application/json",
                    "Accept": "application/json",
                    "Token": "C9E541FC-CFAF-4361-96D9-70C839A2F349",
                    "Authorization": "Basic " + new Buffer(username + ':' + password).toString('base64')
                }
            };
            let token_args = {
                headers: {
                    "Token": "C9E541FC-CFAF-4361-96D9-70C839A2F349",
                    "Authorization": "Basic " + new Buffer(username + ':' + password).toString('base64')
                }
            };
            kyc_fetch_request = req_txt;
            let KYC_Status = "PENDING";
            let kyc_id = 0;
            let kyc_url = "";
            let token = null;
            var Client = require('node-rest-client').Client;
            var client = new Client();
            let kyc_req_id = "";
            let LM_Data = {
                "KYC_Pan_No": "",
                "KYC_Number": "",
                "KYC_FullName": "",
                "KYC_Ref_No": "",
                "KYC_Redirect_URL": "",
                "KYC_Insurer_ID": objRequest.Insurer_Id,
                "KYC_PB_CRN": objRequest.PB_CRN,
                "KYC_Status": KYC_Status,
                "ckyc_remarks": ""
            };
            client.post(future_token_service, token_args, function (data1, response1) {
                if (data1) {
                    if (data1[0].hasOwnProperty("ProposalNo") && data1[0].ProposalNo !== "" && data1[0].ProposalNo !== null) {
                        if (data1[0].hasOwnProperty("Token") && data1[0].Token !== "" && data1[0].Token !== null) {
                            token = data1[0].Token;
                            try {
                                if (token) {
                                    //args.headers.token = token;
                                    var client1 = new Client();
                                    client1.post(future_create_service, args, function (data, response) {
                                        if (data) {
                                            kyc_fetch_response = data;
                                            if (data.hasOwnProperty("success") && data.success === true) {
                                                if (data.ckyc_remarks === 'OK') {
                                                    LM_Data['KYC_Number'] = (data['result'].hasOwnProperty("ckyc_number")) ? data['result'].ckyc_number : "";
                                                    LM_Data['KYC_Status'] = "FETCH_SUCCESS";
                                                    LM_Data['KYC_Pan_No'] = (data['result'].hasOwnProperty("id_num")) ? data['result'].id_num : "";
                                                    LM_Data['KYC_Ref_No'] = (data.hasOwnProperty("proposal_id")) ? data.proposal_id : "";
                                                    kyc_req_id = (data.hasOwnProperty("req_id")) ? data.req_id : "";
                                                    LM_Data['KYC_FullName'] = (data['result'].hasOwnProperty("customer_name")) ? data['result'].customer_name : "";
                                                    LM_Data['ckyc_remarks'] = "NA";
                                                } else {
                                                    LM_Data['KYC_Status'] = "FETCH_FAIL";
                                                    LM_Data['KYC_Ref_No'] = (data.hasOwnProperty("proposal_id")) ? data.proposal_id : "";
                                                    LM_Data['KYC_Redirect_URL'] = data.url ? data.url : data.url;
                                                    kyc_req_id = (data.hasOwnProperty("req_id")) ? data.req_id : "";
                                                    LM_Data['ckyc_remarks'] = data.ckyc_remarks ? data.ckyc_remarks : "NA";
                                                    LM_Data['KYC_Number'] = (data.hasOwnProperty("proposal_id")) ? data.proposal_id : "";
                                                }
                                            } else {
                                                LM_Data['KYC_Status'] = "FETCH_FAIL";
                                                LM_Data['KYC_Ref_No'] = (data.hasOwnProperty("proposal_id")) ? data.proposal_id : "";
                                                LM_Data['KYC_Redirect_URL'] = data.url ? data.url : data.url;
                                                kyc_req_id = (data.hasOwnProperty("req_id")) ? data.req_id : "";
                                                LM_Data['ckyc_remarks'] = data.ckyc_remarks ? data.ckyc_remarks : "NA";
                                                LM_Data['KYC_Number'] = (data.hasOwnProperty("proposal_id")) ? data.proposal_id : "";
                                            }

                                            try {
                                                let cond = {
                                                    'Insurer_Id': objRequest.Insurer_Id - 0,
                                                    'PB_CRN': (objRequest.PB_CRN === undefined || objRequest.PB_CRN === "" || objRequest.PB_CRN === null) ? "" : objRequest.PB_CRN - 0
//                                                    'User_Data_Id': (req.body.User_Data_Id === undefined || req.body.User_Data_Id === "" || req.body.User_Data_Id === null) ? 0 : req.body.User_Data_Id - 0
                                                };
                                                let setObj = {
                                                    'KYC_Number': LM_Data.KYC_Number,
                                                    'KYC_Full_Name': LM_Data.KYC_FullName,
                                                    'KYC_Status': LM_Data.KYC_Status,
                                                    'Modified_On': new Date(),
                                                    'KYC_URL': LM_Data.KYC_Redirect_URL,
                                                    'KYC_Ref_No': LM_Data['KYC_Ref_No'],
                                                    'Proposal_Id': kyc_req_id
                                                };
                                                //var kyc_detail1 = new kyc_detail(queryObj);
                                                kyc_detail.update(cond, {$set: setObj}, function (err, users) {
                                                    if (err) {
                                                        res.json({"Insurer": "FUTURE", "Msg": err, "Status": "FAIL"});
                                                    } else {
                                                        //res.json({"Insurer": "FUTURE", "Msg": data.data, "Status": KYC_Status});
                                                    }
                                                });
                                                let queryObj1 = {
                                                    'PB_CRN': objRequest.PB_CRN ? objRequest.PB_CRN : "",
                                                    'User_Data_Id': objRequest.User_Data_Id ? objRequest.User_Data_Id : "",
                                                    'Insurer_Id': objRequest.Insurer_Id,
                                                    'Product_Id': objRequest.Product_Id ? objRequest.Product_Id : "",
                                                    'PAN': (objRequest.PAN === undefined || objRequest.PAN === "" || objRequest.PAN === null) ? "" : objRequest.PAN,
                                                    'Aadhaar': (objRequest.Aadhaar === undefined || objRequest.Aadhaar === "" || objRequest.Aadhaar === null) ? "" : objRequest.Aadhaar,
                                                    'DOB': (proposal_request.birth_date === undefined || proposal_request.birth_date === "" || proposal_request.birth_date === null) ? "" : proposal_request.birth_date,
                                                    'Full_Name': objRequest.Proposal_Request['middle_name'] === "" ? (objRequest.Proposal_Request['first_name'] + " " + objRequest.Proposal_Request['last_name']) : (objRequest.Proposal_Request['first_name'] + " " + objRequest.Proposal_Request['middle_name'] + " " + objRequest.Proposal_Request['last_name']),
                                                    'Mobile': (objRequest.Mobile === undefined || objRequest.Mobile === "" || objRequest.Mobile === null) ? "" : objRequest.Mobile - 0,
                                                    'Email': (objRequest.Email === undefined || objRequest.Email === "" || objRequest.Email === null) ? "" : objRequest.Email,
                                                    'KYC_Number': LM_Data.KYC_Number,
                                                    'Search_Type': objRequest.Search_Type ? objRequest.Search_Type : "",
                                                    'KYC_Status': LM_Data.KYC_Status,
                                                    'PAN_Doc': objRequest.PAN_Doc ? objRequest.PAN_Doc : "",
                                                    'Aadhar_Doc': objRequest.Aadhar_Doc ? objRequest.Aadhar_Doc : "",
                                                    'KYC_URL': LM_Data.KYC_Redirect_URL,
                                                    'KYC_Ref_No': LM_Data['KYC_Ref_No'],
                                                    'Created_On': new Date(),
                                                    'Modified_On': new Date(),
                                                    'Proposal_Id': kyc_req_id,
                                                    'Quote_Id': (objRequest.Quote_Id === undefined || objRequest.Quote_Id === "" || objRequest.Quote_Id === null) ? "" : objRequest.Quote_Id,
                                                    'KYC_Request_Core': kyc_fetch_request,
                                                    'KYC_Response_Core': kyc_fetch_response
                                                };
                                                var kyc_history1 = new kyc_history(queryObj1);
                                                kyc_history1.save(queryObj1, function (err, users) {
                                                    if (err) {
                                                        res.json({"Insurer": "FUTURE", "Msg": err, "Status": "FAIL"});
                                                    } else {
                                                        //res.json({"Insurer": "FUTURE", "Msg": data.data, "Status": KYC_Status});
                                                    }
                                                });
                                            } catch (e) {
                                                res.json({"Insurer": "FUTURE", "Msg": e.stack, "Status": "FAIL"});
                                            }
                                            res.json({"Insurer": "FUTURE", "Msg": LM_Data, "Status": LM_Data.KYC_Status});
                                        } else {
                                            res.json({"Insurer": "FUTURE", "Msg": "KYC fetch services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                                        }
                                    });
                                } else {
                                    res.json({"Insurer": "FUTURE", "Msg": "Could Not Generate Token. Please try again later.", "Status": "FAIL"});
                                }
                            } catch (e2) {
                                res.json({"Insurer": "FUTURE", "Msg": e2.stack, "Status": "FAIL"});
                            }
                        } else {
                            res.json({"Insurer": "FUTURE", "Msg": "KYC-Token not generated. Please try again later.", "Status": "FAIL"});
                        }
                    } else {
                        res.json({"Insurer": "FUTURE", "Msg": "KYC-Token generation services was not successful. Please try again later.", "Status": "FAIL"});
                    }
                } else {
                    res.json({"Insurer": "FUTURE", "Msg": "KYC-Token generation services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                }
            });
        } catch (e1) {
            res.json({"Insurer": "FUTURE", "Msg": e1.stack, "Status": "FAIL"});
        }
    });

    app.post('/kyc_details/future_verify_kyc_details', function (req, res) {
        try {
            let objRequest = req.body;
            let kyc_fetch_request = "";
            let kyc_fetch_response = "";
            let vehicle_registration_type = (objRequest.vehicle_registration_type === undefined || objRequest.vehicle_registration_type === "" || objRequest.vehicle_registration_type === null) ? "I" : (objRequest.vehicle_registration_type.toLowerCase() === "corporate" ? "C" : "I");
//            let future_token_service = (config.environment.name === "Production") ? "" : "https://fglpg001.futuregenerali.in/NLCKYC/API/CKYC/GenerateToken";
//            let future_verify_service = (config.environment.name === "Production") ? "" : "https://fglpg001.futuregenerali.in/NLCKYC/API/CommonCKYC/Verify-CKYC";
            let future_token_service = (config.environment.name === "Production") ? "https://verifyekyc.fggeneral.in/CKYC/API/CKYC/GenerateToken" : "https://verifyekyc.fggeneral.in/CKYC/API/CKYC/GenerateToken";
            let future_verify_service = (config.environment.name === "Production") ? "https://verifyekyc.fggeneral.in/CKYC/API/CKYC/GetCKYCStatus" : "https://verifyekyc.fggeneral.in/CKYC/API/CKYC/GetCKYCStatus";
            var user_kyc_no = (objRequest.user_kyc_no === undefined || objRequest.user_kyc_no === "" || objRequest.user_kyc_no === null) ? "" : objRequest.user_kyc_no;
            var cust_name = null;
            if (objRequest.Proposal_Request.middle_name === undefined || objRequest.Proposal_Request.middle_name === "" || objRequest.Proposal_Request.middle_name === null) {
                cust_name = ((objRequest.Proposal_Request.first_name === undefined || objRequest.Proposal_Request.first_name === "" || objRequest.Proposal_Request.first_name === null) ? "" : objRequest.Proposal_Request.first_name) + " " +
                        ((objRequest.last_name === undefined || objRequest.Proposal_Request.last_name === "" || objRequest.Proposal_Request.last_name === null) ? "" : objRequest.Proposal_Request.last_name);
            } else {
                cust_name = ((objRequest.Proposal_Request.first_name === undefined || objRequest.Proposal_Request.first_name === "" || objRequest.Proposal_Request.first_name === null) ? "" : objRequest.Proposal_Request.first_name) + " " +
                        ((objRequest.Proposal_Request.middle_name === undefined || objRequest.Proposal_Request.middle_name === "" || objRequest.Proposal_Request.middle_name === null) ? "" : objRequest.Proposal_Request.middle_name) + " " +
                        ((objRequest.Proposal_Request.last_name === undefined || objRequest.Proposal_Request.last_name === "" || objRequest.Proposal_Request.last_name === null) ? "" : objRequest.Proposal_Request.last_name);
            }
            let id_type = objRequest.Search_Type === "PAN" ? objRequest.PAN : objRequest.Search_Type === "AADHAR" ? objRequest.Aadhar : "";

//            let req_txt = {
//                "req_id": (objRequest.hasOwnProperty('Proposal_Id') && objRequest.Proposal_Id) ? objRequest.Proposal_Id : "",
//                "proposal_no": (objRequest.hasOwnProperty('KYC_Ref_No') && objRequest.KYC_Ref_No) ? objRequest.KYC_Ref_No : "",
//                "customer_type": vehicle_registration_type ? vehicle_registration_type : "I",
//                "dob": (objRequest.DOB === undefined || objRequest.DOB === "" || objRequest.DOB === null) ? "" : (moment(objRequest.DOB, "DD/MM/YYYY").format("DD-MM-YYYY")),
//                "gender": (objRequest.hasOwnProperty('gender') && objRequest.gender) ? objRequest.gender : "",
//                "url_type": "https://www.policyboss.com/webhook/ckyc/ckyc_capture/" + objRequest.PB_CRN + "/" + objRequest.Insurer_Id,
//                "DocumentDetails": [
//                    {
//                        "id_type": objRequest.Search_Type,
//                        "id_num": id_type
//                    }
//                ]
//            };
//            let ckyc_val = {
//                "id_type": (objRequest.hasOwnProperty('user_kyc_no') && objRequest.user_kyc_no) ? "CKYC" : "",
//                "id_num": user_kyc_no
//            };
//            if (ckyc_val['id_type']) {
//                req_txt['DocumentDetails'].push(ckyc_val);
//            };
            let req_txt = {
                "proposal_id": (objRequest.hasOwnProperty('KYC_Ref_No') && objRequest.KYC_Ref_No) ? objRequest.KYC_Ref_No : ""
            };
            let username = (config.environment.name === "Production") ? "FGCkyc" : "FGCkyc";
            let password = (config.environment.name === "Production") ? "FGCkyc@1" : "FGCkyc@1";
            let args = {
                data: JSON.stringify(req_txt),
                headers: {
                    "Content-Type": "application/json",
                    "Accept": "application/json",
                    "Token": "C9E541FC-CFAF-4361-96D9-70C839A2F349",
                    "Authorization": "Basic " + new Buffer(username + ':' + password).toString('base64')
                }
            };
            let token_args = {
                headers: {
                    "Token": "C9E541FC-CFAF-4361-96D9-70C839A2F349",
                    "Authorization": "Basic " + new Buffer(username + ':' + password).toString('base64')
                }
            };
            kyc_fetch_request = req_txt;
            let KYC_Status = "VERIFY_FAIL";
            let kyc_id = 0;
            let token = null;
            var Client = require('node-rest-client').Client;
            var client = new Client();
            let kyc_req_id = "";
            let LM_Data = {
                "KYC_Pan_No": "",
                "KYC_Number": "",
                "KYC_FullName": "",
                "KYC_Ref_No": "",
                "KYC_Redirect_URL": "",
                "KYC_Insurer_ID": objRequest.Insurer_Id,
                "KYC_PB_CRN": objRequest.PB_CRN,
                "KYC_Status": KYC_Status,
                "ckyc_remarks": ""
            };
            client.post(future_token_service, token_args, function (data1, response1) {
                if (data1) {
                    if (data1[0].hasOwnProperty("ProposalNo") && data1[0].ProposalNo !== "" && data1[0].ProposalNo !== null) {
                        if (data1[0].hasOwnProperty("Token") && data1[0].Token !== "" && data1[0].Token !== null) {
                            token = data1[0].Token;
                            try {
                                if (token) {
//                                    args.headers.token = token;
                                    var client1 = new Client();
                                    client1.post(future_verify_service, args, function (data, response) {
                                        if (data) {
                                            kyc_fetch_response = data;
                                            if (data.hasOwnProperty("success") && data.success === true) {
                                                if (data.ckyc_remarks === 'OK') {
                                                    LM_Data['KYC_Number'] = (data['result'].hasOwnProperty("ckyc_number")) ? data['result'].ckyc_number : "";
                                                    LM_Data['KYC_Status'] = "VERIFY_SUCCESS";
                                                    LM_Data['KYC_Pan_No'] = (data['result'].hasOwnProperty("id_num")) ? data['result'].id_num : "";
                                                    LM_Data['KYC_Ref_No'] = (data.hasOwnProperty("proposal_id")) ? data.proposal_id : "";
                                                    kyc_req_id = (data.hasOwnProperty("req_id")) ? data.req_id : "";
                                                    LM_Data['KYC_FullName'] = (data['result'].hasOwnProperty("customer_name")) ? data['result'].customer_name : "";
                                                    LM_Data['ckyc_remarks'] = "NA";
                                                } else {
                                                    LM_Data['KYC_Status'] = "VERIFY_FAIL";
                                                    LM_Data['KYC_Ref_No'] = (data.hasOwnProperty("proposal_id")) ? data.proposal_id : "";
                                                    LM_Data['KYC_Redirect_URL'] = data.url ? data.url : data.url;
                                                    kyc_req_id = (data.hasOwnProperty("req_id")) ? data.req_id : "";
                                                    LM_Data['ckyc_remarks'] = data.ckyc_remarks ? (data.ckyc_remarks) : (data.message ? data.message : data);
                                                }
                                            } else {
                                                LM_Data['KYC_Status'] = "VERIFY_FAIL";
                                                LM_Data['KYC_Ref_No'] = (data.hasOwnProperty("proposal_id")) ? data.proposal_id : "";
                                                LM_Data['KYC_Redirect_URL'] = data.url ? data.url : data.url;
                                                kyc_req_id = (data.hasOwnProperty("req_id")) ? data.req_id : "";
                                                LM_Data['ckyc_remarks'] = data.ckyc_remarks ? (data.ckyc_remarks) : (data.message ? data.message : data);
                                            }
                                            try {
                                                let cond = {
                                                    'Insurer_Id': objRequest.Insurer_Id - 0,
                                                    'PB_CRN': (objRequest.PB_CRN === undefined || objRequest.PB_CRN === "" || objRequest.PB_CRN === null) ? "" : objRequest.PB_CRN - 0};
                                                let setObj = {
                                                    'KYC_Number': LM_Data.KYC_Number,
                                                    'KYC_Full_Name': LM_Data.KYC_FullName,
                                                    'KYC_Status': LM_Data.KYC_Status,
                                                    'Modified_On': new Date(),
                                                    'KYC_URL': LM_Data.KYC_Redirect_URL,
                                                    'KYC_Ref_No': LM_Data['KYC_Ref_No'],
                                                    'Proposal_Id': kyc_req_id
                                                };
                                                kyc_detail.update(cond, {$set: setObj}, function (err, users) {
                                                    if (err) {
                                                        res.json({"Insurer": "FUTURE", "Msg": err, "Status": "FAIL"});
                                                    } else {
                                                        //res.json({"Insurer": "FUTURE", "Msg": data.data, "Status": KYC_Status});
                                                    }
                                                });
                                                let queryObj1 = {
                                                    'PB_CRN': objRequest.PB_CRN ? objRequest.PB_CRN : "",
                                                    'User_Data_Id': objRequest.User_Data_Id ? objRequest.User_Data_Id : "",
                                                    'Insurer_Id': objRequest.Insurer_Id,
                                                    'Product_Id': objRequest.Product_Id ? objRequest.Product_Id : "",
                                                    'PAN': (objRequest.PAN === undefined || objRequest.PAN === "" || objRequest.PAN === null) ? "" : objRequest.PAN,
                                                    'Aadhaar': (objRequest.Aadhaar === undefined || objRequest.Aadhaar === "" || objRequest.Aadhaar === null) ? "" : objRequest.Aadhaar,
                                                    'DOB': (objRequest.DOB === undefined || objRequest.DOB === "" || objRequest.DOB === null) ? "" : objRequest.DOB,
                                                    'Full_Name': objRequest.Proposal_Request['middle_name'] === "" ? (objRequest.Proposal_Request['first_name'] + " " + objRequest.Proposal_Request['last_name']) : (objRequest.Proposal_Request['first_name'] + " " + objRequest.Proposal_Request['middle_name'] + " " + objRequest.Proposal_Request['last_name']),
                                                    'Mobile': (objRequest.Mobile === undefined || objRequest.Mobile === "" || objRequest.Mobile === null) ? "" : objRequest.Mobile - 0,
                                                    'Email': (objRequest.Email === undefined || objRequest.Email === "" || objRequest.Email === null) ? "" : objRequest.Email,
                                                    'KYC_Number': LM_Data.KYC_Number,
                                                    'Search_Type': objRequest.Search_Type ? objRequest.Search_Type : "",
                                                    'KYC_Status': LM_Data.KYC_Status,
                                                    'PAN_Doc': objRequest.PAN_Doc ? objRequest.PAN_Doc : "",
                                                    'Aadhar_Doc': objRequest.Aadhar_Doc ? objRequest.Aadhar_Doc : "",
                                                    'KYC_URL': LM_Data.KYC_Redirect_URL,
                                                    'KYC_Ref_No': LM_Data['KYC_Ref_No'],
                                                    'Created_On': new Date(),
                                                    'Modified_On': new Date(),
                                                    'Proposal_Id': kyc_req_id,
                                                    'Quote_Id': "",
                                                    'KYC_Request_Core': kyc_fetch_request,
                                                    'KYC_Response_Core': kyc_fetch_response
                                                };
                                                var kyc_history1 = new kyc_history(queryObj1);
                                                kyc_history1.save(queryObj1, function (err, users) {
                                                    if (err) {
                                                        res.json({"Insurer": "FUTURE", "Msg": err, "Status": "FAIL"});
                                                    } else {
                                                        //res.json({"Insurer": "FUTURE", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                                    }
                                                });
                                            } catch (e) {
                                                res.json({"Insurer": "FUTURE", "Msg": e.stack, "Status": "FAIL"});
                                            }
                                            res.json({"Insurer": "FUTURE", "Msg": LM_Data, "Status": LM_Data.KYC_Status});
                                        } else {
                                            res.json({"Insurer": "FUTURE", "Msg": "KYC verify services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                                        }
                                    });
                                } else {
                                    res.json({"Insurer": "FUTURE", "Msg": "Could Not Generate Token. Please try again later.", "Status": "FAIL"});
                                }
                            } catch (e2) {
                                res.json({"Insurer": "FUTURE", "Msg": e2.stack, "Status": "FAIL"});
                            }
                        } else {
                            res.json({"Insurer": "FUTURE", "Msg": "KYC-Token not generated. Please try again later.", "Status": "FAIL"});
                        }
                    } else {
                        res.json({"Insurer": "FUTURE", "Msg": "KYC-Token generation services was not successful. Please try again later.", "Status": "FAIL"});
                    }
                } else {
                    res.json({"Insurer": "FUTURE", "Msg": "KYC-Token generation services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                }
            });
        } catch (e1) {
            res.json({"Insurer": "FUTURE", "Msg": e1.stack, "Status": "FAIL"});
        }
    });
	
    app.post('/kyc_details/reliance_fetch_kyc_details', function (req, res) {
        try {
            let objRequest = req.body;
            let proposal_request = objRequest.Proposal_Request;
            let kyc_fetch_request = "";
            let kyc_fetch_response = "";
            let vehicle_registration_type = (objRequest.vehicle_registration_type === undefined || objRequest.vehicle_registration_type === "" || objRequest.vehicle_registration_type === null) ? "" : objRequest.vehicle_registration_type;
            vehicle_registration_type = (vehicle_registration_type === "") ? "" : (vehicle_registration_type === "corporate" ? "C" : "I");
            let reliance_verify_service = (config.environment.name === "Production") ? "https://avenue.brobotinsurance.com/Verify_CKYC_Details" : "https://api.brobotinsurance.com/Verify_CKYC_Details";
            vehicle_registration_type = "I";
            var user_kyc_no = (objRequest.KYC_Number === undefined || objRequest.KYC_Number === "" || objRequest.KYC_Number === null) ? "" : objRequest.KYC_Number;
            var cust_name = null;
            if (objRequest.Proposal_Request.middle_name === undefined || objRequest.Proposal_Request.middle_name === "" || objRequest.Proposal_Request.middle_name === null) {
                cust_name = ((objRequest.Proposal_Request.first_name === undefined || objRequest.Proposal_Request.first_name === "" || objRequest.Proposal_Request.first_name === null) ? "" : objRequest.Proposal_Request.first_name) + " " +
                        ((objRequest.Proposal_Request.last_name === undefined || objRequest.Proposal_Request.last_name === "" || objRequest.Proposal_Request.last_name === null) ? "" : objRequest.Proposal_Request.last_name);
            } else {
                cust_name = ((objRequest.Proposal_Request.first_name === undefined || objRequest.Proposal_Request.first_name === "" || objRequest.Proposal_Request.first_name === null) ? "" : objRequest.Proposal_Request.first_name) + " " +
                        ((objRequest.Proposal_Request.middle_name === undefined || objRequest.Proposal_Request.middle_name === "" || objRequest.Proposal_Request.middle_name === null) ? "" : objRequest.Proposal_Request.middle_name) + " " +
                        ((objRequest.Proposal_Request.last_name === undefined || objRequest.Proposal_Request.last_name === "" || objRequest.Proposal_Request.last_name === null) ? "" : objRequest.Proposal_Request.last_name);
            }
            let return_url = "https://www.policyboss.com/webhook/ckyc/ckyc_capture/"+objRequest.PB_CRN+"/"+objRequest.Insurer_Id;
            let req_txt = {
                "PAN": (proposal_request.pan === undefined || proposal_request.pan === "" || proposal_request.pan === null) ? "" : proposal_request.pan,
                "DOB":  (proposal_request.birth_date && proposal_request.birth_date !== "") ? (moment(proposal_request.birth_date, "DD/MM/YYYY").format("DD-MM-YYYY")) : "",
                "CKYC": user_kyc_no,
                "MOBILE": (objRequest.Proposal_Request.mobile === undefined || objRequest.Proposal_Request.mobile === "" || objRequest.Proposal_Request.mobile === null) ? "" : objRequest.Proposal_Request.mobile,
                "PINCODE": "",
                "BIRTHYEAR": "",
                "ReturnURL": return_url,
                "UNIQUEID": objRequest.PB_CRN,
                "AADHAAR_No": "",
                "CIN": "",
                "VOTERID": "",
                "DL_No": "",
                "PASSPORT": ""
            };
            let sub_key = (config.environment.name === "Production") ? "08712cf5065e4d549e7111e098ce4254" : "9338b32e0ed447b68b257ccdc6cfb0bb";
            let args = {
                data: JSON.stringify(req_txt),
                headers: {
                    "Content-Type": "application/json",
                    "Accept": "*/*",
                    "Subscription-Key": sub_key
                }
            };
            kyc_fetch_request = req_txt;
            let KYC_Status = "PENDING";
            let kyc_id = 0;
            let token = null;
            var Client = require('node-rest-client').Client;
            var client = new Client();
            let LM_Data = {
                "KYC_Pan_No": objRequest.PAN ? objRequest.PAN : "",
                "KYC_Number": "",
                "KYC_FullName": "",
                "KYC_Ref_No": "",
                "KYC_Redirect_URL": "",
                "KYC_Insurer_ID": objRequest.Insurer_Id,
                "KYC_PB_CRN": objRequest.PB_CRN,
                "KYC_Status": KYC_Status
            };
            try {
                var client = new Client();
                client.post(reliance_verify_service, args, function (data, response) {
                    if (data) {
                        kyc_fetch_response = data;
                        if (data.hasOwnProperty("success") && data.success === true) {
                            if (data.kyc_data && data.kyc_data.CKYC && data.kyc_data.CKYC.result && data.kyc_data.CKYC.result.PERSONAL_DETAILS && data.kyc_data.CKYC.result.PERSONAL_DETAILS.CKYC_NO && data.kyc_data.CKYC.result.PERSONAL_DETAILS.CKYC_NO !== "") {
                                LM_Data['KYC_Number'] = data.kyc_data.CKYC.result.PERSONAL_DETAILS.CKYC_NO;
                                LM_Data['KYC_Status'] = "FETCH_SUCCESS";
                                LM_Data['KYC_FullName'] = data.kyc_data.CKYC.result.PERSONAL_DETAILS.FULLNAME ? data.kyc_data.CKYC.result.PERSONAL_DETAILS.FULLNAME : "";
                                LM_Data['KYC_Ref_No'] = data.hasOwnProperty('Unique_Id') ? data.Unique_Id : "";
                            } else {
                                LM_Data['KYC_Status'] = "FETCH_FAIL";
                                LM_Data['KYC_Ref_No'] = data.hasOwnProperty('Unique_Id') ? data.Unique_Id : "";
                                LM_Data['KYC_Redirect_URL'] = data.Endpoint_2_URL ? data.Endpoint_2_URL : objRequest.KYC_URL;
                            }
                        } else {
                            LM_Data['KYC_Status'] = "FETCH_FAIL";
                            LM_Data['KYC_Ref_No'] = data.hasOwnProperty('Unique_Id') ? data.Unique_Id : "";
                            LM_Data['KYC_Redirect_URL'] = data.Endpoint_2_URL ? data.Endpoint_2_URL : objRequest.KYC_URL;
                        }

                        try {
                            let setObj = {
                                'KYC_Number': LM_Data.KYC_Number,
                                'KYC_Full_Name': LM_Data.KYC_FullName,
                                'KYC_Status': LM_Data.KYC_Status,
                                'Modified_On': new Date(),
                                'KYC_URL': LM_Data.KYC_Redirect_URL
                            };
                            let cond = {
                                'Insurer_Id': objRequest.Insurer_Id - 0,
                                'PB_CRN': (objRequest.PB_CRN === undefined || objRequest.PB_CRN === "" || objRequest.PB_CRN === null) ? "" : objRequest.PB_CRN - 0
                                        // 'User_Data_Id': (objRequest.User_Data_Id === undefined || objRequest.User_Data_Id === "" || objRequest.User_Data_Id === null) ? 0 : objRequest.User_Data_Id - 0
                            };
                            kyc_detail.update(cond, {$set: setObj}, function (err, users) {
                                if (err) {
                                    res.json({"Insurer": "Reliance", "Msg": err, "Status": "FAIL"});
                                } else {
                                    //res.json({"Insurer": "Reliance", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                }
                            });
                            let queryObj1 = {
                                'PB_CRN': objRequest.PB_CRN ? objRequest.PB_CRN : "",
                                'User_Data_Id': objRequest.User_Data_Id ? objRequest.User_Data_Id : "",
                                'Insurer_Id': objRequest.Insurer_Id,
                                'Product_Id': objRequest.Product_Id ? objRequest.Product_Id : "",
                                'PAN': (objRequest.PAN === undefined || objRequest.PAN === "" || objRequest.PAN === null) ? "" : objRequest.PAN,
                                'Aadhaar': (objRequest.Aadhaar === undefined || objRequest.Aadhaar === "" || objRequest.Aadhaar === null) ? "" : objRequest.Aadhaar,
                                'DOB': (objRequest.DOB === undefined || objRequest.DOB === "" || objRequest.DOB === null) ? "" : (moment(proposal_request.birth_date, "DD/MM/YYYY").format("DD-MM-YYYY")),
                                'Full_Name': objRequest.Proposal_Request['middle_name'] === "" ? (objRequest.Proposal_Request['first_name'] + " " + objRequest.Proposal_Request['last_name']) : (objRequest.Proposal_Request['first_name'] + " " + objRequest.Proposal_Request['middle_name'] + " " + objRequest.Proposal_Request['last_name']),
                                'Mobile': (objRequest.Mobile === undefined || objRequest.Mobile === "" || objRequest.Mobile === null) ? "" : objRequest.Mobile - 0,
                                'Email': (objRequest.Email === undefined || objRequest.Email === "" || objRequest.Email === null) ? "" : objRequest.Email,
                                'KYC_Number': LM_Data.KYC_Number,
                                'Search_Type': objRequest.Search_Type ? objRequest.Search_Type : "",
                                'KYC_Status': LM_Data.KYC_Status,
                                'PAN_Doc': objRequest.PAN_Doc ? objRequest.PAN_Doc : "",
                                'Aadhar_Doc': objRequest.Aadhar_Doc ? objRequest.Aadhar_Doc : "",
                                'KYC_URL': LM_Data.KYC_Redirect_URL,
                                'Created_On': new Date(),
                                'Modified_On': new Date(),
                                                //'Proposal_Request': (objRequest.Proposal_Request === undefined || objRequest.Proposal_Request === "" || objRequest.Proposal_Request === null) ? "" : objRequest.Proposal_Request,
                                'Proposal_Id': (objRequest.Proposal_Id === undefined || objRequest.Proposal_Id === "" || objRequest.Proposal_Id === null) ? "" : objRequest.Proposal_Id,
                                'Quote_Id': (objRequest.Quote_Id === undefined || objRequest.Quote_Id === "" || objRequest.Quote_Id === null) ? "" : objRequest.Quote_Id,
                                'KYC_Request_Core': kyc_fetch_request,
                                'KYC_Response_Core': kyc_fetch_response
                            };
                            var kyc_history1 = new kyc_history(queryObj1);
                            kyc_history1.save(queryObj1, function (err, users) {
                                if (err) {
                                    res.json({"Insurer": "Reliance", "Msg": err, "Status": "FAIL"});
                                } else {
                                    //res.json({"Insurer": "Reliance", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                }
                            });
                        } catch (e) {
                            res.json({"Insurer": "Reliance", "Msg": e.stack, "Status": "FAIL"});
                        }
                        res.json({"Insurer": "Reliance", "Msg": LM_Data, "Status": LM_Data.KYC_Status});
                    } else {
                        res.json({"Insurer": "Reliance", "Msg": "KYC verify services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                    }
                });
            } catch (e2) {
                res.json({"Insurer": "Reliance", "Msg": e2.stack, "Status": "FAIL"});
            }
                    
                
        } catch (e1) {
            res.json({"Insurer": "Reliance", "Msg": e1.stack, "Status": "FAIL"});
        }
    });
    
    app.post('/kyc_details/reliance_verify_kyc_details', function (req, res) {
        try {
            let objRequest = req.body;
            let proposal_request = objRequest.Proposal_Request;
            let kyc_fetch_request = "";
            let kyc_fetch_response = "";
            let vehicle_registration_type = (objRequest.vehicle_registration_type === undefined || objRequest.vehicle_registration_type === "" || objRequest.vehicle_registration_type === null) ? "" : objRequest.vehicle_registration_type;
            vehicle_registration_type = (vehicle_registration_type === "") ? "" : (vehicle_registration_type === "corporate" ? "C" : "I");
            let reliance_verify_service = (config.environment.name === "Production") ? "https://avenue.brobotinsurance.com/Verify_CKYC_Details" : "https://api.brobotinsurance.com/Verify_CKYC_Details";
            vehicle_registration_type = "I";
            var user_kyc_no = (objRequest.KYC_Number === undefined || objRequest.KYC_Number === "" || objRequest.KYC_Number === null) ? "" : objRequest.KYC_Number;
            var cust_name = null;
            if (objRequest.Proposal_Request.middle_name === undefined || objRequest.Proposal_Request.middle_name === "" || objRequest.Proposal_Request.middle_name === null) {
                cust_name = ((objRequest.Proposal_Request.first_name === undefined || objRequest.Proposal_Request.first_name === "" || objRequest.Proposal_Request.first_name === null) ? "" : objRequest.Proposal_Request.first_name) + " " +
                        ((objRequest.Proposal_Request.last_name === undefined || objRequest.Proposal_Request.last_name === "" || objRequest.Proposal_Request.last_name === null) ? "" : objRequest.Proposal_Request.last_name);
            } else {
                cust_name = ((objRequest.Proposal_Request.first_name === undefined || objRequest.Proposal_Request.first_name === "" || objRequest.Proposal_Request.first_name === null) ? "" : objRequest.Proposal_Request.first_name) + " " +
                        ((objRequest.Proposal_Request.middle_name === undefined || objRequest.Proposal_Request.middle_name === "" || objRequest.Proposal_Request.middle_name === null) ? "" : objRequest.Proposal_Request.middle_name) + " " +
                        ((objRequest.Proposal_Request.last_name === undefined || objRequest.Proposal_Request.last_name === "" || objRequest.Proposal_Request.last_name === null) ? "" : objRequest.Proposal_Request.last_name);
            }
            let return_url = "https://www.policyboss.com/webhook/ckyc/ckyc_capture/"+objRequest.PB_CRN+"/"+objRequest.Insurer_Id;
            let req_txt = {
                "PAN": (proposal_request.pan === undefined || proposal_request.pan === "" || proposal_request.pan === null) ? "" : proposal_request.pan,
                "DOB":  (proposal_request.birth_date && proposal_request.birth_date !== "") ? (moment(proposal_request.birth_date, "DD/MM/YYYY").format("DD-MM-YYYY")) : "",
                "CKYC": user_kyc_no,
                "MOBILE": (objRequest.Proposal_Request.mobile === undefined || objRequest.Proposal_Request.mobile === "" || objRequest.Proposal_Request.mobile === null) ? "" : objRequest.Proposal_Request.mobile,
                "PINCODE": "",
                "BIRTHYEAR": "",
                "ReturnURL": return_url,
                "UNIQUEID": objRequest.PB_CRN,
                "AADHAAR_No": "",
                "CIN": "",
                "VOTERID": "",
                "DL_No": "",
                "PASSPORT": ""
            };
            let sub_key = (config.environment.name === "Production") ? "08712cf5065e4d549e7111e098ce4254" : "9338b32e0ed447b68b257ccdc6cfb0bb";
            let args = {
                data: JSON.stringify(req_txt),
                headers: {
                    "Content-Type": "application/json",
                    "Accept": "*/*",
                    "Subscription-Key": sub_key
                }
            };
            kyc_fetch_request = req_txt;
            let KYC_Status = "FETCH_SUCCESS";
            let kyc_id = 0;
            let token = null;
            var Client = require('node-rest-client').Client;
            var client = new Client();
            let LM_Data = {
                "KYC_Pan_No": objRequest.PAN ? objRequest.PAN : "",
                "KYC_Number": "",
                "KYC_FullName": "",
                "KYC_Ref_No": "",
                "KYC_Redirect_URL": "",
                "KYC_Insurer_ID": objRequest.Insurer_Id,
                "KYC_PB_CRN": objRequest.PB_CRN,
                "KYC_Status": KYC_Status
            };
            try {
                var client = new Client();
                client.post(reliance_verify_service, args, function (data, response) {
                    if (data) {
                        kyc_fetch_response = data;
                        if (data.hasOwnProperty("success") && data.success === true) {
                            if (data.kyc_data && data.kyc_data.CKYC && data.kyc_data.CKYC.result && data.kyc_data.CKYC.result.PERSONAL_DETAILS && data.kyc_data.CKYC.result.PERSONAL_DETAILS.CKYC_NO && data.kyc_data.CKYC.result.PERSONAL_DETAILS.CKYC_NO !== "") {
                                LM_Data['KYC_Number'] = data.kyc_data.CKYC.result.PERSONAL_DETAILS.CKYC_NO;
                                LM_Data['KYC_Status'] = "VERIFY_SUCCESS";
                                LM_Data['KYC_FullName'] = data.kyc_data.CKYC.result.PERSONAL_DETAILS.FULLNAME ? data.kyc_data.CKYC.result.PERSONAL_DETAILS.FULLNAME : "";
                                LM_Data['KYC_Ref_No'] = data.hasOwnProperty('Unique_Id') ? data.Unique_Id : "";
                            } else {
                                LM_Data['KYC_Status'] = "VERIFY_FAIL";
                                LM_Data['KYC_Ref_No'] = data.hasOwnProperty('Unique_Id') ? data.Unique_Id : "";
                                LM_Data['KYC_Redirect_URL'] = data.Endpoint_2_URL ? data.Endpoint_2_URL : objRequest.KYC_URL;
                            }
                        } else {
                            LM_Data['KYC_Status'] = "VERIFY_FAIL";
                            LM_Data['KYC_Ref_No'] = data.hasOwnProperty('Unique_Id') ? data.Unique_Id : "";
                            LM_Data['KYC_Redirect_URL'] = data.Endpoint_2_URL ? data.Endpoint_2_URL : objRequest.KYC_URL;
                        }

                        try {
                            let setObj = {
                                'KYC_Number': LM_Data.KYC_Number,
                                'KYC_Full_Name': LM_Data.KYC_FullName,
                                'KYC_Status': LM_Data.KYC_Status,
                                'Modified_On': new Date(),
                                'KYC_URL': LM_Data.KYC_Redirect_URL
                            };
                            let cond = {
                                'Insurer_Id': objRequest.Insurer_Id - 0,
                                'PB_CRN': (objRequest.PB_CRN === undefined || objRequest.PB_CRN === "" || objRequest.PB_CRN === null) ? "" : objRequest.PB_CRN - 0
                                        // 'User_Data_Id': (objRequest.User_Data_Id === undefined || objRequest.User_Data_Id === "" || objRequest.User_Data_Id === null) ? 0 : objRequest.User_Data_Id - 0
                            };
                            kyc_detail.update(cond, {$set: setObj}, function (err, users) {
                                if (err) {
                                    res.json({"Insurer": "Reliance", "Msg": err, "Status": "FAIL"});
                                } else {
                                    //res.json({"Insurer": "Reliance", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                }
                            });
                            let queryObj1 = {
                                'PB_CRN': objRequest.PB_CRN ? objRequest.PB_CRN : "",
                                'User_Data_Id': objRequest.User_Data_Id ? objRequest.User_Data_Id : "",
                                'Insurer_Id': objRequest.Insurer_Id,
                                'Product_Id': objRequest.Product_Id ? objRequest.Product_Id : "",
                                'PAN': (objRequest.PAN === undefined || objRequest.PAN === "" || objRequest.PAN === null) ? "" : objRequest.PAN,
                                'Aadhaar': (objRequest.Aadhaar === undefined || objRequest.Aadhaar === "" || objRequest.Aadhaar === null) ? "" : objRequest.Aadhaar,
                                'DOB': (objRequest.DOB === undefined || objRequest.DOB === "" || objRequest.DOB === null) ? "" : (moment(proposal_request.birth_date, "DD/MM/YYYY").format("DD-MM-YYYY")),
                                'Full_Name': objRequest.Proposal_Request['middle_name'] === "" ? (objRequest.Proposal_Request['first_name'] + " " + objRequest.Proposal_Request['last_name']) : (objRequest.Proposal_Request['first_name'] + " " + objRequest.Proposal_Request['middle_name'] + " " + objRequest.Proposal_Request['last_name']),
                                'Mobile': (objRequest.Mobile === undefined || objRequest.Mobile === "" || objRequest.Mobile === null) ? "" : objRequest.Mobile - 0,
                                'Email': (objRequest.Email === undefined || objRequest.Email === "" || objRequest.Email === null) ? "" : objRequest.Email,
                                'KYC_Number': LM_Data.KYC_Number,
                                'Search_Type': objRequest.Search_Type ? objRequest.Search_Type : "",
                                'KYC_Status': LM_Data.KYC_Status,
                                'PAN_Doc': objRequest.PAN_Doc ? objRequest.PAN_Doc : "",
                                'Aadhar_Doc': objRequest.Aadhar_Doc ? objRequest.Aadhar_Doc : "",
                                'KYC_URL': LM_Data.KYC_Redirect_URL,
                                'Created_On': new Date(),
                                'Modified_On': new Date(),
                                                //'Proposal_Request': (objRequest.Proposal_Request === undefined || objRequest.Proposal_Request === "" || objRequest.Proposal_Request === null) ? "" : objRequest.Proposal_Request,
                                'Proposal_Id': (objRequest.Proposal_Id === undefined || objRequest.Proposal_Id === "" || objRequest.Proposal_Id === null) ? "" : objRequest.Proposal_Id,
                                'Quote_Id': (objRequest.Quote_Id === undefined || objRequest.Quote_Id === "" || objRequest.Quote_Id === null) ? "" : objRequest.Quote_Id,
                                'KYC_Request_Core': kyc_fetch_request,
                                'KYC_Response_Core': kyc_fetch_response
                            };
                            var kyc_history1 = new kyc_history(queryObj1);
                            kyc_history1.save(queryObj1, function (err, users) {
                                if (err) {
                                    res.json({"Insurer": "Reliance", "Msg": err, "Status": "FAIL"});
                                } else {
                                    //res.json({"Insurer": "Reliance", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                }
                            });
                        } catch (e) {
                            res.json({"Insurer": "Reliance", "Msg": e.stack, "Status": "FAIL"});
                        }
                        res.json({"Insurer": "Reliance", "Msg": LM_Data, "Status": LM_Data.KYC_Status});
                    } else {
                        res.json({"Insurer": "Reliance", "Msg": "KYC verify services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                    }
                });
            } catch (e2) {
                res.json({"Insurer": "Reliance", "Msg": e2.stack, "Status": "FAIL"});
            }
                    
                
        } catch (e1) {
            res.json({"Insurer": "Reliance", "Msg": e1.stack, "Status": "FAIL"});
        }
    });
    app.post('/kyc_details/liberty_fetch_kyc_details', function (req, res) {
        try {
            let objRequest = req.body;
            let proposal_request = objRequest.Proposal_Request;
            let kyc_fetch_request = "";
            let kyc_fetch_response = "";
            var user_kyc_no = (objRequest.user_kyc_no === undefined || objRequest.user_kyc_no === "" || objRequest.user_kyc_no === null) ? "" : objRequest.user_kyc_no;
            let liberty_token_service = (config.environment.name === "Production") ? "https://libertykyc.auth.ap-south-1.amazoncognito.com/oauth2/token" : "";
            let liberty_verify_service = (config.environment.name === "Production") ? "https://kyc.libertyinsurance.in/api/Generic/VerifyKYC" : "https://moem-uat.libertyinsurance.in/ckyc/api/Generic/VerifyKYC";
            let vehicle_registration_type = (objRequest.vehicle_registration_type === undefined || objRequest.vehicle_registration_type === "" || objRequest.vehicle_registration_type === null) ? "" : objRequest.vehicle_registration_type;
            vehicle_registration_type = (vehicle_registration_type === "") ? "" : (vehicle_registration_type === "corporate" ? "C" : "I");
            vehicle_registration_type = "I";
            let req_txt = {
                "Aggregator_Program_Name": (config.environment.name === "Production") ? "PolicyBossLandmark" : "PolicyBossLandmark",
                "Aggregator_KYC_Req_No": (objRequest.PB_CRN === undefined || objRequest.PB_CRN === "" || objRequest.PB_CRN === null) ? "" : objRequest.PB_CRN - 0,
                "ProposerType": vehicle_registration_type,
                "FirstName": (objRequest.Proposal_Request.first_name === undefined || objRequest.Proposal_Request.first_name === "" || objRequest.Proposal_Request.first_name === null) ? "" : objRequest.Proposal_Request.first_name,
                "MiddleName": (objRequest.Proposal_Request.middle_name === undefined || objRequest.Proposal_Request.middle_name === "" || objRequest.Proposal_Request.middle_name === null) ? "" : objRequest.Proposal_Request.middle_name,
                "LastName": (objRequest.Proposal_Request.last_name === undefined || objRequest.Proposal_Request.last_name === "" || objRequest.Proposal_Request.last_name === null) ? "" : objRequest.Proposal_Request.last_name,
                "CompanyName": "",
                "Gender": (objRequest.Proposal_Request.gender === undefined || objRequest.Proposal_Request.gender === "" || objRequest.Proposal_Request.gender === null) ? "" : objRequest.Proposal_Request.gender,
                "DOB": (vehicle_registration_type === "I" && proposal_request.birth_date && proposal_request.birth_date !== "") ? (moment(proposal_request.birth_date, "DD/MM/YYYY").format("MM-DD-YYYY")) : "",
                "DOI": (vehicle_registration_type === "C" ? ((objRequest.date_of_incorporation === undefined || objRequest.date_of_incorporation === "" || objRequest.date_of_incorporation === null) ? "" : (moment(objRequest.date_of_incorporation, "DD/MM/YYYY").format("MM-DD-YYYY"))) : ""),
                "MobileNo": (objRequest.Proposal_Request.mobile === undefined || objRequest.Proposal_Request.mobile === "" || objRequest.Proposal_Request.mobile === null) ? "" : objRequest.Proposal_Request.mobile,
                "Email": (objRequest.Proposal_Request.email === undefined || objRequest.Proposal_Request.email === "" || objRequest.Proposal_Request.email === null) ? "" : objRequest.Proposal_Request.email,
                "ProposerPAN": (objRequest.PAN === undefined || objRequest.PAN === "" || objRequest.PAN === null) ? "" : objRequest.PAN,
                "ProposerAadhaarNumber": (objRequest.Aadhar === undefined || objRequest.Aadhar === "" || objRequest.Aadhar === null) ? "" : objRequest.Aadhar, //"",,
                "ProposerCKYCNo": user_kyc_no,
                "Other_Add_FLD1": "",
                "Other_Add_FLD2": "",
                "Other_Add_FLD3": "",
                "Other_Add_FLD4": "",
                "Other_Add_FLD5": "",
                "Other_Add_FLD6": ""
            };
            let username = (config.environment.name === "Production") ? "7vo4vc9of4siainug2c38td8pm" : "";
            let password = (config.environment.name === "Production") ? "1bho90pb9el9n8daqpua0srse1mnm86df9gb6ekna3s0t8pafg9d" : "";
            let auth = 'Basic ' + new Buffer(username + ':' + password).toString('base64');
            let buff_enc = new Buffer(JSON.stringify(req_txt));
            let data_enc = buff_enc.toString('base64');
            let req_txt_base64 = {
                "enc_request": data_enc
            };
            let args = {
                data: req_txt_base64,
                headers: {
                    "Authorization": auth,
                    "Content-Type": "application/json",
                    "Accept": "*/*"
                }
            };
            let token_args = {
                data: {
                    "grant_type": (config.environment.name === "Production") ? "client_credentials" : "",
                    "client_id": (config.environment.name === "Production") ? "7vo4vc9of4siainug2c38td8pm" : "",
                    "scope": (config.environment.name === "Production") ? "api/Generic" : ""
                },
                headers: {
                    "Authorization": auth,
                    "Content-Type": "application/x-www-form-urlencoded",
                    "Accept": "*/*"
                }
            };
            kyc_fetch_request = req_txt;
            let KYC_Status = "PENDING";
            let kyc_id = 0;
            let token = null;
            var Client = require('node-rest-client').Client;
            var client = new Client();
            let LM_Data = {
                "KYC_Pan_No": "",
                "KYC_Number": "",
                "KYC_FullName": "",
                "KYC_Ref_No": "",
                "KYC_Redirect_URL": "",
                "KYC_Insurer_ID": objRequest.Insurer_Id,
                "KYC_PB_CRN": objRequest.PB_CRN,
                "KYC_Status": KYC_Status
            };
            if (config.environment.name === "Production") {
                client.post(liberty_token_service, token_args, function (data1, response) {
                    if (data1) {
                        if (data1.hasOwnProperty("access_token") && data1.access_token !== "" && data1.access_token !== null) {
                            token = data1.access_token;
                            try {
                                if (token) {
                                    args.headers.Authorization = token;
                                    var client1 = new Client();
                                    client1.post(liberty_verify_service, args, function (data, response) {
                                        if (data && data.hasOwnProperty('enc_response')) {
                                            let enc_response = data.enc_response !== "" ? data.enc_response : "";
                                            let buff_dec = new Buffer(enc_response, 'base64');
                                            let data_dec = buff_dec.toString('ascii');
                                            data_dec = typeof data_dec === "string" ? JSON.parse(data_dec) : JSON.parse(JSON.stringify(data_dec));
                                            kyc_fetch_response = data_dec;
                                            if (data_dec.hasOwnProperty("KYC_Status") && data_dec.KYC_Status === "1" && data_dec.KYC_Remark === "OK") {
                                                LM_Data['KYC_Number'] = (data_dec.hasOwnProperty("IC_KYC_No")) ? data_dec.IC_KYC_No : "";
                                                LM_Data['KYC_Status'] = "FETCH_SUCCESS";
                                                LM_Data['KYC_Pan_No'] = (data_dec.hasOwnProperty("ProposerPAN")) ? data_dec.ProposerPAN : objRequest.PAN;
                                                LM_Data['KYC_Ref_No'] = (data_dec.hasOwnProperty("Aggregator_KYC_Req_No")) ? data_dec.Aggregator_KYC_Req_No : "";
//                        objRequest.Quote_Id = LM_Data['KYC_Ref_No'];//future purpose
                                                LM_Data['KYC_FullName'] = (data_dec.hasOwnProperty("FirstName")) ? data_dec.FirstName : "";
                                            } else {
                                                LM_Data['KYC_Status'] = "FETCH_FAIL";
                                                LM_Data['KYC_Ref_No'] = (data_dec.hasOwnProperty("Aggregator_KYC_Req_No")) ? data_dec.Aggregator_KYC_Req_No : "";
                                                LM_Data['KYC_Redirect_URL'] = data_dec.IC_KYC_REG_URL ? data_dec.IC_KYC_REG_URL : objRequest.KYC_URL;
                                            }

                                            try {
                                                let cond = {
                                                    'Insurer_Id': objRequest.Insurer_Id - 0,
                                                    'PB_CRN': (objRequest.PB_CRN === undefined || objRequest.PB_CRN === "" || objRequest.PB_CRN === null) ? "" : objRequest.PB_CRN - 0
//                                                'User_Data_Id': (ObjRequest.User_Data_Id === undefined || ObjRequest.User_Data_Id === "" || ObjRequest.User_Data_Id === null) ? 0 : ObjRequest.User_Data_Id - 0
                                                };
                                                let setObj = {
                                                    'KYC_Number': LM_Data.KYC_Number,
                                                    'KYC_Full_Name': LM_Data.KYC_FullName,
                                                    'KYC_Status': LM_Data.KYC_Status,
                                                    'Modified_On': new Date(),
                                                    'KYC_URL': LM_Data.KYC_Redirect_URL,
                                                    'KYC_Ref_No': LM_Data.KYC_Ref_No
                                                };
                                                kyc_detail.update(cond, {$set: setObj}, function (err, users) {
                                                    if (err) {
                                                        res.json({"Insurer": "Liberty", "Msg": err, "Status": "FAIL"});
                                                    } else {
                                                        //res.json({"Insurer": "Edelweiss", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                                    }
                                                });
                                                let queryObj1 = {
                                                    'PB_CRN': objRequest.PB_CRN ? objRequest.PB_CRN : "",
                                                    'User_Data_Id': objRequest.User_Data_Id ? objRequest.User_Data_Id : "",
                                                    'Insurer_Id': objRequest.Insurer_Id,
                                                    'Product_Id': objRequest.Product_Id ? objRequest.Product_Id : "",
                                                    'PAN': (objRequest.PAN === undefined || objRequest.PAN === "" || objRequest.PAN === null) ? "" : objRequest.PAN,
                                                    'Aadhar': (objRequest.Aadhaar === undefined || objRequest.Aadhaar === "" || objRequest.Aadhaar === null) ? "" : objRequest.Aadhaar,
                                                    'DOB': (objRequest.DOB === undefined || objRequest.DOB === "" || objRequest.DOB === null) ? "" : objRequest.DOB,
                                                    'Full_Name': objRequest.Proposal_Request['middle_name'] === "" ? (objRequest.Proposal_Request['first_name'] + " " + objRequest.Proposal_Request['last_name']) : (objRequest.Proposal_Request['first_name'] + " " + objRequest.Proposal_Request['middle_name'] + " " + objRequest.Proposal_Request['last_name']),
                                                    'KYC_Full_Name': LM_Data.KYC_FullName,
                                                    'Mobile': (objRequest.Mobile === undefined || objRequest.Mobile === "" || objRequest.Mobile === null) ? "" : objRequest.Mobile - 0,
                                                    'Email': (objRequest.Email === undefined || objRequest.Email === "" || objRequest.Email === null) ? "" : objRequest.Email,
                                                    'KYC_Number': LM_Data.KYC_Number,
                                                    'Search_Type': objRequest.Search_Type ? objRequest.Search_Type : "",
                                                    'KYC_Status': LM_Data.KYC_Status,
                                                    'PAN_Doc': objRequest.PAN_Doc ? objRequest.PAN_Doc : "",
                                                    'Aadhar_Doc': objRequest.Aadhar_Doc ? objRequest.Aadhar_Doc : "",
                                                    'KYC_URL': LM_Data.KYC_Redirect_URL,
                                                    'Created_On': new Date(),
                                                    'Modified_On': new Date(),
                                                    //'Proposal_Request': (objRequest.Proposal_Request === undefined || objRequest.Proposal_Request === "" || objRequest.Proposal_Request === null) ? "" : objRequest.Proposal_Request,
                                                    'Proposal_Id': (objRequest.Proposal_Id === undefined || objRequest.Proposal_Id === "" || objRequest.Proposal_Id === null) ? "" : objRequest.Proposal_Id,
                                                    'Quote_Id': (objRequest.Quote_Id === undefined || objRequest.Quote_Id === "" || objRequest.Quote_Id === null) ? "" : objRequest.Quote_Id,
                                                    'KYC_Request_Core': kyc_fetch_request,
                                                    'KYC_Response_Core': kyc_fetch_response
                                                };
                                                var kyc_history1 = new kyc_history(queryObj1);
                                                kyc_history1.save(queryObj1, function (err, users) {
                                                    if (err) {
                                                        res.json({"Insurer": "Liberty", "Msg": err, "Status": "FAIL"});
                                                    } else {
                                                        //res.json({"Insurer": "Liberty", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                                    }
                                                });
                                            } catch (e) {
                                                res.json({"Insurer": "Liberty", "Msg": e.stack, "Status": "FAIL"});
                                            }
                                            res.json({"Insurer": "Liberty", "Msg": LM_Data, "Status": LM_Data.KYC_Status});
                                        } else {
                                            res.json({"Insurer": "Liberty", "Msg": "KYC fetch services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                                        }
                                    });
                                } else {
                                    res.json({"Insurer": "Liberty", "Msg": "Could Not Generate Token. Please try again later.", "Status": "FAIL"});
                                }
                            } catch (e2) {
                                res.json({"Insurer": "Liberty", "Msg": e2.stack, "Status": "FAIL"});
                            }
                        } else {
                            res.json({"Insurer": "Liberty", "Msg": "KYC-Token not generated. Please try again later.", "Status": "FAIL"});
                        }
                    } else {
                        res.json({"Insurer": "Liberty", "Msg": "KYC-Token generation Live services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                    }
                });
            } else {
                client.post(liberty_verify_service, args, function (data, response) {
                    if (data && data.hasOwnProperty('enc_response')) {
                        let enc_response = data.enc_response !== "" ? data.enc_response : "";
                        let buff_dec = new Buffer(enc_response, 'base64');
                        let data_dec = buff_dec.toString('ascii');
                        data_dec = typeof data_dec === "string" ? JSON.parse(data_dec) : JSON.parse(JSON.stringify(data_dec));
                        kyc_fetch_response = data_dec;
                        if (data_dec.hasOwnProperty("KYC_Status") && data_dec.KYC_Status === "1" && data_dec.KYC_Remark === "OK") {
                            LM_Data['KYC_Number'] = (data_dec.hasOwnProperty("IC_KYC_No")) ? data_dec.IC_KYC_No : "";
                            LM_Data['KYC_Status'] = "FETCH_SUCCESS";
                            LM_Data['KYC_Pan_No'] = (data_dec.hasOwnProperty("ProposerPAN")) ? data_dec.ProposerPAN : objRequest.PAN;
                            LM_Data['KYC_Ref_No'] = (data_dec.hasOwnProperty("Aggregator_KYC_Req_No")) ? data_dec.Aggregator_KYC_Req_No : "";
//                        objRequest.Quote_Id = LM_Data['KYC_Ref_No'];//future purpose
                            LM_Data['KYC_FullName'] = (data_dec.hasOwnProperty("FirstName")) ? data_dec.FirstName : "";
                        } else {
                            LM_Data['KYC_Status'] = "FETCH_FAIL";
                            LM_Data['KYC_Ref_No'] = (data_dec.hasOwnProperty("Aggregator_KYC_Req_No")) ? data_dec.Aggregator_KYC_Req_No : "";
                            LM_Data['KYC_Redirect_URL'] = data_dec.IC_KYC_REG_URL ? data_dec.IC_KYC_REG_URL : objRequest.KYC_URL;
                        }

                        try {
                            let cond = {
                                'Insurer_Id': objRequest.Insurer_Id - 0,
                                'PB_CRN': (objRequest.PB_CRN === undefined || objRequest.PB_CRN === "" || objRequest.PB_CRN === null) ? "" : objRequest.PB_CRN - 0
//                                                'User_Data_Id': (ObjRequest.User_Data_Id === undefined || ObjRequest.User_Data_Id === "" || ObjRequest.User_Data_Id === null) ? 0 : ObjRequest.User_Data_Id - 0
                            };
                            let setObj = {
                                'KYC_Number': LM_Data.KYC_Number,
                                'KYC_Full_Name': LM_Data.KYC_FullName,
                                'KYC_Status': LM_Data.KYC_Status,
                                'Modified_On': new Date(),
                                'KYC_URL': LM_Data.KYC_Redirect_URL,
                                'KYC_Ref_No': LM_Data.KYC_Ref_No
                            };
                            kyc_detail.update(cond, {$set: setObj}, function (err, users) {
                                if (err) {
                                    res.json({"Insurer": "Liberty", "Msg": err, "Status": "FAIL"});
                                } else {
                                    //res.json({"Insurer": "Edelweiss", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                }
                            });
                            let queryObj1 = {
                                'PB_CRN': objRequest.PB_CRN ? objRequest.PB_CRN : "",
                                'User_Data_Id': objRequest.User_Data_Id ? objRequest.User_Data_Id : "",
                                'Insurer_Id': objRequest.Insurer_Id,
                                'Product_Id': objRequest.Product_Id ? objRequest.Product_Id : "",
                                'PAN': (objRequest.PAN === undefined || objRequest.PAN === "" || objRequest.PAN === null) ? "" : objRequest.PAN,
                                'Aadhar': (objRequest.Aadhaar === undefined || objRequest.Aadhaar === "" || objRequest.Aadhaar === null) ? "" : objRequest.Aadhaar,
                                'DOB': (objRequest.DOB === undefined || objRequest.DOB === "" || objRequest.DOB === null) ? "" : objRequest.DOB,
                                'Full_Name': objRequest.Proposal_Request['middle_name'] === "" ? (objRequest.Proposal_Request['first_name'] + " " + objRequest.Proposal_Request['last_name']) : (objRequest.Proposal_Request['first_name'] + " " + objRequest.Proposal_Request['middle_name'] + " " + objRequest.Proposal_Request['last_name']),
                                'KYC_Full_Name': LM_Data.KYC_FullName,
                                'Mobile': (objRequest.Mobile === undefined || objRequest.Mobile === "" || objRequest.Mobile === null) ? "" : objRequest.Mobile - 0,
                                'Email': (objRequest.Email === undefined || objRequest.Email === "" || objRequest.Email === null) ? "" : objRequest.Email,
                                'KYC_Number': LM_Data.KYC_Number,
                                'Search_Type': objRequest.Search_Type ? objRequest.Search_Type : "",
                                'KYC_Status': LM_Data.KYC_Status,
                                'PAN_Doc': objRequest.PAN_Doc ? objRequest.PAN_Doc : "",
                                'Aadhar_Doc': objRequest.Aadhar_Doc ? objRequest.Aadhar_Doc : "",
                                'KYC_URL': LM_Data.KYC_Redirect_URL,
                                'Created_On': new Date(),
                                'Modified_On': new Date(),
                                //'Proposal_Request': (objRequest.Proposal_Request === undefined || objRequest.Proposal_Request === "" || objRequest.Proposal_Request === null) ? "" : objRequest.Proposal_Request,
                                'Proposal_Id': (objRequest.Proposal_Id === undefined || objRequest.Proposal_Id === "" || objRequest.Proposal_Id === null) ? "" : objRequest.Proposal_Id,
                                'Quote_Id': (objRequest.Quote_Id === undefined || objRequest.Quote_Id === "" || objRequest.Quote_Id === null) ? "" : objRequest.Quote_Id,
                                'KYC_Request_Core': kyc_fetch_request,
                                'KYC_Response_Core': kyc_fetch_response
                            };
                            var kyc_history1 = new kyc_history(queryObj1);
                            kyc_history1.save(queryObj1, function (err, users) {
                                if (err) {
                                    res.json({"Insurer": "Liberty", "Msg": err, "Status": "FAIL"});
                                } else {
                                    //res.json({"Insurer": "Liberty", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                }
                            });
                        } catch (e) {
                            res.json({"Insurer": "Liberty", "Msg": e.stack, "Status": "FAIL"});
                        }
                        res.json({"Insurer": "Liberty", "Msg": LM_Data, "Status": LM_Data.KYC_Status});
                    } else {
                        res.json({"Insurer": "Liberty", "Msg": "KYC fetch services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                    }
                });
            }
        } catch (e1) {
            res.json({"Insurer": "Liberty", "Msg": e1.stack, "Status": "FAIL"});
        }
    });
    app.post('/kyc_details/liberty_verify_kyc_details', function (req, res) {
        try {
            let objRequest = req.body;
            let proposal_request = objRequest.Proposal_Request;
            let kyc_fetch_request = "";
            let kyc_fetch_response = "";
            var user_kyc_no = (objRequest.user_kyc_no === undefined || objRequest.user_kyc_no === "" || objRequest.user_kyc_no === null) ? "" : objRequest.user_kyc_no;
            let liberty_token_service = (config.environment.name === "Production") ? "https://libertykyc.auth.ap-south-1.amazoncognito.com/oauth2/token" : "";
            let liberty_verify_service = (config.environment.name === "Production") ? "https://kyc.libertyinsurance.in/api/Generic/VerifyKYC" : "https://moem-uat.libertyinsurance.in/ckyc/api/Generic/VerifyKYC";
            let vehicle_registration_type = (objRequest.vehicle_registration_type === undefined || objRequest.vehicle_registration_type === "" || objRequest.vehicle_registration_type === null) ? "" : objRequest.vehicle_registration_type;
            vehicle_registration_type = (vehicle_registration_type === "") ? "" : (vehicle_registration_type === "corporate" ? "C" : "I");
            vehicle_registration_type = "I";
            let req_txt = {
                "Aggregator_Program_Name": (config.environment.name === "Production") ? "PolicyBossLandmark" : "PolicyBossLandmark",
                "Aggregator_KYC_Req_No": (objRequest.PB_CRN === undefined || objRequest.PB_CRN === "" || objRequest.PB_CRN === null) ? "" : objRequest.PB_CRN - 0,
                "ProposerType": vehicle_registration_type,
                "FirstName": (objRequest.Proposal_Request.first_name === undefined || objRequest.Proposal_Request.first_name === "" || objRequest.Proposal_Request.first_name === null) ? "" : objRequest.Proposal_Request.first_name,
                "MiddleName": (objRequest.Proposal_Request.middle_name === undefined || objRequest.Proposal_Request.middle_name === "" || objRequest.Proposal_Request.middle_name === null) ? "" : objRequest.Proposal_Request.middle_name,
                "LastName": (objRequest.Proposal_Request.last_name === undefined || objRequest.Proposal_Request.last_name === "" || objRequest.Proposal_Request.last_name === null) ? "" : objRequest.Proposal_Request.last_name,
                "CompanyName": "",
                "Gender": (objRequest.Proposal_Request.gender === undefined || objRequest.Proposal_Request.gender === "" || objRequest.Proposal_Request.gender === null) ? "" : objRequest.Proposal_Request.gender,
                "DOB": (vehicle_registration_type === "I" && proposal_request.birth_date && proposal_request.birth_date !== "") ? (moment(proposal_request.birth_date, "DD/MM/YYYY").format("MM-DD-YYYY")) : "",
                "DOI": (vehicle_registration_type === "C" ? ((objRequest.date_of_incorporation === undefined || objRequest.date_of_incorporation === "" || objRequest.date_of_incorporation === null) ? "" : (moment(objRequest.date_of_incorporation, "DD/MM/YYYY").format("MM-DD-YYYY"))) : ""),
                "MobileNo": (objRequest.Proposal_Request.mobile === undefined || objRequest.Proposal_Request.mobile === "" || objRequest.Proposal_Request.mobile === null) ? "" : objRequest.Proposal_Request.mobile,
                "Email": (objRequest.Proposal_Request.email === undefined || objRequest.Proposal_Request.email === "" || objRequest.Proposal_Request.email === null) ? "" : objRequest.Proposal_Request.email,
                "ProposerPAN": (objRequest.PAN === undefined || objRequest.PAN === "" || objRequest.PAN === null) ? "" : objRequest.PAN,
                "ProposerAadhaarNumber": (objRequest.Aadhar === undefined || objRequest.Aadhar === "" || objRequest.Aadhar === null) ? "" : objRequest.Aadhar, //"",,
                "ProposerCKYCNo": user_kyc_no,
                "Other_Add_FLD1": "",
                "Other_Add_FLD2": "",
                "Other_Add_FLD3": "",
                "Other_Add_FLD4": "",
                "Other_Add_FLD5": "",
                "Other_Add_FLD6": ""
            };
            let username = (config.environment.name === "Production") ? "7vo4vc9of4siainug2c38td8pm" : "";
            let password = (config.environment.name === "Production") ? "1bho90pb9el9n8daqpua0srse1mnm86df9gb6ekna3s0t8pafg9d" : "";
            let auth = 'Basic ' + new Buffer(username + ':' + password).toString('base64');
            console.log(auth);
            let buff_enc = new Buffer(JSON.stringify(req_txt));
            let data_enc = buff_enc.toString('base64');
            let req_txt_base64 = {
                "enc_request": data_enc
            };
            let args = {
                data: req_txt_base64,
                headers: {
                    "Authorization": auth,
                    "Content-Type": "application/json",
                    "Accept": "*/*"
                }
            };
            let token_args = {
                data: {
                    "grant_type": (config.environment.name === "Production") ? "client_credentials" : "",
                    "client_id": (config.environment.name === "Production") ? "7vo4vc9of4siainug2c38td8pm" : "",
                    "scope": (config.environment.name === "Production") ? "api/Generic" : ""
                },
                headers: {
                    "Authorization": auth,
                    "Content-Type": "application/x-www-form-urlencoded",
                    "Accept": "*/*"
                }
            };
            kyc_fetch_request = req_txt;
            let KYC_Status = "VERIFY_FAIL";
            var Client = require('node-rest-client').Client;
            var client = new Client();
            let LM_Data = {
                "KYC_Pan_No": "",
                "KYC_Number": "",
                "KYC_FullName": "",
                "KYC_Ref_No": "",
                "KYC_Redirect_URL": "",
                "KYC_Insurer_ID": objRequest.Insurer_Id,
                "KYC_PB_CRN": objRequest.PB_CRN,
                "KYC_Status": KYC_Status
            };
            if (config.environment.name === "Production") {
                client.post(liberty_token_service, token_args, function (data1, response) {
                    if (data1) {
                        if (data1.hasOwnProperty("access_token") && data1.access_token !== "" && data1.access_token !== null) {
                            token = data1.access_token;
                            try {
                                if (token) {
                                    args.headers.Authorization = token;
                                    var client1 = new Client();
                                    client1.post(liberty_verify_service, args, function (data, response) {
                                        if (data && data.hasOwnProperty('enc_response')) {
                                            let enc_response = data.enc_response !== "" ? data.enc_response : "";
                                            let buff_dec = new Buffer(enc_response, 'base64');
                                            let data_dec = buff_dec.toString('ascii');
                                            data_dec = typeof data_dec === "string" ? JSON.parse(data_dec) : JSON.parse(JSON.stringify(data_dec));
                                            kyc_fetch_response = data_dec;
                                            if (data_dec.hasOwnProperty("KYC_Status") && data_dec.KYC_Status === "1" && data_dec.KYC_Remark === "OK") {
                                                LM_Data['KYC_Number'] = (data_dec.hasOwnProperty("IC_KYC_No")) ? data_dec.IC_KYC_No : "";
                                                LM_Data['KYC_Status'] = "VERIFY_SUCCESS";
                                                LM_Data['KYC_Pan_No'] = (data_dec.hasOwnProperty("ProposerPAN")) ? data_dec.ProposerPAN : objRequest.PAN;
                                                LM_Data['KYC_Ref_No'] = (data_dec.hasOwnProperty("Aggregator_KYC_Req_No")) ? data_dec.Aggregator_KYC_Req_No : "";
//                        objRequest.Quote_Id = LM_Data['KYC_Ref_No'];//future purpose
                                                LM_Data['KYC_FullName'] = (data_dec.hasOwnProperty("FirstName")) ? data_dec.FirstName : "";
                                            } else {
                                                LM_Data['KYC_Status'] = "VERIFY_FAIL";
                                                LM_Data['KYC_Ref_No'] = (data_dec.hasOwnProperty("Aggregator_KYC_Req_No")) ? data_dec.Aggregator_KYC_Req_No : "";
                                                LM_Data['KYC_Redirect_URL'] = data_dec.IC_KYC_REG_URL ? data_dec.IC_KYC_REG_URL : objRequest.KYC_URL;
                                            }

                                            try {
                                                let cond = {
                                                    'Insurer_Id': objRequest.Insurer_Id - 0,
                                                    'PB_CRN': (objRequest.PB_CRN === undefined || objRequest.PB_CRN === "" || objRequest.PB_CRN === null) ? "" : objRequest.PB_CRN - 0
//                                                'User_Data_Id': (ObjRequest.User_Data_Id === undefined || ObjRequest.User_Data_Id === "" || ObjRequest.User_Data_Id === null) ? 0 : ObjRequest.User_Data_Id - 0
                                                };
                                                let setObj = {
                                                    'KYC_Number': LM_Data.KYC_Number,
                                                    'KYC_Full_Name': LM_Data.KYC_FullName,
                                                    'KYC_Status': LM_Data.KYC_Status,
                                                    'Modified_On': new Date(),
                                                    'KYC_URL': LM_Data.KYC_Redirect_URL,
                                                    'KYC_Ref_No': LM_Data.KYC_Ref_No
                                                };
                                                kyc_detail.update(cond, {$set: setObj}, function (err, users) {
                                                    if (err) {
                                                        res.json({"Insurer": "Liberty", "Msg": err, "Status": "FAIL"});
                                                    } else {
                                                        //res.json({"Insurer": "Edelweiss", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                                    }
                                                });
                                                let queryObj1 = {
                                                    'PB_CRN': objRequest.PB_CRN ? objRequest.PB_CRN : "",
                                                    'User_Data_Id': objRequest.User_Data_Id ? objRequest.User_Data_Id : "",
                                                    'Insurer_Id': objRequest.Insurer_Id,
                                                    'Product_Id': objRequest.Product_Id ? objRequest.Product_Id : "",
                                                    'PAN': (objRequest.PAN === undefined || objRequest.PAN === "" || objRequest.PAN === null) ? "" : objRequest.PAN,
                                                    'Aadhar': (objRequest.Aadhaar === undefined || objRequest.Aadhaar === "" || objRequest.Aadhaar === null) ? "" : objRequest.Aadhaar,
                                                    'DOB': (objRequest.DOB === undefined || objRequest.DOB === "" || objRequest.DOB === null) ? "" : objRequest.DOB,
                                                    'Full_Name': objRequest.Proposal_Request['middle_name'] === "" ? (objRequest.Proposal_Request['first_name'] + " " + objRequest.Proposal_Request['last_name']) : (objRequest.Proposal_Request['first_name'] + " " + objRequest.Proposal_Request['middle_name'] + " " + objRequest.Proposal_Request['last_name']),
                                                    'KYC_Full_Name': LM_Data.KYC_FullName,
                                                    'Mobile': (objRequest.Mobile === undefined || objRequest.Mobile === "" || objRequest.Mobile === null) ? "" : objRequest.Mobile - 0,
                                                    'Email': (objRequest.Email === undefined || objRequest.Email === "" || objRequest.Email === null) ? "" : objRequest.Email,
                                                    'KYC_Number': LM_Data.KYC_Number,
                                                    'Search_Type': objRequest.Search_Type ? objRequest.Search_Type : "",
                                                    'KYC_Status': LM_Data.KYC_Status,
                                                    'PAN_Doc': objRequest.PAN_Doc ? objRequest.PAN_Doc : "",
                                                    'Aadhar_Doc': objRequest.Aadhar_Doc ? objRequest.Aadhar_Doc : "",
                                                    'KYC_URL': LM_Data.KYC_Redirect_URL,
                                                    'Created_On': new Date(),
                                                    'Modified_On': new Date(),
                                                    //'Proposal_Request': (objRequest.Proposal_Request === undefined || objRequest.Proposal_Request === "" || objRequest.Proposal_Request === null) ? "" : objRequest.Proposal_Request,
                                                    'Proposal_Id': (objRequest.Proposal_Id === undefined || objRequest.Proposal_Id === "" || objRequest.Proposal_Id === null) ? "" : objRequest.Proposal_Id,
                                                    'Quote_Id': (objRequest.Quote_Id === undefined || objRequest.Quote_Id === "" || objRequest.Quote_Id === null) ? "" : objRequest.Quote_Id,
                                                    'KYC_Request_Core': kyc_fetch_request,
                                                    'KYC_Response_Core': kyc_fetch_response
                                                };
                                                var kyc_history1 = new kyc_history(queryObj1);
                                                kyc_history1.save(queryObj1, function (err, users) {
                                                    if (err) {
                                                        res.json({"Insurer": "Liberty", "Msg": err, "Status": "FAIL"});
                                                    } else {
                                                        //res.json({"Insurer": "Liberty", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                                    }
                                                });
                                            } catch (e) {
                                                res.json({"Insurer": "Liberty", "Msg": e.stack, "Status": "FAIL"});
                                            }
                                            res.json({"Insurer": "Liberty", "Msg": LM_Data, "Status": LM_Data.KYC_Status});
                                        } else {
                                            res.json({"Insurer": "Liberty", "Msg": "KYC fetch services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                                        }
                                    });
                                } else {
                                    res.json({"Insurer": "Liberty", "Msg": "Could Not Generate Token. Please try again later.", "Status": "FAIL"});
                                }
                            } catch (e2) {
                                res.json({"Insurer": "Liberty", "Msg": e2.stack, "Status": "FAIL"});
                            }
                        } else {
                            res.json({"Insurer": "Liberty", "Msg": "KYC-Token not generated. Please try again later.", "Status": "FAIL"});
                        }
                    } else {
                        res.json({"Insurer": "Liberty", "Msg": "KYC-Token generation Live services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                    }
                });
            } else {
                client.post(liberty_verify_service, args, function (data, response) {
                    if (data && data.hasOwnProperty('enc_response')) {
                        let enc_response = data.enc_response !== "" ? data.enc_response : "";
                        let buff_dec = new Buffer(enc_response, 'base64');
                        let data_dec = buff_dec.toString('ascii');
                        data_dec = typeof data_dec === "string" ? JSON.parse(data_dec) : JSON.parse(JSON.stringify(data_dec));
                        kyc_fetch_response = data_dec;
                        if (data_dec.hasOwnProperty("KYC_Status") && data_dec.KYC_Status === "1" && data_dec.KYC_Remark === "OK") {
                            LM_Data['KYC_Number'] = (data_dec.hasOwnProperty("IC_KYC_No")) ? data_dec.IC_KYC_No : "";
                            LM_Data['KYC_Status'] = "VERIFY_SUCCESS";
                            LM_Data['KYC_Pan_No'] = (data_dec.hasOwnProperty("ProposerPAN")) ? data_dec.ProposerPAN : objRequest.PAN;
                            LM_Data['KYC_Ref_No'] = (data_dec.hasOwnProperty("Aggregator_KYC_Req_No")) ? data_dec.Aggregator_KYC_Req_No : "";
//                        objRequest.Quote_Id = LM_Data['KYC_Ref_No'];//future purpose
                            LM_Data['KYC_FullName'] = (data_dec.hasOwnProperty("FirstName")) ? data_dec.FirstName : "";
                        } else {
                            LM_Data['KYC_Status'] = "VERIFY_FAIL";
                            LM_Data['KYC_Ref_No'] = (data_dec.hasOwnProperty("Aggregator_KYC_Req_No")) ? data_dec.Aggregator_KYC_Req_No : "";
                            LM_Data['KYC_Redirect_URL'] = data_dec.IC_KYC_REG_URL ? data_dec.IC_KYC_REG_URL : objRequest.KYC_URL;
                        }

                        try {
                            let cond = {
                                'Insurer_Id': objRequest.Insurer_Id - 0,
                                'PB_CRN': (objRequest.PB_CRN === undefined || objRequest.PB_CRN === "" || objRequest.PB_CRN === null) ? "" : objRequest.PB_CRN - 0
//                                                'User_Data_Id': (ObjRequest.User_Data_Id === undefined || ObjRequest.User_Data_Id === "" || ObjRequest.User_Data_Id === null) ? 0 : ObjRequest.User_Data_Id - 0
                            };
                            let setObj = {
                                'KYC_Number': LM_Data.KYC_Number,
                                'KYC_Full_Name': LM_Data.KYC_FullName,
                                'KYC_Status': LM_Data.KYC_Status,
                                'Modified_On': new Date(),
                                'KYC_URL': LM_Data.KYC_Redirect_URL,
                                'KYC_Ref_No': LM_Data.KYC_Ref_No
                            };
                            kyc_detail.update(cond, {$set: setObj}, function (err, users) {
                                if (err) {
                                    res.json({"Insurer": "Liberty", "Msg": err, "Status": "FAIL"});
                                } else {
                                    //res.json({"Insurer": "Edelweiss", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                }
                            });
                            let queryObj1 = {
                                'PB_CRN': objRequest.PB_CRN ? objRequest.PB_CRN : "",
                                'User_Data_Id': objRequest.User_Data_Id ? objRequest.User_Data_Id : "",
                                'Insurer_Id': objRequest.Insurer_Id,
                                'Product_Id': objRequest.Product_Id ? objRequest.Product_Id : "",
                                'PAN': (objRequest.PAN === undefined || objRequest.PAN === "" || objRequest.PAN === null) ? "" : objRequest.PAN,
                                'Aadhar': (objRequest.Aadhaar === undefined || objRequest.Aadhaar === "" || objRequest.Aadhaar === null) ? "" : objRequest.Aadhaar,
                                'DOB': (objRequest.DOB === undefined || objRequest.DOB === "" || objRequest.DOB === null) ? "" : objRequest.DOB,
                                'Full_Name': objRequest.Proposal_Request['middle_name'] === "" ? (objRequest.Proposal_Request['first_name'] + " " + objRequest.Proposal_Request['last_name']) : (objRequest.Proposal_Request['first_name'] + " " + objRequest.Proposal_Request['middle_name'] + " " + objRequest.Proposal_Request['last_name']),
                                'KYC_Full_Name': LM_Data.KYC_FullName,
                                'Mobile': (objRequest.Mobile === undefined || objRequest.Mobile === "" || objRequest.Mobile === null) ? "" : objRequest.Mobile - 0,
                                'Email': (objRequest.Email === undefined || objRequest.Email === "" || objRequest.Email === null) ? "" : objRequest.Email,
                                'KYC_Number': LM_Data.KYC_Number,
                                'Search_Type': objRequest.Search_Type ? objRequest.Search_Type : "",
                                'KYC_Status': LM_Data.KYC_Status,
                                'PAN_Doc': objRequest.PAN_Doc ? objRequest.PAN_Doc : "",
                                'Aadhar_Doc': objRequest.Aadhar_Doc ? objRequest.Aadhar_Doc : "",
                                'KYC_URL': LM_Data.KYC_Redirect_URL,
                                'Created_On': new Date(),
                                'Modified_On': new Date(),
                                //'Proposal_Request': (objRequest.Proposal_Request === undefined || objRequest.Proposal_Request === "" || objRequest.Proposal_Request === null) ? "" : objRequest.Proposal_Request,
                                'Proposal_Id': (objRequest.Proposal_Id === undefined || objRequest.Proposal_Id === "" || objRequest.Proposal_Id === null) ? "" : objRequest.Proposal_Id,
                                'Quote_Id': (objRequest.Quote_Id === undefined || objRequest.Quote_Id === "" || objRequest.Quote_Id === null) ? "" : objRequest.Quote_Id,
                                'KYC_Request_Core': kyc_fetch_request,
                                'KYC_Response_Core': kyc_fetch_response
                            };
                            var kyc_history1 = new kyc_history(queryObj1);
                            kyc_history1.save(queryObj1, function (err, users) {
                                if (err) {
                                    res.json({"Insurer": "Liberty", "Msg": err, "Status": "FAIL"});
                                } else {
                                    //res.json({"Insurer": "Liberty", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                }
                            });
                        } catch (e) {
                            res.json({"Insurer": "Liberty", "Msg": e.stack, "Status": "FAIL"});
                        }
                        res.json({"Insurer": "Liberty", "Msg": LM_Data, "Status": LM_Data.KYC_Status});
                    } else {
                        res.json({"Insurer": "Liberty", "Msg": "KYC fetch services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                    }
                });
            }
        } catch (e1) {
            res.json({"Insurer": "Liberty", "Msg": e1.stack, "Status": "FAIL"});
        }
    });
    app.post('/kyc_webhook_history/kyc_webhook_history_save', function (req, res) {
        try {
            let ObjRequest = req.body;
            ObjRequest['Modified_On'] = new Date();
            let kyc_webhook_history_save = new kyc_webhook_history(ObjRequest);
            kyc_webhook_history_save.save(function (err, res1) {
                if (err) {
                    res.json({"Msg": err, "Status": "FAIL"});
                } else {
                    res.json({"Msg": res1, "Status": "Success"});
                }
            });
        } catch (ex) {
            console.error('Exception', '/kyc_webhook_history/kyc_webhook_history_save', ex);
            res.json({"Status": "Fail", "Msg": ex.stack});
        }
    });
    app.post('/kyc_details/digit_create_kyc_details', function (req, res) {
        let ObjRequest = req.body;
        /* IMAGE SAVE START */
        let path = appRoot + "/tmp/kyc_documents";
        let doc = [];
        let aadhar_path = '';
        let pan_path = '';
        if (ObjRequest.PAN_Doc) {
            doc.push({'doc_type': 'PAN', 'doc_name': ObjRequest.PAN_Doc_FileName, 'doc_data': ObjRequest.PAN_Doc});
            pan_path = "/tmp/kyc_documents/" + ObjRequest.PB_CRN + "_" + ObjRequest.PAN + "_" + ObjRequest.Insurer_Id + "." + ObjRequest.PAN_Doc_Extension;
        }
        if (ObjRequest.Aadhar_Doc) {
            doc.push({'doc_type': 'Aadhar', 'doc_name': ObjRequest.Aadhar_Doc_FileName, 'doc_data': ObjRequest.Aadhar_Doc});
            aadhar_path = "/tmp/kyc_documents/" + ObjRequest.PB_CRN + "_" + ObjRequest.Aadhar + "_" + ObjRequest.Insurer_Id + "." + ObjRequest.Aadhar_Doc_Extension;
        }
        try {
            for (var i = 0; i < doc.length; i++) {
                var doc_decoded = decodeURIComponent(doc[i]['doc_data']);
                if (!fs.existsSync(appRoot + "/tmp/kyc_documents")) {
                    fs.mkdirSync(appRoot + "/tmp/kyc_documents");
                }
                if (fs.existsSync(path)) {
                    var data = doc_decoded.replace(/^data:image\/\w+;base64,/, "");
                    if (data === "") {
                        res.json({"Insurer": "DIGIT", "Msg": 'Document Unavailable', "Status": "SUCCESS"});
                    } else {
                        var buf = new Buffer(data, 'base64');
                        if (doc[i]['doc_type'] === "PAN") {
                            fs.writeFileSync(appRoot + pan_path, buf);
                        } else {
                            fs.writeFileSync(appRoot + aadhar_path, buf);
                        }
                        res.json({"Insurer": "DIGIT", "Msg": {"KYC_Status": "CREATE_SUCCESS", "Document_Path": pan_path}, "Status": "CREATE_SUCCESS"});
                    }
                }
            }
        } catch (err) {
            res.json({"Insurer": "DIGIT", "Msg": err.stack, "Status": "FAIL"});
        }
        /* IMAGE SAVE END */
    });

    app.post('/kyc_details/digit_fetch_kyc_details', function (req, res) {
        try {
            let ObjRequest = req.body;
            let vehicle_registration_type = (ObjRequest.vehicle_registration_type === undefined || ObjRequest.vehicle_registration_type === "" || ObjRequest.vehicle_registration_type === null) ? "" : ObjRequest.vehicle_registration_type;
            vehicle_registration_type = (vehicle_registration_type === "") ? "" : (vehicle_registration_type === "corporate" ? "C" : "I");
            let policyNumber = '';
            let username = (config.environment.name === "Production") ? 95967257 : 51197558;
            let password = (config.environment.name === "Production") ? "Digit@123$" : "digit123";
            let kyc_fetch_request = "";
            let kyc_fetch_response = "";
            let args = {
                headers: {
                    "Authorization": "Basic " + new Buffer(username + ':' + password).toString('base64')
                }
            };
            let kyc_id = 0;
            let kyc_link = '';
            let KYC_Status = "FETCH_FAIL";
            var Client = require('node-rest-client').Client;
            var client = new Client();
            let LM_Data = {
                "KYC_Pan_No": "",
                "KYC_Number": "",
                "KYC_FullName": "",
                "KYC_Ref_No": "",
                "KYC_Redirect_URL": "",
                "KYC_Insurer_ID": ObjRequest.Insurer_Id,
                "KYC_PB_CRN": ObjRequest.PB_CRN,
                "KYC_Status": KYC_Status,
                "ckyc_remarks": ""
            };
            let kyc_status_url = ((config.environment.name === "Production") ? "https://prod-qnb.godigit.com/digit/base/services/v1/kyc/status?policyNumber=" : "https://preprod-qnb.godigit.com/digit/base/services/v1/kyc/status?policyNumber=") + policyNumber;
            client.get(kyc_status_url, args, function (data, response) {
                if (data) {
                    kyc_fetch_response = data;
                    if (data.hasOwnProperty("kycVerificationStatus") && (data.kycVerificationStatus === "DONE" || data.kycVerificationStatus === "Skip")) {
                        LM_Data.KYC_Status = "FETCH_SUCCESS";
                        kyc_link = (data.hasOwnProperty("link")) ? data.link : "";
                        kyc_id = (data.hasOwnProperty("referenceId")) ? data.referenceId : "";
                        LM_Data.KYC_Number = kyc_id;
                    } else {
                        LM_Data.KYC_Status = "FETCH_FAIL";
                        kyc_link = (data.hasOwnProperty("link")) ? data.link : "";
                        LM_Data.KYC_Redirect_URL = kyc_link;
                        //kyc_id = (data.hasOwnProperty("referenceId")) ? data.referenceId : "";
                        if (data.hasOwnProperty("link") && data.link) {
                            LM_Data.ckyc_remarks = "NA";
                        } else {
                            LM_Data.ckyc_remarks = data;
                        }
                    }
                    try {
                        let cond = {
                            'Insurer_Id': ObjRequest.Insurer_Id - 0,
                            'PB_CRN': (ObjRequest.PB_CRN === undefined || ObjRequest.PB_CRN === "" || ObjRequest.PB_CRN === null) ? "" : ObjRequest.PB_CRN - 0
//                                                'User_Data_Id': (ObjRequest.User_Data_Id === undefined || ObjRequest.User_Data_Id === "" || ObjRequest.User_Data_Id === null) ? 0 : ObjRequest.User_Data_Id - 0
                        };
                        let setObj = {
                            'KYC_Number': LM_Data.KYC_Number,
                            'KYC_Full_Name': LM_Data.KYC_FullName,
                            'KYC_Status': LM_Data.KYC_Status,
                            'Modified_On': new Date(),
                            'KYC_URL': LM_Data.KYC_Redirect_URL
                        };
                        kyc_detail.update(cond, {$set: setObj}, function (err, users) {
                            if (err) {
                                res.json({"Insurer": "Digit", "Msg": err, "Status": "FAIL"});
                            } else {
                                //res.json({"Insurer": "Digit", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                            }
                        });
                        let queryObj1 = {
                            'PB_CRN': ObjRequest.PB_CRN ? ObjRequest.PB_CRN : "",
                            'User_Data_Id': ObjRequest.User_Data_Id ? ObjRequest.User_Data_Id : "",
                            'Insurer_Id': ObjRequest.Insurer_Id,
                            'Product_Id': ObjRequest.Product_Id ? ObjRequest.Product_Id : "",
                            'PAN': (ObjRequest.PAN === undefined || ObjRequest.PAN === "" || ObjRequest.PAN === null) ? "" : ObjRequest.PAN,
                            'Aadhar': (ObjRequest.Aadhaar === undefined || ObjRequest.Aadhaar === "" || ObjRequest.Aadhaar === null) ? "" : ObjRequest.Aadhaar,
                            'DOB': (ObjRequest.DOB === undefined || ObjRequest.DOB === "" || ObjRequest.DOB === null) ? "" : ObjRequest.DOB,
                            'Full_Name': ObjRequest.Proposal_Request['middle_name'] === "" ? (ObjRequest.Proposal_Request['first_name'] + " " + ObjRequest.Proposal_Request['last_name']) : (ObjRequest.Proposal_Request['first_name'] + " " + ObjRequest.Proposal_Request['middle_name'] + " " + ObjRequest.Proposal_Request['last_name']),
                            'KYC_Full_Name': LM_Data.KYC_FullName,
                            'Mobile': (ObjRequest.Mobile === undefined || ObjRequest.Mobile === "" || ObjRequest.Mobile === null) ? "" : ObjRequest.Mobile - 0,
                            'Email': (ObjRequest.Email === undefined || ObjRequest.Email === "" || ObjRequest.Email === null) ? "" : ObjRequest.Email,
                            'KYC_Number': LM_Data.KYC_Number,
                            'Search_Type': ObjRequest.Search_Type ? ObjRequest.Search_Type : "",
                            'KYC_Status': LM_Data.KYC_Status,
                            'PAN_Doc': ObjRequest.PAN_Doc ? ObjRequest.PAN_Doc : "",
                            'Aadhar_Doc': ObjRequest.Aadhar_Doc ? ObjRequest.Aadhar_Doc : "",
                            'KYC_URL': LM_Data.KYC_Redirect_URL,
                            'Created_On': new Date(),
                            'Modified_On': new Date(),
                            //'Proposal_Request': (ObjRequest.Proposal_Request === undefined || ObjRequest.Proposal_Request === "" || ObjRequest.Proposal_Request === null) ? "" : ObjRequest.Proposal_Request,
                            'Proposal_Id': (ObjRequest.Proposal_Id === undefined || ObjRequest.Proposal_Id === "" || ObjRequest.Proposal_Id === null) ? "" : ObjRequest.Proposal_Id,
                            'Quote_Id': (ObjRequest.Quote_Id === undefined || ObjRequest.Quote_Id === "" || ObjRequest.Quote_Id === null) ? "" : ObjRequest.Quote_Id,
                            'KYC_Request_Core': kyc_fetch_request,
                            'KYC_Response_Core': kyc_fetch_response
                        };
                        var kyc_history1 = new kyc_history(queryObj1);
                        kyc_history1.save(queryObj1, function (err, users) {
                            if (err) {
                                res.json({"Insurer": "Digit", "Msg": err, "Status": "FAIL"});
                            } else {
                                //res.json({"Insurer": "Digit", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                            }
                        });
                    } catch (e) {
                        res.json({"Insurer": "Digit", "Msg": e.stack, "Status": "FAIL"});
                    }
                    res.json({"Insurer": "Digit", "Msg": LM_Data, "Status": LM_Data.KYC_Status});
                } else {
                    res.json({"Insurer": "Digit", "Msg": "KYC fetch services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                }
            });

        } catch (e1) {
            res.json({"Insurer": "Digit", "Msg": e1.stack, "Status": "FAIL"});
        }
    });

    app.post('/kyc_details/digit_verify_kyc_details', function (req, res) {
        try {
            let objRequest = req.body;
            let kyc_verify_request = "";
            let kyc_verify_response = "";
            let user_kyc_no = (req.body.user_kyc_no === undefined || req.body.user_kyc_no === "" || req.body.user_kyc_no === null) ? "" : req.body.user_kyc_no;
            var username = ((config.environment.name === 'Production') ? "95967257" : "51197558");
            var password = ((config.environment.name === 'Production') ? "Digit@123$" : "digit123");
            let args = {
                headers: {
                    "Authorization": "Basic " + new Buffer(username + ':' + password).toString('base64')
                }
            };
            let KYC_Status = "VERIFY_FAIL";
            var Client = require('node-rest-client').Client;
            var client = new Client();
            let LM_Data = {
                "KYC_Pan_No": "",
                "KYC_Number": "",
                "KYC_FullName": "",
                "KYC_Ref_No": "",
                "KYC_Redirect_URL": "",
                "KYC_Insurer_ID": objRequest.Insurer_Id,
                "KYC_PB_CRN": objRequest.PB_CRN,
                "KYC_Status": KYC_Status,
                "ckyc_remarks": ""
            };
            //let kyc_verify_url = ((config.environment.name === 'Production') ? "https://prod-qnb.godigit.com/digit/base/services/v1/kyc/status?policyNumber=" : "https://preprod-qnb.godigit.com/digit/base/services/v1/kyc/status?policyNumber=") + user_kyc_no;
            let kyc_verify_url = "https://prod-qnb.godigit.com/digit/base/services/v1/kyc/status?policyNumber=" + user_kyc_no;
            kyc_verify_request = kyc_verify_url;
            //let sleep = require('system-sleep');
            //sleep(3000);
            client.get(kyc_verify_url, args, function (data, response) {
                if (data) {
                    kyc_verify_response = data;
                    if (data.hasOwnProperty("kycVerificationStatus") && (data.kycVerificationStatus === "DONE" || data.kycVerificationStatus === "Skip")) {
                        LM_Data.KYC_Status = "VERIFY_SUCCESS";
                        LM_Data.KYC_Number = data.policyNumber;
                    } else if (data.hasOwnProperty("link") && data.link) {
                        LM_Data.KYC_Status = "VERIFY_FAIL";
                        LM_Data.KYC_Number = data.policyNumber;
                        LM_Data.KYC_Redirect_URL = data.link;
//                        LM_Data.ckyc_remarks = data;
                        if (data.hasOwnProperty("link") && data.link) {
                            LM_Data.ckyc_remarks = "NA";
                        } else {
                            LM_Data.ckyc_remarks = data;
                        }
                    } else {
                        LM_Data.KYC_Status = "VERIFY_FAIL";
                        if (data.hasOwnProperty("link") && data.link) {
                            LM_Data.ckyc_remarks = "NA";
                        } else {
                            LM_Data.ckyc_remarks = data;
                        }
                    }
                    try {
                        let queryObj = {
                            'Search_Type': (objRequest.Verify_Search_Type === undefined || objRequest.Verify_Search_Type === "" || objRequest.Verify_Search_Type === null) ? "" : objRequest.Verify_Search_Type,
                            'KYC_Number': user_kyc_no,
                            'KYC_Status': LM_Data.KYC_Status,
                            'Modified_On': new Date()
                        };
                        let cond = {
                            'Insurer_Id': objRequest.Insurer_Id - 0,
                            'PB_CRN': (objRequest.PB_CRN === undefined || objRequest.PB_CRN === "" || objRequest.PB_CRN === null) ? "" : objRequest.PB_CRN - 0
                        };

                        kyc_detail.update(cond, {$set: queryObj}, function (err, users) {
                            if (err) {
                                res.json({"Insurer": "DIGIT", "Msg": err, "Status": "FAIL"});
                            } else {

                            }
                        });
                        let queryObj1 = {
                            'PB_CRN': objRequest.PB_CRN ? objRequest.PB_CRN : "",
                            'User_Data_Id': objRequest.User_Data_Id ? objRequest.User_Data_Id : "",
                            'Insurer_Id': objRequest.Insurer_Id,
                            'Product_Id': objRequest.Product_Id ? objRequest.Product_Id : "",
                            'PAN': (objRequest.PAN === undefined || objRequest.PAN === "" || objRequest.PAN === null) ? "" : objRequest.PAN,
                            'Aadhar': (objRequest.Aadhaar === undefined || objRequest.Aadhaar === "" || objRequest.Aadhaar === null) ? "" : objRequest.Aadhaar,
                            'DOB': (objRequest.DOB === undefined || objRequest.DOB === "" || objRequest.DOB === null) ? "" : objRequest.DOB,
                            'Full_Name': objRequest.Proposal_Request['middle_name'] === "" ? (objRequest.Proposal_Request['first_name'] + " " + objRequest.Proposal_Request['last_name']) : (objRequest.Proposal_Request['first_name'] + " " + objRequest.Proposal_Request['middle_name'] + " " + objRequest.Proposal_Request['last_name']),
                            'Mobile': (objRequest.Mobile === undefined || objRequest.Mobile === "" || objRequest.Mobile === null) ? "" : objRequest.Mobile - 0,
                            'Email': (objRequest.Email === undefined || objRequest.Email === "" || objRequest.Email === null) ? "" : objRequest.Email,
                            'KYC_Number': LM_Data.KYC_Number,
                            'Search_Type': objRequest.Search_Type ? objRequest.Search_Type : "",
                            'KYC_Status': LM_Data.KYC_Status,
                            'PAN_Doc': objRequest.PAN_Doc ? objRequest.PAN_Doc : "",
                            'Aadhar_Doc': objRequest.Aadhar_Doc ? objRequest.Aadhar_Doc : "",
                            'KYC_URL': LM_Data.KYC_Redirect_URL,
                            'Created_On': new Date(),
                            'Modified_On': new Date(),
                            'Proposal_Id': (objRequest.Proposal_Id === undefined || objRequest.Proposal_Id === "" || objRequest.Proposal_Id === null) ? "" : objRequest.Proposal_Id,
                            'Quote_Id': (objRequest.Quote_Id === undefined || objRequest.Quote_Id === "" || objRequest.Quote_Id === null) ? "" : objRequest.Quote_Id,
                            'KYC_Request_Core': kyc_verify_request,
                            'KYC_Response_Core': kyc_verify_response
                        };
                        var kyc_history1 = new kyc_history(queryObj1);
                        kyc_history1.save(queryObj1, function (err, users) {
                            if (err) {
                                res.json({"Insurer": "DIGIT", "Msg": err, "Status": "FAIL"});
                            } else {

                            }
                        });
                    } catch (e) {
                        res.json({"Insurer": "DIGIT", "Msg": e.stack, "Status": "FAIL"});
                    }
                    res.json({"Insurer": "DIGIT", "Msg": LM_Data, "Status": LM_Data.KYC_Status});
                } else {
                    res.json({"Insurer": "DIGIT", "Msg": "KYC verify services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                }
            });
        } catch (e1) {
            res.json({"Insurer": "DIGIT", "Msg": e1.stack, "Status": "FAIL"});
        }
    });
    
    app.post('/kyc_details/icici_fetch_kyc_details', function (req, res) {
        try {
            let ObjRequest = req.body;
            let kyc_fetch_request = "";
            let kyc_fetch_response = "";
            let args = {
                data: "",
                headers: {
                    "Content-Type": "application/json",
                    "Accept": "*/*",
                    "Authorization": ""
                }
            };
            let args1 = {
                data: {
                    'grant_type': 'password',
                    'username': 'landmark',
                    'password': ((config.environment.name === 'Production') ? 'l@n&M@rk' : 'l@n!m@$k'),
                    'scope': 'esb-kyc',
                    'client_id': 'ro.landmark',
                    'client_secret': ((config.environment.name === 'Production') ? 'ro.l@n&M@rkcL!3nt' : 'ro.l@n!m@$k')
                },
                headers: {
                    "Content-Type": "application/x-www-form-urlencoded"
                }
            };
            function jsonToQueryString(json) {
                return  Object.keys(json).map(function (key) {
                    return encodeURIComponent(key) + '=' +
                            encodeURIComponent(json[key]);
                }).join('&');
            }
            args1.data = jsonToQueryString(args1.data);
            let KYC_Status = "PENDING";
            let token = null;
            var Client = require('node-rest-client').Client;
            var client = new Client();
            let LM_Data = {
                "KYC_Pan_No": "",
                "KYC_Number": "",
                "KYC_FullName": "",
                "KYC_Ref_No": "",
                "KYC_Redirect_URL": "",
                "KYC_Insurer_ID": ObjRequest.Insurer_Id,
                "KYC_PB_CRN": ObjRequest.PB_CRN,
                "KYC_Status": KYC_Status,
                "ckyc_remarks": ""
            };
            let token_url = ((config.environment.name === 'Production') ? 'https://app9.icicilombard.com/Cerberus/connect/token' : 'https://ilesbsanity.insurancearticlez.com/cerberus/connect/token');
            client.post(token_url, args1, function (data1, response1) {
                if (data1) {
                    if (data1.hasOwnProperty("access_token") && data1.access_token !== "" && data1.access_token !== null) {
                        token = data1.access_token;
                        try {
                            if (token) {
                                let decoded = jwt.decode(token, secret, 'RS256');
                                let pbk_temp = decoded['pbk'].replaceAll('\r', '');
                                let pbk_final = pbk_temp.replaceAll('\n', '');
                                let pbk_final1 = pbk_final.replace('-----BEGIN PUBLIC KEY-----', '');
                                let pbk = pbk_final1.replace('-----END PUBLIC KEY-----', '');
                                let temp_pan = (ObjRequest.PAN === undefined || ObjRequest.PAN === "" || ObjRequest.PAN === null) ? "" : ObjRequest.PAN;
                                let temp_dob = (ObjRequest.DOB === undefined || ObjRequest.DOB === "" || ObjRequest.DOB === null) ? "" : moment(ObjRequest.DOB, 'DD/MM/YYYY').format("DD-MM-YYYY");
                                let pan = RSAEncryption(pbk, temp_pan);
                                let dob = RSAEncryption(pbk, temp_dob);
                                let req_txt = {
                                    "correlationId": ObjRequest.Quote_Id,
                                    "certificate_type": ObjRequest.Search_Type ? ObjRequest.Search_Type : "PAN",
                                    "pep_flag": false,
                                    "pan_details": {
                                        "pan": pan,
                                        "dob": dob
                                    }
                                };
                                kyc_fetch_request = req_txt;
                                args.data = req_txt;
                                args.headers.Authorization = 'Bearer ' + token;
                                var client1 = new Client();
                                let kyc_fetch_url = ((config.environment.name === 'Production') ? 'https://online.icicilombard.com/ilservices/customer/v1/kyc/initiate' : 'https://ilesbsanity.insurancearticlez.com/ilservices/ilesb/v1/kyc/initiate');
                                client1.post(kyc_fetch_url, args, function (data, response) {
                                    if (data) {
                                        kyc_fetch_response = data;
                                        if (data.hasOwnProperty("status") && data.status === true && data.hasOwnProperty("statusMessage") && data.statusMessage === "Success" && data.hasOwnProperty("kyc_details") && data.kyc_details) {
                                            if (data['kyc_details'].hasOwnProperty('ckyc_number') && data.kyc_details.ckyc_number) {
                                                LM_Data.KYC_Status = "FETCH_SUCCESS";
                                                LM_Data.KYC_Number = data.kyc_details.ckyc_number;
                                                LM_Data.KYC_Pan_No = data.kyc_details.certificate_number;
                                                LM_Data.KYC_FullName = data.kyc_details['middle_name'] === "" ? (data.kyc_details['first_name'] + " " + data.kyc_details['last_name']) : (data.kyc_details['first_name'] + " " + data.kyc_details['middle_name'] + " " + data.kyc_details['last_name']);
                                                LM_Data.KYC_Ref_No = data.kyc_details.il_kyc_ref_no ? data.kyc_details.il_kyc_ref_no : ObjRequest.PB_CRN;
                                                LM_Data.ckyc_remarks = "NA";
                                            } else {
                                                LM_Data.KYC_Status = "FETCH_FAIL";
                                                LM_Data.KYC_FullName = data.kyc_details['"full_name'];
                                                LM_Data.KYC_Pan_No = data.kyc_details.certificate_number;
                                                LM_Data.KYC_Ref_No = data.kyc_details.il_kyc_ref_no ? data.kyc_details.il_kyc_ref_no : ObjRequest.PB_CRN;
                                                LM_Data.ckyc_remarks = data;
                                            }
                                        } else {
                                            LM_Data.KYC_Status = "FETCH_FAIL";
                                            LM_Data.KYC_Ref_No = ObjRequest.PB_CRN;
                                            LM_Data.ckyc_remarks = data;
                                        }
                                        try {
                                            let cond = {
                                                'Insurer_Id': ObjRequest.Insurer_Id - 0,
                                                'PB_CRN': (ObjRequest.PB_CRN === undefined || ObjRequest.PB_CRN === "" || ObjRequest.PB_CRN === null) ? "" : ObjRequest.PB_CRN - 0
                                            };
                                            let setObj = {
                                                'KYC_Number': LM_Data.KYC_Number,
                                                'KYC_Full_Name': LM_Data.KYC_FullName,
                                                'KYC_Status': LM_Data.KYC_Status,
                                                'Modified_On': new Date(),
                                                'KYC_URL': LM_Data.KYC_Redirect_URL,
                                                'KYC_Ref_No': LM_Data.KYC_Ref_No
                                            };
                                            kyc_detail.update(cond, {$set: setObj}, function (err, users) {
                                                if (err) {
                                                    res.json({"Insurer": "ICICI", "Msg": err, "Status": "FAIL"});
                                                } else {

                                                }
                                            });
                                            let queryObj1 = {
                                                'PB_CRN': ObjRequest.PB_CRN ? ObjRequest.PB_CRN : "",
                                                'User_Data_Id': ObjRequest.User_Data_Id ? ObjRequest.User_Data_Id : "",
                                                'Insurer_Id': ObjRequest.Insurer_Id,
                                                'Product_Id': ObjRequest.Product_Id ? ObjRequest.Product_Id : "",
                                                'PAN': (ObjRequest.PAN === undefined || ObjRequest.PAN === "" || ObjRequest.PAN === null) ? "" : ObjRequest.PAN,
                                                'Aadhar': (ObjRequest.Aadhaar === undefined || ObjRequest.Aadhaar === "" || ObjRequest.Aadhaar === null) ? "" : ObjRequest.Aadhaar,
                                                'DOB': (ObjRequest.DOB === undefined || ObjRequest.DOB === "" || ObjRequest.DOB === null) ? "" : ObjRequest.DOB,
                                                'Full_Name': ObjRequest.Proposal_Request['middle_name'] === "" ? (ObjRequest.Proposal_Request['first_name'] + " " + ObjRequest.Proposal_Request['last_name']) : (ObjRequest.Proposal_Request['first_name'] + " " + ObjRequest.Proposal_Request['middle_name'] + " " + ObjRequest.Proposal_Request['last_name']),
                                                'Mobile': (ObjRequest.Mobile === undefined || ObjRequest.Mobile === "" || ObjRequest.Mobile === null) ? "" : ObjRequest.Mobile - 0,
                                                'Email': (ObjRequest.Email === undefined || ObjRequest.Email === "" || ObjRequest.Email === null) ? "" : ObjRequest.Email,
                                                'KYC_Number': LM_Data.KYC_Number,
                                                'Search_Type': ObjRequest.Search_Type ? ObjRequest.Search_Type : "",
                                                'KYC_Status': LM_Data.KYC_Status,
                                                'PAN_Doc': ObjRequest.PAN_Doc ? ObjRequest.PAN_Doc : "",
                                                'Aadhar_Doc': ObjRequest.Aadhar_Doc ? ObjRequest.Aadhar_Doc : "",
                                                'KYC_URL': LM_Data.KYC_Redirect_URL,
                                                'KYC_Ref_No': LM_Data.KYC_Ref_No,
                                                'Created_On': new Date(),
                                                'Modified_On': new Date(),
                                                'Proposal_Id': (ObjRequest.Proposal_Id === undefined || ObjRequest.Proposal_Id === "" || ObjRequest.Proposal_Id === null) ? "" : ObjRequest.Proposal_Id,
                                                'Quote_Id': (ObjRequest.Quote_Id === undefined || ObjRequest.Quote_Id === "" || ObjRequest.Quote_Id === null) ? "" : ObjRequest.Quote_Id,
                                                'KYC_Request_Core': kyc_fetch_request,
                                                'KYC_Response_Core': kyc_fetch_response
                                            };
                                            var kyc_history1 = new kyc_history(queryObj1);
                                            kyc_history1.save(queryObj1, function (err, users) {
                                                if (err) {
                                                    res.json({"Insurer": "ICICI", "Msg": err, "Status": "FAIL"});
                                                } else {

                                                }
                                            });
                                        } catch (e) {
                                            res.json({"Insurer": "ICICI", "Msg": e.stack, "Status": "FAIL"});
                                        }
                                        res.json({"Insurer": "ICICI", "Msg": LM_Data, "Status": LM_Data.KYC_Status});
                                    } else {
                                        res.json({"Insurer": "ICICI", "Msg": "KYC fetch services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                                    }
                                });
                            } else {
                                res.json({"Insurer": "ICICI", "Msg": "Could Not Generate Token. Please try again later.", "Status": "FAIL"});
                            }
                        } catch (e2) {
                            res.json({"Insurer": "ICICI", "Msg": e2.stack, "Status": "FAIL"});
                        }
                    } else {
                        res.json({"Insurer": "ICICI", "Msg": "KYC-Token not generated. Please try again later.", "Status": "FAIL"});
                    }
                } else {
                    res.json({"Insurer": "ICICI", "Msg": "KYC-Token generation services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                }
            });
        } catch (e1) {
            res.json({"Insurer": "ICICI", "Msg": e1.stack, "Status": "FAIL"});
        }
    });
    app.post('/kyc_details/icici_verify_kyc_details', function (req, res) {
        try {
            let ObjRequest = req.body;
            let kyc_verify_request = "";
            let kyc_verify_response = "";
            var user_kyc_no = (ObjRequest.user_kyc_no === undefined || ObjRequest.user_kyc_no === "" || ObjRequest.user_kyc_no === null) ? "" : ObjRequest.user_kyc_no;
            let args = {
                data: "",
                headers: {
                    "Content-Type": "application/json",
                    "Accept": "*/*",
                    "Authorization": ""
                }
            };
            let args1 = {
                data: {
                    'grant_type': 'password',
                    'username': 'landmark',
                    'password': ((config.environment.name === 'Production') ? 'l@n&M@rk' : 'l@n!m@$k'),
                    'scope': 'esb-kyc',
                    'client_id': 'ro.landmark',
                    'client_secret': ((config.environment.name === 'Production') ? 'ro.l@n&M@rkcL!3nt' : 'ro.l@n!m@$k')
                },
                headers: {
                    "Content-Type": "application/x-www-form-urlencoded"
                }
            };
            function jsonToQueryString(json) {
                return  Object.keys(json).map(function (key) {
                    return encodeURIComponent(key) + '=' +
                            encodeURIComponent(json[key]);
                }).join('&');
            }
            args1.data = jsonToQueryString(args1.data);
            let KYC_Status = "VERIFY_FAIL";
            let token = null;
            var Client = require('node-rest-client').Client;
            var client = new Client();
            let LM_Data = {
                "KYC_Pan_No": "",
                "KYC_Number": "",
                "KYC_FullName": "",
                "KYC_Ref_No": "",
                "KYC_Redirect_URL": "",
                "KYC_Insurer_ID": ObjRequest.Insurer_Id,
                "KYC_PB_CRN": ObjRequest.PB_CRN,
                "KYC_Status": KYC_Status
            };
            let token_url = ((config.environment.name === 'Production') ? 'https://app9.icicilombard.com/Cerberus/connect/token' : 'https://ilesbsanity.insurancearticlez.com/cerberus/connect/token');
            client.post(token_url, args1, function (data1, response1) {
                if (data1) {
                    if (data1.hasOwnProperty("access_token") && data1.access_token !== "" && data1.access_token !== null) {
                        token = data1.access_token;
                        try {
                            if (token) {
                                let decoded = jwt.decode(token, secret, 'RS256');
                                let pbk_temp = decoded['pbk'].replaceAll('\r', '');
                                let pbk_final = pbk_temp.replaceAll('\n', '');
                                let pbk_final1 = pbk_final.replace('-----BEGIN PUBLIC KEY-----', '');
                                let pbk = pbk_final1.replace('-----END PUBLIC KEY-----', '');
                                let temp_dob = (ObjRequest.DOB === undefined || ObjRequest.DOB === "" || ObjRequest.DOB === null) ? "" : moment(ObjRequest.DOB, 'DD/MM/YYYY').format("DD-MM-YYYY");
                                let enc_user_kyc_no = RSAEncryption(pbk, user_kyc_no);
                                let dob = RSAEncryption(pbk, temp_dob);
                                let req_txt = {
                                    "correlationId": ObjRequest.Quote_Id,
                                    "certificate_type": "CKYC",
                                    "pep_flag": false,
                                    "ckyc_details": {
                                        "ckyc_number": enc_user_kyc_no,
                                        "dob": dob
                                    }
                                };
                                kyc_verify_request = req_txt;
                                args.data = req_txt;
                                args.headers.Authorization = 'Bearer ' + token;
                                var client1 = new Client();
                                let kyc_fetch_url = ((config.environment.name === 'Production') ? 'https://online.icicilombard.com/ilservices/customer/v1/kyc/initiate' : 'https://ilesbsanity.insurancearticlez.com/ilservices/ilesb/v1/kyc/initiate');
                                client1.post(kyc_fetch_url, args, function (data, response) {
                                    if (data) {
                                        kyc_verify_response = data;
                                        if (data.hasOwnProperty("status") && data.status === true && data.hasOwnProperty("statusMessage") && data.statusMessage === "Success" && data.hasOwnProperty("kyc_details") && data.kyc_details) {
                                            if (data['kyc_details'].hasOwnProperty('ckyc_number') && data.kyc_details.ckyc_number) {
                                                LM_Data.KYC_Status = "VERIFY_SUCCESS";
                                                LM_Data.KYC_Number = data.kyc_details.ckyc_number;
                                                LM_Data.KYC_Pan_No = data.kyc_details.certificate_number;
                                                LM_Data.KYC_FullName = data.kyc_details['middle_name'] === "" ? (data.kyc_details['first_name'] + " " + data.kyc_details['last_name']) : (data.kyc_details['first_name'] + " " + data.kyc_details['middle_name'] + " " + data.kyc_details['last_name']);
                                                LM_Data.KYC_Ref_No = data.kyc_details.il_kyc_ref_no ? data.kyc_details.il_kyc_ref_no : ObjRequest.PB_CRN;
                                                LM_Data.ckyc_remarks = "NA";
                                            } else {
                                                LM_Data.KYC_Status = "VERIFY_FAIL";
                                                LM_Data.KYC_FullName = data.kyc_details['"full_name'];
                                                LM_Data.KYC_Pan_No = data.kyc_details.certificate_number;
                                                LM_Data.KYC_Ref_No = data.kyc_details.il_kyc_ref_no ? data.kyc_details.il_kyc_ref_no : ObjRequest.PB_CRN;
                                                LM_Data.ckyc_remarks = data;
                                            }
                                        } else {
                                            LM_Data.KYC_Status = "VERIFY_FAIL";
                                            LM_Data.KYC_Ref_No = ObjRequest.PB_CRN;
                                            LM_Data.ckyc_remarks = data;
                                        }
                                        try {
                                            let queryObj = {
                                                'Search_Type': (ObjRequest.Verify_Search_Type === undefined || ObjRequest.Verify_Search_Type === "" || ObjRequest.Verify_Search_Type === null) ? "" : ObjRequest.Verify_Search_Type,
                                                'KYC_Number': user_kyc_no,
                                                'KYC_Status': LM_Data.KYC_Status,
                                                'KYC_Ref_No': LM_Data.KYC_Ref_No,
                                                'Modified_On': new Date()
                                            };
                                            let cond = {
                                                'Insurer_Id': ObjRequest.Insurer_Id - 0,
                                                'PB_CRN': (ObjRequest.PB_CRN === undefined || ObjRequest.PB_CRN === "" || ObjRequest.PB_CRN === null) ? "" : ObjRequest.PB_CRN - 0
                                            };
                                            kyc_detail.update(cond, {$set: queryObj}, function (err, users) {
                                                if (err) {
                                                    res.json({"Insurer": "ICICI", "Msg": err, "Status": "FAIL"});
                                                } else {

                                                }
                                            });
                                            let queryObj1 = {
                                                'PB_CRN': ObjRequest.PB_CRN ? ObjRequest.PB_CRN : "",
                                                'User_Data_Id': ObjRequest.User_Data_Id ? ObjRequest.User_Data_Id : "",
                                                'Insurer_Id': ObjRequest.Insurer_Id,
                                                'Product_Id': ObjRequest.Product_Id ? ObjRequest.Product_Id : "",
                                                'PAN': (ObjRequest.PAN === undefined || ObjRequest.PAN === "" || ObjRequest.PAN === null) ? "" : ObjRequest.PAN,
                                                'Aadhar': (ObjRequest.Aadhaar === undefined || ObjRequest.Aadhaar === "" || ObjRequest.Aadhaar === null) ? "" : ObjRequest.Aadhaar,
                                                'DOB': (ObjRequest.DOB === undefined || ObjRequest.DOB === "" || ObjRequest.DOB === null) ? "" : ObjRequest.DOB,
                                                'Full_Name': ObjRequest.Proposal_Request['middle_name'] === "" ? (ObjRequest.Proposal_Request['first_name'] + " " + ObjRequest.Proposal_Request['last_name']) : (ObjRequest.Proposal_Request['first_name'] + " " + ObjRequest.Proposal_Request['middle_name'] + " " + ObjRequest.Proposal_Request['last_name']),
                                                'Mobile': (ObjRequest.Mobile === undefined || ObjRequest.Mobile === "" || ObjRequest.Mobile === null) ? "" : ObjRequest.Mobile - 0,
                                                'Email': (ObjRequest.Email === undefined || ObjRequest.Email === "" || ObjRequest.Email === null) ? "" : ObjRequest.Email,
                                                'KYC_Number': LM_Data.KYC_Number,
                                                'Search_Type': ObjRequest.Search_Type ? ObjRequest.Search_Type : "",
                                                'KYC_Status': LM_Data.KYC_Status,
                                                'PAN_Doc': ObjRequest.PAN_Doc ? ObjRequest.PAN_Doc : "",
                                                'Aadhar_Doc': ObjRequest.Aadhar_Doc ? ObjRequest.Aadhar_Doc : "",
                                                'KYC_URL': LM_Data.KYC_Redirect_URL,
                                                'KYC_Ref_No': LM_Data.KYC_Ref_No,
                                                'Created_On': new Date(),
                                                'Modified_On': new Date(),
                                                'Proposal_Id': (ObjRequest.Proposal_Id === undefined || ObjRequest.Proposal_Id === "" || ObjRequest.Proposal_Id === null) ? "" : ObjRequest.Proposal_Id,
                                                'Quote_Id': (ObjRequest.Quote_Id === undefined || ObjRequest.Quote_Id === "" || ObjRequest.Quote_Id === null) ? "" : ObjRequest.Quote_Id,
                                                'KYC_Request_Core': kyc_verify_request,
                                                'KYC_Response_Core': kyc_verify_response
                                            };
                                            var kyc_history1 = new kyc_history(queryObj1);
                                            kyc_history1.save(queryObj1, function (err, users) {
                                                if (err) {
                                                    res.json({"Insurer": "ICICI", "Msg": err, "Status": "FAIL"});
                                                } else {
                                                    //res.json({"Insurer": "ICICI", "Msg": LM_Data.tmp_Obj, "Status": KYC_Status});
                                                }
                                            });
                                        } catch (e) {
                                            res.json({"Insurer": "ICICI", "Msg": e.stack, "Status": "FAIL"});
                                        }
                                        res.json({"Insurer": "ICICI", "Msg": LM_Data, "Status": LM_Data.KYC_Status});
                                    } else {
                                        res.json({"Insurer": "ICICI", "Msg": "KYC fetch services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                                    }
                                });
                            } else {
                                res.json({"Insurer": "ICICI", "Msg": "Could Not Generate Token. Please try again later.", "Status": "FAIL"});
                            }
                        } catch (e2) {
                            res.json({"Insurer": "ICICI", "Msg": e2.stack, "Status": "FAIL"});
                        }
                    } else {
                        res.json({"Insurer": "ICICI", "Msg": "KYC-Token not generated. Please try again later.", "Status": "FAIL"});
                    }
                } else {
                    res.json({"Insurer": "ICICI", "Msg": "KYC-Token generation services failed due to technical issue. Please try again later.", "Status": "FAIL"});
                }
            });
        } catch (e1) {
            res.json({"Insurer": "ICICI", "Msg": e1.stack, "Status": "FAIL"});
        }
    });
    app.get('/kyc_details/get_kyc_details', function (req, res) {
        try {
            let crn = req.query.crn ? parseInt(req.query.crn) : "";
            kyc_detail.find({"PB_CRN": crn}, function (err, dbData) {
                if (err) {
                    res.json({"Status": "Fail"});
                } else {
                    res.json({"Status": "Success", "Data": dbData});
                }
            });
        } catch (ex) {
            res.json({"Status": "Fail", "Msg": ex.stack});
        }
    });

    app.get('/kyc_details/get_kyc_history', function (req, res) {
        try {
            let crn = req.query.crn ? parseInt(req.query.crn) : "";
            kyc_history.find({"PB_CRN": crn}).sort({Created_On: -1}).exec(function (err, dbData) {
                if (err) {
                    res.json({"Status": "Fail"});
                } else {
                    if (dbData) {
                        res.json({"Status": "Success", "Data": dbData});
                    } else {
                        res.json({"Status": "Fail", Msg: "No Data Available"});
                    }
                }
            });
        } catch (ex) {
            res.json({"Status": "Fail", "Msg": ex.stack});
        }
    });
    function RSAEncryption(token, encrypted_data) {
        let key = new NodeRSA();
        key.setOptions({
            encryptionScheme: "pkcs1"
        });
        key.importKey(token, "pkcs8-public");
        const encrypted = key.encrypt(encrypted_data, "base64");
        return encrypted;
    }
};

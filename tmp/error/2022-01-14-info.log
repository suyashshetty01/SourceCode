{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"9:57:43 AM"}
{"meta":"","level":"info","message":"","timestamp":"9:57:43 AM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"9:57:43 AM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"9:57:43 AM"}
{"meta":"","level":"info","message":"","timestamp":"9:57:43 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"9:57:43 AM"}
{"meta":"","level":"info","message":"","timestamp":"9:57:43 AM"}
{"level":"info","message":"user_detailsInsert null { result: { ok: 1, n: 1 },\n  ops: \n   [ { Ticket_Id: 692,\n       Ticket_code: 'CAEN3718',\n       Product: 1,\n       Category: 'Endorsement',\n       SubCategory: 'No Claim Bonus',\n       From: 'Ravi Ranjan Pandey(115414)',\n       To: 'Ravi Ranjan Pandey(115414)',\n       Status: 'Open',\n       Created_By: 'Ravi Ranjan Pandey',\n       Created_On: 2022-01-14T04:47:31.836Z,\n       Modified_By: 107890,\n       Modified_On: 2022-01-14T04:47:31.836Z,\n       CRN: '1052312',\n       Mobile_No: '9879843658',\n       Vehicle_No: 'MH-02-AA-1234',\n       Remark: 'TESTING',\n       ss_id: 107890,\n       CRN_owner: '0',\n       fba_id: 86010,\n       CRN_fba_id: '0',\n       channel: 'DIRECT',\n       subchannel: 'DIRECT',\n       Agent_Email_Id: 'ravi.pandey@policyboss.com',\n       Transaction_On: '2022-01-14T04:30:40.113Z',\n       Source: 'horizon',\n       RM_Email_Id: '',\n       RM_Agent_Name: 'POLICY BOSS WEBSITE',\n       Insurer_Id: 9,\n       _id: 61e10064a0b1670b944fcecd } ],\n  insertedCount: 1,\n  insertedIds: [ 61e10064a0b1670b944fcecd ] }","timestamp":"10:17:32 AM"}
{"level":"info","message":"digit_endorsment starts","timestamp":"10:21:49 AM"}
{"level":"info","message":"IncomingMessage {\n  _readableState: \n   ReadableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     buffer: BufferList { head: null, tail: null, length: 0 },\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: true,\n     ended: true,\n     endEmitted: true,\n     reading: false,\n     sync: false,\n     needReadable: false,\n     emittedReadable: false,\n     readableListening: false,\n     resumeScheduled: false,\n     defaultEncoding: 'utf8',\n     ranOut: false,\n     awaitDrain: 0,\n     readingMore: false,\n     decoder: null,\n     encoding: null },\n  readable: false,\n  domain: null,\n  _events: {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 370,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 2,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 2,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 3440,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Circular],\n        _idleStart: 1406405,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: null,\n        _peername: [Object] },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Object],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 1484884,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 52061 } },\n  connection: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 370,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 2,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 2,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 3440,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Circular],\n        _idleStart: 1406405,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: null,\n        _peername: [Object] },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Object],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 1484884,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 52061 } },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  headers: \n   { authorization: 'OWPNXSTG8TCBFQMB7G0BW3NQR4QT1W55',\n     'content-type': 'application/json',\n     'user-agent': 'PostmanRuntime/7.26.8',\n     accept: '*/*',\n     'cache-control': 'no-cache',\n     'postman-token': '671d4224-9ce1-4ef4-aa1e-5c238e5509bf',\n     host: 'localhost:3000',\n     'accept-encoding': 'gzip, deflate, br',\n     connection: 'keep-alive',\n     'content-length': '26' },\n  rawHeaders: \n   [ 'Authorization',\n     'OWPNXSTG8TCBFQMB7G0BW3NQR4QT1W55',\n     'Content-Type',\n     'application/json',\n     'User-Agent',\n     'PostmanRuntime/7.26.8',\n     'Accept',\n     '*/*',\n     'Cache-Control',\n     'no-cache',\n     'Postman-Token',\n     '671d4224-9ce1-4ef4-aa1e-5c238e5509bf',\n     'Host',\n     'localhost:3000',\n     'Accept-Encoding',\n     'gzip, deflate, br',\n     'Connection',\n     'keep-alive',\n     'Content-Length',\n     '26' ],\n  trailers: {},\n  rawTrailers: [],\n  upgrade: false,\n  url: '/digit_endorsment',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 370,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 2,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 2,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 3440,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Circular],\n        _idleStart: 1406405,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: null,\n        _peername: [Object] },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Object],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 1484884,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 52061 } },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '',\n  originalUrl: '/digit_endorsment',\n  _parsedUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  params: {},\n  query: {},\n  res: \n   ServerResponse {\n     domain: null,\n     _events: { finish: [Object], end: [Function: onevent] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     output: [],\n     outputEncodings: [],\n     outputCallbacks: [],\n     outputSize: 0,\n     writable: true,\n     _last: false,\n     upgrading: false,\n     chunkedEncoding: false,\n     shouldKeepAlive: true,\n     useChunkedEncodingByDefault: true,\n     sendDate: true,\n     _removedHeader: {},\n     _contentLength: null,\n     _hasBody: true,\n     _trailer: '',\n     finished: false,\n     _headerSent: false,\n     socket: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 1484884,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     connection: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 1484884,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     _header: null,\n     _headers: \n      { 'x-powered-by': 'Express',\n        'access-control-allow-credentials': 'true',\n        'access-control-allow-headers': 'X-Requested-With, Content-Type',\n        'access-control-allow-origin': '*' },\n     _headerNames: \n      { 'x-powered-by': 'X-Powered-By',\n        'access-control-allow-credentials': 'Access-Control-Allow-Credentials',\n        'access-control-allow-headers': 'Access-Control-Allow-Headers',\n        'access-control-allow-origin': 'Access-Control-Allow-Origin' },\n     _onPendingData: [Function: updateOutgoingData],\n     req: [Circular],\n     locals: {},\n     writeHead: [Function: writeHead],\n     end: [Function: end],\n     _startAt: undefined,\n     _startTime: undefined,\n     __onFinished: { [Function: listener] queue: [Object] } },\n  _parsedOriginalUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  sessionStore: \n   MemoryStore {\n     domain: null,\n     _events: \n      { disconnect: [Function: ondisconnect],\n        connect: [Function: onconnect] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     sessions: \n      { QTqBCdgqFeAQ0r9fTZcbx75cJbQCos6S: '{\"cookie\":{\"originalMaxAge\":600000,\"expires\":\"2022-01-14T04:41:50.357Z\",\"httpOnly\":true,\"path\":\"/\"}}',\n        lub__muDUMufZDaRgF1jgiHWZhrxeP7s: '{\"cookie\":{\"originalMaxAge\":600000,\"expires\":\"2022-01-14T04:44:13.583Z\",\"httpOnly\":true,\"path\":\"/\"}}',\n        R37u92X8bRpbl2oLakFLdI4DeZN1DzzC: '{\"cookie\":{\"originalMaxAge\":600000,\"expires\":\"2022-01-14T04:44:18.169Z\",\"httpOnly\":true,\"path\":\"/\"}}',\n        'RRGWaikrGG0o0Q-Rn6fU1XvQKjZJc2OL': '{\"cookie\":{\"originalMaxAge\":600000,\"expires\":\"2022-01-14T04:57:02.748Z\",\"httpOnly\":true,\"path\":\"/\"}}',\n        '9deLoASTzymhVzP2356E-1S8_zIbO_qg': '{\"cookie\":{\"originalMaxAge\":600000,\"expires\":\"2022-01-14T04:57:10.923Z\",\"httpOnly\":true,\"path\":\"/\"}}',\n        '2NO47ByYbttdnBolBoEDIqwWNRK6v8me': '{\"cookie\":{\"originalMaxAge\":600000,\"expires\":\"2022-01-14T04:57:11.246Z\",\"httpOnly\":true,\"path\":\"/\"}}',\n        ABCz8ze5skuuDyYCJTPG9XMxCG0KgyLs: '{\"cookie\":{\"originalMaxAge\":600000,\"expires\":\"2022-01-14T04:59:30.364Z\",\"httpOnly\":true,\"path\":\"/\"}}',\n        UkkoObg9qc8XIg8IwgaTCyx4BvjUo5Ny: '{\"cookie\":{\"originalMaxAge\":600000,\"expires\":\"2022-01-14T04:59:51.624Z\",\"httpOnly\":true,\"path\":\"/\"}}',\n        'pgi-7drQPlqX6pEVCpT75FF7CaYOWd4f': '{\"cookie\":{\"originalMaxAge\":600000,\"expires\":\"2022-01-14T04:59:54.859Z\",\"httpOnly\":true,\"path\":\"/\"}}',\n        'uyqsw9_Pl-tDzIHEDX-YnF2qcbONgDXp': '{\"cookie\":{\"originalMaxAge\":600000,\"expires\":\"2022-01-14T05:00:06.411Z\",\"httpOnly\":true,\"path\":\"/\"}}',\n        wjJl0ZpQsXBFCfjHsAPz7xLxC063TfYd: '{\"cookie\":{\"originalMaxAge\":600000,\"expires\":\"2022-01-14T05:00:06.738Z\",\"httpOnly\":true,\"path\":\"/\"}}',\n        hE0ybXMx6sEpRJr7OuRUL3haevtEZ5qL: '{\"cookie\":{\"originalMaxAge\":600000,\"expires\":\"2022-01-14T05:00:23.292Z\",\"httpOnly\":true,\"path\":\"/\"}}',\n        W7U50RSJW40IOBNo_BuWcj8cbzIv8Qoo: '{\"cookie\":{\"originalMaxAge\":600000,\"expires\":\"2022-01-14T05:00:26.424Z\",\"httpOnly\":true,\"path\":\"/\"}}' },\n     generate: [Function] },\n  sessionID: 'uGl29hUiZaxcc46nrNbJLEgtZZlQVA7X',\n  session: \n   Session {\n     cookie: \n      { path: '/',\n        _expires: 2022-01-14T05:01:44.903Z,\n        originalMaxAge: 600000,\n        httpOnly: true } },\n  body: { PB_CRN: 1052312 },\n  _body: true,\n  length: undefined,\n  read: [Function],\n  route: \n   Route {\n     path: '/digit_endorsment',\n     stack: [ [Object] ],\n     methods: { post: true } },\n  _startAt: [ 83326, 59518700 ],\n  _startTime: 2022-01-14T04:51:44.905Z,\n  _remoteAddress: '::1',\n  secret: undefined,\n  cookies: {},\n  signedCookies: {} }","timestamp":"10:21:49 AM"}
{"level":"info","message":"{ person: \n   [ { individual: [Object],\n       identificationDocuments: [Object],\n       communications: [Object],\n       address: [Object] } ],\n  nominee: \n   { firstName: '___firstName___',\n     lastName: '___lastName___',\n     dateOfBirth: '___dateOfBirth___',\n     relation: '___relation___' },\n  financer: '___financer___' }","timestamp":"10:21:56 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"10:24:15 AM"}
{"meta":"","level":"info","message":"","timestamp":"10:24:15 AM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"10:24:15 AM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"10:24:15 AM"}
{"meta":"","level":"info","message":"","timestamp":"10:24:15 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"10:24:15 AM"}
{"meta":"","level":"info","message":"","timestamp":"10:24:15 AM"}
{"level":"info","message":"digit_endorsment starts","timestamp":"10:30:49 AM"}
{"level":"info","message":"IncomingMessage {\n  _readableState: \n   ReadableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     buffer: BufferList { head: null, tail: null, length: 0 },\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: true,\n     ended: true,\n     endEmitted: true,\n     reading: false,\n     sync: false,\n     needReadable: false,\n     emittedReadable: false,\n     readableListening: false,\n     resumeScheduled: false,\n     defaultEncoding: 'utf8',\n     ranOut: false,\n     awaitDrain: 0,\n     readingMore: false,\n     decoder: null,\n     encoding: null },\n  readable: false,\n  domain: null,\n  _events: {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 370,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 432031,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 52186 } },\n  connection: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 370,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 432031,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 52186 } },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  headers: \n   { authorization: 'OWPNXSTG8TCBFQMB7G0BW3NQR4QT1W55',\n     'content-type': 'application/json',\n     'user-agent': 'PostmanRuntime/7.26.8',\n     accept: '*/*',\n     'cache-control': 'no-cache',\n     'postman-token': '88657f2b-b371-470c-bc00-1e7d52bf7ebe',\n     host: 'localhost:3000',\n     'accept-encoding': 'gzip, deflate, br',\n     connection: 'keep-alive',\n     'content-length': '26' },\n  rawHeaders: \n   [ 'Authorization',\n     'OWPNXSTG8TCBFQMB7G0BW3NQR4QT1W55',\n     'Content-Type',\n     'application/json',\n     'User-Agent',\n     'PostmanRuntime/7.26.8',\n     'Accept',\n     '*/*',\n     'Cache-Control',\n     'no-cache',\n     'Postman-Token',\n     '88657f2b-b371-470c-bc00-1e7d52bf7ebe',\n     'Host',\n     'localhost:3000',\n     'Accept-Encoding',\n     'gzip, deflate, br',\n     'Connection',\n     'keep-alive',\n     'Content-Length',\n     '26' ],\n  trailers: {},\n  rawTrailers: [],\n  upgrade: false,\n  url: '/digit_endorsment',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 370,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 432031,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 52186 } },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '',\n  originalUrl: '/digit_endorsment',\n  _parsedUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  params: {},\n  query: {},\n  res: \n   ServerResponse {\n     domain: null,\n     _events: { finish: [Object], end: [Function: onevent] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     output: [],\n     outputEncodings: [],\n     outputCallbacks: [],\n     outputSize: 0,\n     writable: true,\n     _last: false,\n     upgrading: false,\n     chunkedEncoding: false,\n     shouldKeepAlive: true,\n     useChunkedEncodingByDefault: true,\n     sendDate: true,\n     _removedHeader: {},\n     _contentLength: null,\n     _hasBody: true,\n     _trailer: '',\n     finished: false,\n     _headerSent: false,\n     socket: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 432031,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     connection: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 432031,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     _header: null,\n     _headers: \n      { 'x-powered-by': 'Express',\n        'access-control-allow-credentials': 'true',\n        'access-control-allow-headers': 'X-Requested-With, Content-Type',\n        'access-control-allow-origin': '*' },\n     _headerNames: \n      { 'x-powered-by': 'X-Powered-By',\n        'access-control-allow-credentials': 'Access-Control-Allow-Credentials',\n        'access-control-allow-headers': 'Access-Control-Allow-Headers',\n        'access-control-allow-origin': 'Access-Control-Allow-Origin' },\n     _onPendingData: [Function: updateOutgoingData],\n     req: [Circular],\n     locals: {},\n     writeHead: [Function: writeHead],\n     end: [Function: end],\n     _startAt: undefined,\n     _startTime: undefined,\n     __onFinished: { [Function: listener] queue: [Object] } },\n  _parsedOriginalUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  sessionStore: \n   MemoryStore {\n     domain: null,\n     _events: \n      { disconnect: [Function: ondisconnect],\n        connect: [Function: onconnect] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     sessions: {},\n     generate: [Function] },\n  sessionID: 'j_dHLbesRgkDDQCR6_HO5wY58plByLx0',\n  session: \n   Session {\n     cookie: \n      { path: '/',\n        _expires: 2022-01-14T05:10:47.758Z,\n        originalMaxAge: 600000,\n        httpOnly: true } },\n  body: { PB_CRN: 1052314 },\n  _body: true,\n  length: undefined,\n  read: [Function],\n  route: \n   Route {\n     path: '/digit_endorsment',\n     stack: [ [Object] ],\n     methods: { post: true } },\n  _startAt: [ 83868, 942734700 ],\n  _startTime: 2022-01-14T05:00:47.788Z,\n  _remoteAddress: '::1',\n  secret: undefined,\n  cookies: {},\n  signedCookies: {} }","timestamp":"10:30:50 AM"}
{"level":"info","message":"{ person: \n   [ { individual: [Object],\n       identificationDocuments: [Object],\n       communications: [Object],\n       address: [Object] } ],\n  nominee: \n   { firstName: '___firstName___',\n     lastName: '___lastName___',\n     dateOfBirth: '___dateOfBirth___',\n     relation: '___relation___' },\n  financer: '___financer___' }","timestamp":"10:31:10 AM"}
{"level":"info","message":"[object Object]","timestamp":"10:33:54 AM"}
{"level":"info","message":"{ status: 'Amendment is not successful, internal server error' }","timestamp":"10:33:54 AM"}
{"level":"info","message":"digit_endorsment starts","timestamp":"10:34:14 AM"}
{"level":"info","message":"IncomingMessage {\n  _readableState: \n   ReadableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     buffer: BufferList { head: null, tail: null, length: 0 },\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: true,\n     ended: true,\n     endEmitted: true,\n     reading: false,\n     sync: false,\n     needReadable: false,\n     emittedReadable: false,\n     readableListening: false,\n     resumeScheduled: false,\n     defaultEncoding: 'utf8',\n     ranOut: false,\n     awaitDrain: 0,\n     readingMore: false,\n     decoder: null,\n     encoding: null },\n  readable: false,\n  domain: null,\n  _events: {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 370,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 632694,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 52200 } },\n  connection: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 370,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 632694,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 52200 } },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  headers: \n   { authorization: 'OWPNXSTG8TCBFQMB7G0BW3NQR4QT1W55',\n     'content-type': 'application/json',\n     'user-agent': 'PostmanRuntime/7.26.8',\n     accept: '*/*',\n     'cache-control': 'no-cache',\n     'postman-token': 'e64da4a3-655e-40c5-bb24-07bb344a8260',\n     host: 'localhost:3000',\n     'accept-encoding': 'gzip, deflate, br',\n     connection: 'keep-alive',\n     'content-length': '26' },\n  rawHeaders: \n   [ 'Authorization',\n     'OWPNXSTG8TCBFQMB7G0BW3NQR4QT1W55',\n     'Content-Type',\n     'application/json',\n     'User-Agent',\n     'PostmanRuntime/7.26.8',\n     'Accept',\n     '*/*',\n     'Cache-Control',\n     'no-cache',\n     'Postman-Token',\n     'e64da4a3-655e-40c5-bb24-07bb344a8260',\n     'Host',\n     'localhost:3000',\n     'Accept-Encoding',\n     'gzip, deflate, br',\n     'Connection',\n     'keep-alive',\n     'Content-Length',\n     '26' ],\n  trailers: {},\n  rawTrailers: [],\n  upgrade: false,\n  url: '/digit_endorsment',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 370,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 632694,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 52200 } },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '',\n  originalUrl: '/digit_endorsment',\n  _parsedUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  params: {},\n  query: {},\n  res: \n   ServerResponse {\n     domain: null,\n     _events: { finish: [Object], end: [Function: onevent] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     output: [],\n     outputEncodings: [],\n     outputCallbacks: [],\n     outputSize: 0,\n     writable: true,\n     _last: false,\n     upgrading: false,\n     chunkedEncoding: false,\n     shouldKeepAlive: true,\n     useChunkedEncodingByDefault: true,\n     sendDate: true,\n     _removedHeader: {},\n     _contentLength: null,\n     _hasBody: true,\n     _trailer: '',\n     finished: false,\n     _headerSent: false,\n     socket: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 632694,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     connection: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 632694,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     _header: null,\n     _headers: \n      { 'x-powered-by': 'Express',\n        'access-control-allow-credentials': 'true',\n        'access-control-allow-headers': 'X-Requested-With, Content-Type',\n        'access-control-allow-origin': '*' },\n     _headerNames: \n      { 'x-powered-by': 'X-Powered-By',\n        'access-control-allow-credentials': 'Access-Control-Allow-Credentials',\n        'access-control-allow-headers': 'Access-Control-Allow-Headers',\n        'access-control-allow-origin': 'Access-Control-Allow-Origin' },\n     _onPendingData: [Function: updateOutgoingData],\n     req: [Circular],\n     locals: {},\n     writeHead: [Function: writeHead],\n     end: [Function: end],\n     _startAt: undefined,\n     _startTime: undefined,\n     __onFinished: { [Function: listener] queue: [Object] } },\n  _parsedOriginalUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  sessionStore: \n   MemoryStore {\n     domain: null,\n     _events: \n      { disconnect: [Function: ondisconnect],\n        connect: [Function: onconnect] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     sessions: { j_dHLbesRgkDDQCR6_HO5wY58plByLx0: '{\"cookie\":{\"originalMaxAge\":600000,\"expires\":\"2022-01-14T05:13:54.279Z\",\"httpOnly\":true,\"path\":\"/\"}}' },\n     generate: [Function] },\n  sessionID: 'eurvauvnfRiwE-SgARlYmXas4lAF0Hkg',\n  session: \n   Session {\n     cookie: \n      { path: '/',\n        _expires: 2022-01-14T05:14:08.437Z,\n        originalMaxAge: 600000,\n        httpOnly: true } },\n  body: { PB_CRN: 1052314 },\n  _body: true,\n  length: undefined,\n  read: [Function],\n  route: \n   Route {\n     path: '/digit_endorsment',\n     stack: [ [Object] ],\n     methods: { post: true } },\n  _startAt: [ 84069, 608379100 ],\n  _startTime: 2022-01-14T05:04:08.454Z,\n  _remoteAddress: '::1',\n  secret: undefined,\n  cookies: {},\n  signedCookies: {} }","timestamp":"10:34:14 AM"}
{"level":"info","message":"{ person: \n   [ { individual: [Object],\n       identificationDocuments: [Object],\n       communications: [Object],\n       address: [Object] } ],\n  nominee: \n   { firstName: '___firstName___',\n     lastName: '___lastName___',\n     dateOfBirth: '___dateOfBirth___',\n     relation: '___relation___' },\n  financer: '___financer___' }","timestamp":"10:34:25 AM"}
{"level":"info","message":"[object Object]","timestamp":"10:34:28 AM"}
{"level":"info","message":"{ status: 'Amendment is not successful, internal server error' }","timestamp":"10:34:29 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"10:36:19 AM"}
{"meta":"","level":"info","message":"","timestamp":"10:36:19 AM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"10:36:19 AM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"10:36:19 AM"}
{"meta":"","level":"info","message":"","timestamp":"10:36:19 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"10:36:19 AM"}
{"meta":"","level":"info","message":"","timestamp":"10:36:19 AM"}
{"level":"info","message":"digit_endorsment starts","timestamp":"10:36:29 AM"}
{"level":"info","message":"IncomingMessage {\n  _readableState: \n   ReadableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     buffer: BufferList { head: null, tail: null, length: 0 },\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: true,\n     ended: true,\n     endEmitted: true,\n     reading: false,\n     sync: true,\n     needReadable: false,\n     emittedReadable: false,\n     readableListening: false,\n     resumeScheduled: false,\n     defaultEncoding: 'utf8',\n     ranOut: false,\n     awaitDrain: 0,\n     readingMore: false,\n     decoder: null,\n     encoding: null },\n  readable: false,\n  domain: null,\n  _events: {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 472,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 49316,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 52253 } },\n  connection: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 472,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 49316,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 52253 } },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  headers: \n   { authorization: 'OWPNXSTG8TCBFQMB7G0BW3NQR4QT1W55',\n     'content-type': 'application/json',\n     'user-agent': 'PostmanRuntime/7.26.8',\n     accept: '*/*',\n     'cache-control': 'no-cache',\n     'postman-token': 'ea1b54b5-be0c-404a-94c9-ed3df12bab37',\n     host: 'localhost:3000',\n     'accept-encoding': 'gzip, deflate, br',\n     connection: 'keep-alive',\n     'content-length': '26',\n     cookie: 'connect.sid=s%3AeurvauvnfRiwE-SgARlYmXas4lAF0Hkg.idKqUrXd2pvr1NYlS1h1sEHGiEO4YOKP0r962oIdXH8' },\n  rawHeaders: \n   [ 'Authorization',\n     'OWPNXSTG8TCBFQMB7G0BW3NQR4QT1W55',\n     'Content-Type',\n     'application/json',\n     'User-Agent',\n     'PostmanRuntime/7.26.8',\n     'Accept',\n     '*/*',\n     'Cache-Control',\n     'no-cache',\n     'Postman-Token',\n     'ea1b54b5-be0c-404a-94c9-ed3df12bab37',\n     'Host',\n     'localhost:3000',\n     'Accept-Encoding',\n     'gzip, deflate, br',\n     'Connection',\n     'keep-alive',\n     'Content-Length',\n     '26',\n     'Cookie',\n     'connect.sid=s%3AeurvauvnfRiwE-SgARlYmXas4lAF0Hkg.idKqUrXd2pvr1NYlS1h1sEHGiEO4YOKP0r962oIdXH8' ],\n  trailers: {},\n  rawTrailers: [],\n  upgrade: false,\n  url: '/digit_endorsment',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 472,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 49316,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 52253 } },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '',\n  originalUrl: '/digit_endorsment',\n  _parsedUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  params: {},\n  query: {},\n  res: \n   ServerResponse {\n     domain: null,\n     _events: { finish: [Object], end: [Function: onevent] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     output: [],\n     outputEncodings: [],\n     outputCallbacks: [],\n     outputSize: 0,\n     writable: true,\n     _last: false,\n     upgrading: false,\n     chunkedEncoding: false,\n     shouldKeepAlive: true,\n     useChunkedEncodingByDefault: true,\n     sendDate: true,\n     _removedHeader: {},\n     _contentLength: null,\n     _hasBody: true,\n     _trailer: '',\n     finished: false,\n     _headerSent: false,\n     socket: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 49316,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     connection: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 49316,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     _header: null,\n     _headers: \n      { 'x-powered-by': 'Express',\n        'access-control-allow-credentials': 'true',\n        'access-control-allow-headers': 'X-Requested-With, Content-Type',\n        'access-control-allow-origin': '*' },\n     _headerNames: \n      { 'x-powered-by': 'X-Powered-By',\n        'access-control-allow-credentials': 'Access-Control-Allow-Credentials',\n        'access-control-allow-headers': 'Access-Control-Allow-Headers',\n        'access-control-allow-origin': 'Access-Control-Allow-Origin' },\n     _onPendingData: [Function: updateOutgoingData],\n     req: [Circular],\n     locals: {},\n     writeHead: [Function: writeHead],\n     end: [Function: end],\n     _startAt: undefined,\n     _startTime: undefined,\n     __onFinished: { [Function: listener] queue: [Object] } },\n  _parsedOriginalUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  sessionStore: \n   MemoryStore {\n     domain: null,\n     _events: \n      { disconnect: [Function: ondisconnect],\n        connect: [Function: onconnect] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     sessions: {},\n     generate: [Function] },\n  sessionID: 'olRjwofo26qCieyzBAqnAZ1QBEFwSCtf',\n  session: \n   Session {\n     cookie: \n      { path: '/',\n        _expires: 2022-01-14T05:16:29.290Z,\n        originalMaxAge: 600000,\n        httpOnly: true } },\n  body: { PB_CRN: 1052314 },\n  _body: true,\n  length: undefined,\n  read: [Function],\n  route: \n   Route {\n     path: '/digit_endorsment',\n     stack: [ [Object] ],\n     methods: { post: true } },\n  _startAt: [ 84210, 468682800 ],\n  _startTime: 2022-01-14T05:06:29.314Z,\n  _remoteAddress: '::1',\n  secret: undefined,\n  cookies: { 'connect.sid': 's:eurvauvnfRiwE-SgARlYmXas4lAF0Hkg.idKqUrXd2pvr1NYlS1h1sEHGiEO4YOKP0r962oIdXH8' },\n  signedCookies: {} }","timestamp":"10:36:29 AM"}
{"level":"info","message":"{ person: \n   [ { individual: [Object],\n       identificationDocuments: [Object],\n       communications: [Object],\n       address: [Object] } ],\n  nominee: \n   { firstName: '___firstName___',\n     lastName: '___lastName___',\n     dateOfBirth: '___dateOfBirth___',\n     relation: '___relation___' },\n  financer: '___financer___' }","timestamp":"10:36:31 AM"}
{"level":"info","message":"[object Object]","timestamp":"10:36:45 AM"}
{"level":"info","message":"{ status: 'Amendment is not successful, internal server error' }","timestamp":"10:36:45 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"10:39:35 AM"}
{"meta":"","level":"info","message":"","timestamp":"10:39:35 AM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"10:39:35 AM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"10:39:35 AM"}
{"meta":"","level":"info","message":"","timestamp":"10:39:35 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"10:39:35 AM"}
{"meta":"","level":"info","message":"","timestamp":"10:39:35 AM"}
{"level":"info","message":"digit_endorsment starts","timestamp":"10:43:04 AM"}
{"level":"info","message":"IncomingMessage {\n  _readableState: \n   ReadableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     buffer: BufferList { head: null, tail: null, length: 0 },\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: true,\n     ended: true,\n     endEmitted: true,\n     reading: false,\n     sync: true,\n     needReadable: false,\n     emittedReadable: false,\n     readableListening: false,\n     resumeScheduled: false,\n     defaultEncoding: 'utf8',\n     ranOut: false,\n     awaitDrain: 0,\n     readingMore: false,\n     decoder: null,\n     encoding: null },\n  readable: false,\n  domain: null,\n  _events: {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 476,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 253085,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 52330 } },\n  connection: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 476,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 253085,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 52330 } },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  headers: \n   { authorization: 'OWPNXSTG8TCBFQMB7G0BW3NQR4QT1W55',\n     'content-type': 'application/json',\n     'user-agent': 'PostmanRuntime/7.26.8',\n     accept: '*/*',\n     'cache-control': 'no-cache',\n     'postman-token': 'a6bd6fa9-fd41-46f3-ab7f-5ec2cb1e12dd',\n     host: 'localhost:3000',\n     'accept-encoding': 'gzip, deflate, br',\n     connection: 'keep-alive',\n     'content-length': '26',\n     cookie: 'connect.sid=s%3AolRjwofo26qCieyzBAqnAZ1QBEFwSCtf.IctDnFZ%2FWK8nQcrf%2FcURFt1j5YRUTmZsXB5uVc20t8E' },\n  rawHeaders: \n   [ 'Authorization',\n     'OWPNXSTG8TCBFQMB7G0BW3NQR4QT1W55',\n     'Content-Type',\n     'application/json',\n     'User-Agent',\n     'PostmanRuntime/7.26.8',\n     'Accept',\n     '*/*',\n     'Cache-Control',\n     'no-cache',\n     'Postman-Token',\n     'a6bd6fa9-fd41-46f3-ab7f-5ec2cb1e12dd',\n     'Host',\n     'localhost:3000',\n     'Accept-Encoding',\n     'gzip, deflate, br',\n     'Connection',\n     'keep-alive',\n     'Content-Length',\n     '26',\n     'Cookie',\n     'connect.sid=s%3AolRjwofo26qCieyzBAqnAZ1QBEFwSCtf.IctDnFZ%2FWK8nQcrf%2FcURFt1j5YRUTmZsXB5uVc20t8E' ],\n  trailers: {},\n  rawTrailers: [],\n  upgrade: false,\n  url: '/digit_endorsment',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 476,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 253085,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 52330 } },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '',\n  originalUrl: '/digit_endorsment',\n  _parsedUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  params: {},\n  query: {},\n  res: \n   ServerResponse {\n     domain: null,\n     _events: { finish: [Object], end: [Function: onevent] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     output: [],\n     outputEncodings: [],\n     outputCallbacks: [],\n     outputSize: 0,\n     writable: true,\n     _last: false,\n     upgrading: false,\n     chunkedEncoding: false,\n     shouldKeepAlive: true,\n     useChunkedEncodingByDefault: true,\n     sendDate: true,\n     _removedHeader: {},\n     _contentLength: null,\n     _hasBody: true,\n     _trailer: '',\n     finished: false,\n     _headerSent: false,\n     socket: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 253085,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     connection: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 253085,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     _header: null,\n     _headers: \n      { 'x-powered-by': 'Express',\n        'access-control-allow-credentials': 'true',\n        'access-control-allow-headers': 'X-Requested-With, Content-Type',\n        'access-control-allow-origin': '*' },\n     _headerNames: \n      { 'x-powered-by': 'X-Powered-By',\n        'access-control-allow-credentials': 'Access-Control-Allow-Credentials',\n        'access-control-allow-headers': 'Access-Control-Allow-Headers',\n        'access-control-allow-origin': 'Access-Control-Allow-Origin' },\n     _onPendingData: [Function: updateOutgoingData],\n     req: [Circular],\n     locals: {},\n     writeHead: [Function: writeHead],\n     end: [Function: end],\n     _startAt: undefined,\n     _startTime: undefined,\n     __onFinished: { [Function: listener] queue: [Object] } },\n  _parsedOriginalUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  sessionStore: \n   MemoryStore {\n     domain: null,\n     _events: \n      { disconnect: [Function: ondisconnect],\n        connect: [Function: onconnect] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     sessions: {},\n     generate: [Function] },\n  sessionID: 'OpH8MYrW1g7D8To5__Uzk0kXCVEpH4TO',\n  session: \n   Session {\n     cookie: \n      { path: '/',\n        _expires: 2022-01-14T05:23:04.641Z,\n        originalMaxAge: 600000,\n        httpOnly: true } },\n  body: { PB_CRN: 1052316 },\n  _body: true,\n  length: undefined,\n  read: [Function],\n  route: \n   Route {\n     path: '/digit_endorsment',\n     stack: [ [Object] ],\n     methods: { post: true } },\n  _startAt: [ 84605, 826318400 ],\n  _startTime: 2022-01-14T05:13:04.671Z,\n  _remoteAddress: '::1',\n  secret: undefined,\n  cookies: { 'connect.sid': 's:olRjwofo26qCieyzBAqnAZ1QBEFwSCtf.IctDnFZ/WK8nQcrf/cURFt1j5YRUTmZsXB5uVc20t8E' },\n  signedCookies: {} }","timestamp":"10:43:04 AM"}
{"level":"info","message":"{ person: \n   [ { individual: [Object],\n       identificationDocuments: [Object],\n       communications: [Object],\n       address: [Object] } ],\n  nominee: \n   { firstName: '___firstName___',\n     lastName: '___lastName___',\n     dateOfBirth: '___dateOfBirth___',\n     relation: '___relation___' },\n  financer: '___financer___' }","timestamp":"10:43:20 AM"}
{"level":"info","message":"[object Object]","timestamp":"10:45:14 AM"}
{"level":"info","message":"{ requestId: '5145',\n  link: 'https://preprod-S3Service.godigit.com/S3Service/rest/download/file?target=75E6FC117C2BE63537F3EE8AA567E5EB9D94013B82576A23F60BA5FAD045D2CB65E8E4FFA4A021CFA136CCDFC6E65A8DF5868DA4398DCFEACC6B9A6D4321D5D867E297802BBAE567A13BBF1EE74852F2EB751C2229A51563F9F4632961A7F002',\n  status: 'Non technical amendment successful' }","timestamp":"10:45:14 AM"}
{"level":"info","message":"Sucess","timestamp":"10:45:14 AM"}
{"level":"info","message":"user_detailsInsert null { result: { ok: 1, n: 1 },\n  ops: \n   [ { Ticket_Id: 693,\n       Ticket_code: 'BIEN3722',\n       Product: 10,\n       Category: 'Endorsement',\n       SubCategory: 'Nominee Name',\n       From: 'Ravi Ranjan Pandey(115414)',\n       To: 'Ravi Ranjan Pandey(115414)',\n       Status: 'Open',\n       Created_By: 'Ravi Ranjan Pandey',\n       Created_On: 2022-01-14T05:15:52.906Z,\n       Modified_By: 107890,\n       Modified_On: 2022-01-14T05:15:52.906Z,\n       CRN: '1052316',\n       Mobile_No: '9868768768',\n       Vehicle_No: 'MH-02-AA-1234',\n       Remark: 'testing',\n       ss_id: 107890,\n       CRN_owner: '0',\n       fba_id: 86010,\n       CRN_fba_id: '0',\n       channel: 'DIRECT',\n       subchannel: 'DIRECT',\n       Agent_Email_Id: 'ravi.pandey@policyboss.com',\n       Transaction_On: '2022-01-14T05:06:20.578Z',\n       Source: 'horizon',\n       RM_Email_Id: '',\n       RM_Agent_Name: 'POLICY BOSS WEBSITE',\n       Insurer_Id: 44,\n       _id: 61e10709fdc24b2308656fa8 } ],\n  insertedCount: 1,\n  insertedIds: [ 61e10709fdc24b2308656fa8 ] }","timestamp":"10:45:53 AM"}
{"level":"info","message":"user_detailsInsert null { result: { ok: 1, n: 1 },\n  ops: \n   [ { Ticket_Id: 694,\n       Ticket_code: 'CAEN3725',\n       Product: 1,\n       Category: 'Endorsement',\n       SubCategory: 'Nominee Name',\n       From: 'Anuj Baliram Singh(110560)',\n       To: 'Anuj Baliram Singh(110560)',\n       Status: 'Open',\n       Created_By: 'Anuj Baliram Singh',\n       Created_On: 2022-01-14T09:07:57.551Z,\n       Modified_By: 8067,\n       Modified_On: 2022-01-14T09:07:57.551Z,\n       CRN: '1052328',\n       Mobile_No: '7868768768',\n       Vehicle_No: 'MH-02-AA-1234',\n       Remark: 'testing',\n       ss_id: 8067,\n       CRN_owner: '0',\n       fba_id: 56265,\n       CRN_fba_id: '0',\n       channel: 'DIRECT',\n       subchannel: 'DIRECT',\n       Agent_Email_Id: 'anuj.singh@policyboss.com',\n       Transaction_On: '2022-01-14T08:47:22.440Z',\n       Source: 'horizon',\n       RM_Email_Id: '',\n       RM_Agent_Name: 'POLICY BOSS WEBSITE',\n       Insurer_Id: 11,\n       _id: 61e13d6dfdc24b2308656faa } ],\n  insertedCount: 1,\n  insertedIds: [ 61e13d6dfdc24b2308656faa ] }","timestamp":"2:37:57 PM"}
{"level":"info","message":"user_detailsInsert null { result: { ok: 1, n: 1 },\n  ops: \n   [ { Ticket_Id: 695,\n       Ticket_code: 'BIEN3730',\n       Product: 10,\n       Category: 'Endorsement',\n       SubCategory: 'Name Correction',\n       From: 'Anuj Baliram Singh(110560)',\n       To: 'Anuj Baliram Singh(110560)',\n       Status: 'Open',\n       Created_By: 'Anuj Baliram Singh',\n       Created_On: 2022-01-14T09:37:49.457Z,\n       Modified_By: 8067,\n       Modified_On: 2022-01-14T09:37:49.457Z,\n       CRN: '1052332',\n       Mobile_No: '',\n       Vehicle_No: 'MH-02-AA-1234',\n       Remark: 'testing',\n       ss_id: 8067,\n       CRN_owner: '819',\n       fba_id: 56265,\n       CRN_fba_id: '0',\n       channel: 'CC',\n       subchannel: 'PBS',\n       Agent_Email_Id: 'anuj.singh@policyboss.com',\n       Transaction_On: '2022-01-14T09:02:41.742Z',\n       Source: 'horizon',\n       RM_Email_Id: '',\n       RM_Agent_Name: 'Revati Ramesh Ghadge',\n       Insurer_Id: 17,\n       _id: 61e1449efdc24b2308656fac } ],\n  insertedCount: 1,\n  insertedIds: [ 61e1449efdc24b2308656fac ] }","timestamp":"3:08:38 PM"}
{"level":"info","message":"user_detailsInsert null { result: { ok: 1, n: 1 },\n  ops: \n   [ { Ticket_Id: 696,\n       Ticket_code: 'BIEN3731',\n       Product: 10,\n       Category: 'Endorsement',\n       SubCategory: 'Name Correction',\n       From: 'Anuj Baliram Singh(110560)',\n       To: 'Anuj Baliram Singh(110560)',\n       Status: 'Open',\n       Created_By: 'Anuj Baliram Singh',\n       Created_On: 2022-01-14T09:39:48.495Z,\n       Modified_By: 8067,\n       Modified_On: 2022-01-14T09:39:48.495Z,\n       CRN: '1052332',\n       Mobile_No: '',\n       Vehicle_No: 'MH-02-AA-1234',\n       Remark: 'testing',\n       ss_id: 8067,\n       CRN_owner: '819',\n       fba_id: 56265,\n       CRN_fba_id: '0',\n       channel: 'CC',\n       subchannel: 'PBS',\n       Agent_Email_Id: 'anuj.singh@policyboss.com',\n       Transaction_On: '2022-01-14T09:02:41.742Z',\n       Source: 'horizon',\n       RM_Email_Id: '',\n       RM_Agent_Name: 'Revati Ramesh Ghadge',\n       Insurer_Id: 17,\n       _id: 61e14530fdc24b2308656fae } ],\n  insertedCount: 1,\n  insertedIds: [ 61e14530fdc24b2308656fae ] }","timestamp":"3:11:04 PM"}
{"level":"info","message":"user_detailsInsert null { result: { ok: 1, n: 1 },\n  ops: \n   [ { Ticket_Id: 697,\n       Ticket_code: 'BIEN3732',\n       Product: 10,\n       Category: 'Endorsement',\n       SubCategory: 'Name Correction',\n       From: 'Anuj Baliram Singh(110560)',\n       To: 'Anuj Baliram Singh(110560)',\n       Status: 'Open',\n       Created_By: 'Anuj Baliram Singh',\n       Created_On: 2022-01-14T09:43:18.096Z,\n       Modified_By: 8067,\n       Modified_On: 2022-01-14T09:43:18.096Z,\n       CRN: '1052332',\n       Mobile_No: '',\n       Vehicle_No: 'MH-02-AA-1234',\n       Remark: 'testing',\n       ss_id: 8067,\n       CRN_owner: '819',\n       fba_id: 56265,\n       CRN_fba_id: '0',\n       channel: 'CC',\n       subchannel: 'PBS',\n       Agent_Email_Id: 'anuj.singh@policyboss.com',\n       Transaction_On: '2022-01-14T09:02:41.742Z',\n       Source: 'horizon',\n       RM_Email_Id: '',\n       RM_Agent_Name: 'Revati Ramesh Ghadge',\n       Insurer_Id: 17,\n       _id: 61e147b8fdc24b2308656fb0 } ],\n  insertedCount: 1,\n  insertedIds: [ 61e147b8fdc24b2308656fb0 ] }","timestamp":"3:21:52 PM"}
{"level":"info","message":"File read!","timestamp":"3:30:10 PM"}
{"level":"info","message":"File deleted!","timestamp":"3:30:10 PM"}
{"level":"info","message":"File read!","timestamp":"3:31:13 PM"}
{"level":"info","message":"File deleted!","timestamp":"3:31:21 PM"}
{"level":"info","message":"TicketUpdated null CommandResult {\n  result: { n: 1, nModified: 1, ok: 1 },\n  connection: \n   Connection {\n     domain: null,\n     _events: \n      { error: [Function],\n        close: [Function],\n        timeout: [Function],\n        parseError: [Function] },\n     _eventsCount: 4,\n     _maxListeners: undefined,\n     options: \n      { host: '13.127.179.204',\n        port: 27017,\n        size: 5,\n        connectionTimeout: 30000,\n        socketTimeout: 30000,\n        keepAlive: true,\n        keepAliveInitialDelay: 0,\n        noDelay: true,\n        ssl: false,\n        checkServerIdentity: true,\n        ca: null,\n        cert: null,\n        key: null,\n        passPhrase: null,\n        rejectUnauthorized: false,\n        promoteLongs: true,\n        promoteValues: true,\n        promoteBuffers: false,\n        reconnect: true,\n        reconnectInterval: 1000,\n        reconnectTries: 30,\n        domainsEnabled: false,\n        disconnectHandler: [Object],\n        cursorFactory: [Object],\n        emitError: true,\n        socketOptions: {},\n        clientInfo: [Object],\n        readPreference: [Object],\n        promiseLibrary: [Function: Promise],\n        bson: BSON {} },\n     id: 54,\n     logger: Logger { className: 'Connection' },\n     bson: BSON {},\n     tag: undefined,\n     messageHandler: [Function],\n     maxBsonMessageSize: 67108864,\n     port: 27017,\n     host: '13.127.179.204',\n     keepAlive: true,\n     keepAliveInitialDelay: 0,\n     noDelay: true,\n     connectionTimeout: 30000,\n     socketTimeout: 30000,\n     destroyed: false,\n     domainSocket: false,\n     singleBufferSerializtion: true,\n     serializationFunction: 'toBinUnified',\n     ca: null,\n     cert: null,\n     key: null,\n     passphrase: null,\n     ssl: false,\n     rejectUnauthorized: false,\n     checkServerIdentity: true,\n     responseOptions: \n      { promoteLongs: true,\n        promoteValues: true,\n        promoteBuffers: false },\n     flushing: false,\n     queue: [],\n     connection: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 8,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: false,\n        destroyed: false,\n        _bytesDispatched: 862,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: null,\n        _server: null,\n        _idleTimeout: 30000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 17563583,\n        read: [Function],\n        _consuming: true },\n     writeStream: null,\n     hashedName: '56a6763508c9e6d3e77e24bcedc5573b33ec6143',\n     workItems: [],\n     buffer: null,\n     sizeOfMessage: 0,\n     bytesRead: 0,\n     stubBuffer: null },\n  message: \n   Response {\n     parsed: true,\n     index: 75,\n     raw: <Buffer 4b 00 00 00 0a 71 c1 09 0b 3a 00 00 01 00 00 00 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 27 00 00 00 10 6e 00 01 00 00 00 10 6e 4d ... >,\n     data: <Buffer 4b 00 00 00 0a 71 c1 09 0b 3a 00 00 01 00 00 00 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 27 00 00 00 10 6e 00 01 00 00 00 10 6e 4d ... >,\n     bson: BSON {},\n     opts: \n      { promoteLongs: true,\n        promoteValues: true,\n        promoteBuffers: false },\n     length: 75,\n     requestId: 163672330,\n     responseTo: 14859,\n     responseFlags: 8,\n     cursorId: Long { _bsontype: 'Long', low_: 0, high_: 0 },\n     startingFrom: 0,\n     numberReturned: 1,\n     documents: [ [Object] ],\n     cursorNotFound: false,\n     queryFailure: false,\n     shardConfigStale: false,\n     awaitCapable: true,\n     promoteLongs: true,\n     promoteValues: true,\n     promoteBuffers: false,\n     hashedName: '56a6763508c9e6d3e77e24bcedc5573b33ec6143' } }","timestamp":"3:31:35 PM"}
{"level":"info","message":"user_detailsInsert null { result: { ok: 1, n: 1 },\n  ops: \n   [ { Ticket_Id: 698,\n       Ticket_code: 'BIEN3734',\n       Product: 10,\n       Category: 'Endorsement',\n       SubCategory: 'Nominee Name',\n       From: 'Anuj Baliram Singh(110560)',\n       To: 'Anuj Baliram Singh(110560)',\n       Status: 'Open',\n       Created_By: 'Anuj Baliram Singh',\n       Created_On: 2022-01-14T09:53:52.303Z,\n       Modified_By: 8067,\n       Modified_On: 2022-01-14T09:53:52.303Z,\n       CRN: '1052332',\n       Mobile_No: '',\n       Vehicle_No: 'MH-02-AA-1234',\n       Remark: 'testing',\n       ss_id: 8067,\n       CRN_owner: '819',\n       fba_id: 56265,\n       CRN_fba_id: '0',\n       channel: 'CC',\n       subchannel: 'PBS',\n       Agent_Email_Id: 'anuj.singh@policyboss.com',\n       Transaction_On: '2022-01-14T09:02:41.742Z',\n       Source: 'horizon',\n       RM_Email_Id: '',\n       RM_Agent_Name: 'Revati Ramesh Ghadge',\n       Insurer_Id: 17,\n       _id: 61e149fffdc24b2308656fb4 } ],\n  insertedCount: 1,\n  insertedIds: [ 61e149fffdc24b2308656fb4 ] }","timestamp":"3:31:35 PM"}
{"level":"info","message":"emailupdate null { n: 1, nModified: 1, ok: 1 }","timestamp":"3:31:49 PM"}
{"level":"info","message":"File read!","timestamp":"3:33:17 PM"}
{"level":"info","message":"File deleted!","timestamp":"3:33:17 PM"}
{"level":"info","message":"File read!","timestamp":"3:33:18 PM"}
{"level":"info","message":"File deleted!","timestamp":"3:33:18 PM"}
{"level":"info","message":"TicketUpdated null CommandResult {\n  result: { n: 1, nModified: 1, ok: 1 },\n  connection: \n   Connection {\n     domain: null,\n     _events: \n      { close: [Object],\n        error: [Object],\n        timeout: [Object],\n        parseError: [Object] },\n     _eventsCount: 4,\n     _maxListeners: undefined,\n     options: \n      { host: '13.127.179.204',\n        port: 27017,\n        size: 5,\n        connectionTimeout: 30000,\n        socketTimeout: 30000,\n        keepAlive: true,\n        keepAliveInitialDelay: 0,\n        noDelay: true,\n        ssl: false,\n        checkServerIdentity: true,\n        ca: null,\n        cert: null,\n        key: null,\n        passPhrase: null,\n        rejectUnauthorized: false,\n        promoteLongs: true,\n        promoteValues: true,\n        promoteBuffers: false,\n        reconnect: true,\n        reconnectInterval: 1000,\n        reconnectTries: 30,\n        domainsEnabled: false,\n        disconnectHandler: [Object],\n        cursorFactory: [Object],\n        emitError: true,\n        socketOptions: {},\n        clientInfo: [Object],\n        readPreference: [Object],\n        promiseLibrary: [Function: Promise],\n        bson: BSON {} },\n     id: 68,\n     logger: Logger { className: 'Connection' },\n     bson: BSON {},\n     tag: undefined,\n     messageHandler: [Function],\n     maxBsonMessageSize: 67108864,\n     port: 27017,\n     host: '13.127.179.204',\n     keepAlive: true,\n     keepAliveInitialDelay: 0,\n     noDelay: true,\n     connectionTimeout: 30000,\n     socketTimeout: 30000,\n     destroyed: false,\n     domainSocket: false,\n     singleBufferSerializtion: true,\n     serializationFunction: 'toBinUnified',\n     ca: null,\n     cert: null,\n     key: null,\n     passphrase: null,\n     ssl: false,\n     rejectUnauthorized: false,\n     checkServerIdentity: true,\n     responseOptions: \n      { promoteLongs: true,\n        promoteValues: true,\n        promoteBuffers: false },\n     flushing: false,\n     queue: [],\n     connection: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 8,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: false,\n        destroyed: false,\n        _bytesDispatched: 801,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: null,\n        _server: null,\n        _idleTimeout: 30000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 17668396,\n        read: [Function],\n        _consuming: true },\n     writeStream: null,\n     hashedName: '56a6763508c9e6d3e77e24bcedc5573b33ec6143',\n     workItems: [],\n     buffer: null,\n     sizeOfMessage: 0,\n     bytesRead: 0,\n     stubBuffer: null },\n  message: \n   Response {\n     parsed: true,\n     index: 75,\n     raw: <Buffer 4b 00 00 00 c6 f5 c1 09 3c 3b 00 00 01 00 00 00 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 27 00 00 00 10 6e 00 01 00 00 00 10 6e 4d ... >,\n     data: <Buffer 4b 00 00 00 c6 f5 c1 09 3c 3b 00 00 01 00 00 00 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 27 00 00 00 10 6e 00 01 00 00 00 10 6e 4d ... >,\n     bson: BSON {},\n     opts: \n      { promoteLongs: true,\n        promoteValues: true,\n        promoteBuffers: false },\n     length: 75,\n     requestId: 163706310,\n     responseTo: 15164,\n     responseFlags: 8,\n     cursorId: Long { _bsontype: 'Long', low_: 0, high_: 0 },\n     startingFrom: 0,\n     numberReturned: 1,\n     documents: [ [Object] ],\n     cursorNotFound: false,\n     queryFailure: false,\n     shardConfigStale: false,\n     awaitCapable: true,\n     promoteLongs: true,\n     promoteValues: true,\n     promoteBuffers: false,\n     hashedName: '56a6763508c9e6d3e77e24bcedc5573b33ec6143' } }","timestamp":"3:33:19 PM"}
{"level":"info","message":"user_detailsInsert null { result: { ok: 1, n: 1 },\n  ops: \n   [ { Ticket_Id: 699,\n       Ticket_code: 'BIEN3736',\n       Product: 10,\n       Category: 'Endorsement',\n       SubCategory: 'Name Correction',\n       From: 'Anuj Baliram Singh(110560)',\n       To: 'Anuj Baliram Singh(110560)',\n       Status: 'Open',\n       Created_By: 'Anuj Baliram Singh',\n       Created_On: 2022-01-14T10:03:17.688Z,\n       Modified_By: 8067,\n       Modified_On: 2022-01-14T10:03:17.688Z,\n       CRN: '1052332',\n       Mobile_No: '',\n       Vehicle_No: 'MH-02-AA-1234',\n       Remark: 'testing',\n       ss_id: 8067,\n       CRN_owner: '819',\n       fba_id: 56265,\n       CRN_fba_id: '0',\n       channel: 'CC',\n       subchannel: 'PBS',\n       Agent_Email_Id: 'anuj.singh@policyboss.com',\n       Transaction_On: '2022-01-14T09:02:41.742Z',\n       Source: 'horizon',\n       RM_Email_Id: '',\n       RM_Agent_Name: 'Revati Ramesh Ghadge',\n       Insurer_Id: 17,\n       _id: 61e14a67fdc24b2308656fb8 } ],\n  insertedCount: 1,\n  insertedIds: [ 61e14a67fdc24b2308656fb8 ] }","timestamp":"3:33:19 PM"}
{"level":"info","message":"emailupdate null { n: 1, nModified: 1, ok: 1 }","timestamp":"3:33:20 PM"}
{"level":"info","message":"DateRange from 2022-01-13T18:30:00.000Z to 2022-01-14T18:30:00.000Z","timestamp":"3:33:39 PM"}
{"level":"info","message":"{}","timestamp":"3:33:39 PM"}
{"level":"info","message":"DateRange from 2022-01-13T18:30:00.000Z to 2022-01-14T18:30:00.000Z","timestamp":"3:33:45 PM"}
{"level":"info","message":"{ Category: \n   { '$in': \n      [ 'Quotation',\n        'Proposal',\n        'Policy not received',\n        'Post Sale Query',\n        'Endorsement',\n        'Claim Related',\n        'Finmart',\n        'Received policy copy',\n        ' CRN is not marked as sell',\n        'Done payment but not received policy copy',\n        'Sign up issue',\n        'Login issue',\n        'Send to selles team',\n        'Send to IT' ] } }","timestamp":"3:33:45 PM"}
{"level":"info","message":"DateRange from 2022-01-13T18:30:00.000Z to 2022-01-14T18:30:00.000Z","timestamp":"3:33:49 PM"}
{"level":"info","message":"{}","timestamp":"3:33:49 PM"}
{"level":"info","message":"File read!","timestamp":"3:35:03 PM"}
{"level":"info","message":"File deleted!","timestamp":"3:35:03 PM"}
{"level":"info","message":"File read!","timestamp":"3:35:04 PM"}
{"level":"info","message":"File deleted!","timestamp":"3:35:04 PM"}
{"level":"info","message":"user_detailsInsert null { result: { ok: 1, n: 1 },\n  ops: \n   [ { Ticket_Id: 700,\n       Ticket_code: 'BIEN3737',\n       Product: 10,\n       Category: 'Endorsement',\n       SubCategory: 'Name Correction',\n       From: 'Ravi Ranjan Pandey(115414)',\n       To: 'Ravi Ranjan Pandey(115414)',\n       Status: 'Open',\n       Created_By: 'Ravi Ranjan Pandey',\n       Created_On: 2022-01-14T10:05:03.034Z,\n       Modified_By: 107890,\n       Modified_On: 2022-01-14T10:05:03.034Z,\n       CRN: '1052332',\n       Mobile_No: '',\n       Vehicle_No: 'MH-02-AA-1234',\n       Remark: 'testing',\n       ss_id: 107890,\n       CRN_owner: '819',\n       fba_id: 86010,\n       CRN_fba_id: '0',\n       channel: 'CC',\n       subchannel: 'PBS',\n       Agent_Email_Id: 'ravi.pandey@policyboss.com',\n       Transaction_On: '2022-01-14T09:02:41.742Z',\n       Source: 'horizon',\n       RM_Email_Id: '',\n       RM_Agent_Name: 'Revati Ramesh Ghadge',\n       Insurer_Id: 17,\n       _id: 61e14ad1fdc24b2308656fbc } ],\n  insertedCount: 1,\n  insertedIds: [ 61e14ad1fdc24b2308656fbc ] }","timestamp":"3:35:05 PM"}
{"level":"info","message":"TicketUpdated null CommandResult {\n  result: { n: 1, nModified: 1, ok: 1 },\n  connection: \n   Connection {\n     domain: null,\n     _events: \n      { close: [Object],\n        error: [Object],\n        timeout: [Object],\n        parseError: [Object] },\n     _eventsCount: 4,\n     _maxListeners: undefined,\n     options: \n      { host: '13.127.179.204',\n        port: 27017,\n        size: 5,\n        connectionTimeout: 30000,\n        socketTimeout: 30000,\n        keepAlive: true,\n        keepAliveInitialDelay: 0,\n        noDelay: true,\n        ssl: false,\n        checkServerIdentity: true,\n        ca: null,\n        cert: null,\n        key: null,\n        passPhrase: null,\n        rejectUnauthorized: false,\n        promoteLongs: true,\n        promoteValues: true,\n        promoteBuffers: false,\n        reconnect: true,\n        reconnectInterval: 1000,\n        reconnectTries: 30,\n        domainsEnabled: false,\n        disconnectHandler: [Object],\n        cursorFactory: [Object],\n        emitError: true,\n        socketOptions: {},\n        clientInfo: [Object],\n        readPreference: [Object],\n        promiseLibrary: [Function: Promise],\n        bson: BSON {} },\n     id: 73,\n     logger: Logger { className: 'Connection' },\n     bson: BSON {},\n     tag: undefined,\n     messageHandler: [Function],\n     maxBsonMessageSize: 67108864,\n     port: 27017,\n     host: '13.127.179.204',\n     keepAlive: true,\n     keepAliveInitialDelay: 0,\n     noDelay: true,\n     connectionTimeout: 30000,\n     socketTimeout: 30000,\n     destroyed: false,\n     domainSocket: false,\n     singleBufferSerializtion: true,\n     serializationFunction: 'toBinUnified',\n     ca: null,\n     cert: null,\n     key: null,\n     passphrase: null,\n     ssl: false,\n     rejectUnauthorized: false,\n     checkServerIdentity: true,\n     responseOptions: \n      { promoteLongs: true,\n        promoteValues: true,\n        promoteBuffers: false },\n     flushing: false,\n     queue: [],\n     connection: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 8,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: false,\n        destroyed: false,\n        _bytesDispatched: 805,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: null,\n        _server: null,\n        _idleTimeout: 30000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 17773624,\n        read: [Function],\n        _consuming: true },\n     writeStream: null,\n     hashedName: '56a6763508c9e6d3e77e24bcedc5573b33ec6143',\n     workItems: [],\n     buffer: null,\n     sizeOfMessage: 0,\n     bytesRead: 0,\n     stubBuffer: null },\n  message: \n   Response {\n     parsed: true,\n     index: 75,\n     raw: <Buffer 4b 00 00 00 68 6a c2 09 d9 3c 00 00 01 00 00 00 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 27 00 00 00 10 6e 00 01 00 00 00 10 6e 4d ... >,\n     data: <Buffer 4b 00 00 00 68 6a c2 09 d9 3c 00 00 01 00 00 00 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 27 00 00 00 10 6e 00 01 00 00 00 10 6e 4d ... >,\n     bson: BSON {},\n     opts: \n      { promoteLongs: true,\n        promoteValues: true,\n        promoteBuffers: false },\n     length: 75,\n     requestId: 163736168,\n     responseTo: 15577,\n     responseFlags: 8,\n     cursorId: Long { _bsontype: 'Long', low_: 0, high_: 0 },\n     startingFrom: 0,\n     numberReturned: 1,\n     documents: [ [Object] ],\n     cursorNotFound: false,\n     queryFailure: false,\n     shardConfigStale: false,\n     awaitCapable: true,\n     promoteLongs: true,\n     promoteValues: true,\n     promoteBuffers: false,\n     hashedName: '56a6763508c9e6d3e77e24bcedc5573b33ec6143' } }","timestamp":"3:35:05 PM"}
{"level":"info","message":"emailupdate null { n: 1, nModified: 1, ok: 1 }","timestamp":"3:35:06 PM"}
{"level":"info","message":"DateRange from 2022-01-13T18:30:00.000Z to 2022-01-14T18:30:00.000Z","timestamp":"3:35:11 PM"}
{"level":"info","message":"{ '$or': [ { lead_assigned_ssid: [Object] }, { ss_id: [Object] } ] }","timestamp":"3:35:11 PM"}
{"level":"info","message":"{ Ticket_Id: 'BIEN3737' }","timestamp":"3:35:29 PM"}
{"level":"info","message":"1","timestamp":"3:35:29 PM"}
{"level":"info","message":"{ Ticket_Id: 'BIEN3737' }","timestamp":"3:35:45 PM"}
{"level":"info","message":"1","timestamp":"3:35:45 PM"}
{"level":"info","message":"DateRange from 2022-01-13T18:30:00.000Z to 2022-01-14T18:30:00.000Z","timestamp":"3:35:53 PM"}
{"level":"info","message":"{ '$or': [ { lead_assigned_ssid: [Object] }, { ss_id: [Object] } ] }","timestamp":"3:35:53 PM"}
{"level":"info","message":"DateRange from 2022-01-13T18:30:00.000Z to 2022-01-14T18:30:00.000Z","timestamp":"3:36:36 PM"}
{"level":"info","message":"{ '$or': [ { lead_assigned_ssid: [Object] }, { ss_id: [Object] } ] }","timestamp":"3:36:36 PM"}
{"level":"info","message":"DateRange from 2022-01-13T18:30:00.000Z to 2022-01-14T18:30:00.000Z","timestamp":"3:38:20 PM"}
{"level":"info","message":"{ '$or': [ { lead_assigned_ssid: [Object] }, { ss_id: [Object] } ] }","timestamp":"3:38:20 PM"}
{"level":"info","message":"DateRange from 2022-01-13T18:30:00.000Z to 2022-01-14T18:30:00.000Z","timestamp":"3:45:40 PM"}
{"level":"info","message":"{ '$or': [ { lead_assigned_ssid: [Object] }, { ss_id: [Object] } ] }","timestamp":"3:45:40 PM"}

{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"11:27:50 AM"}
{"meta":"","level":"info","message":"","timestamp":"11:27:50 AM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"11:27:50 AM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"11:27:50 AM"}
{"meta":"","level":"info","message":"","timestamp":"11:27:50 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"11:27:50 AM"}
{"meta":"","level":"info","message":"","timestamp":"11:27:50 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"11:45:38 AM"}
{"meta":"","level":"info","message":"","timestamp":"11:45:38 AM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"11:45:38 AM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"11:45:38 AM"}
{"meta":"","level":"info","message":"","timestamp":"11:45:38 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"11:45:38 AM"}
{"meta":"","level":"info","message":"","timestamp":"11:45:38 AM"}
{"level":"info","message":"digit_endorsment s","timestamp":"11:46:42 AM"}
{"level":"info","message":"IncomingMessage {\n  _readableState: \n   ReadableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     buffer: BufferList { head: null, tail: null, length: 0 },\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: true,\n     ended: true,\n     endEmitted: true,\n     reading: false,\n     sync: false,\n     needReadable: false,\n     emittedReadable: false,\n     readableListening: false,\n     resumeScheduled: false,\n     defaultEncoding: 'utf8',\n     ranOut: false,\n     awaitDrain: 0,\n     readingMore: false,\n     decoder: null,\n     encoding: null },\n  readable: false,\n  domain: null,\n  _events: {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 118987,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50090 } },\n  connection: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 118987,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50090 } },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  headers: \n   { 'content-type': 'application/json',\n     'user-agent': 'PostmanRuntime/7.26.8',\n     accept: '*/*',\n     'cache-control': 'no-cache',\n     'postman-token': 'c051ee45-fb6f-4c37-873c-d4783a847b20',\n     host: 'localhost:3000',\n     'accept-encoding': 'gzip, deflate, br',\n     connection: 'keep-alive',\n     'content-length': '1674' },\n  rawHeaders: \n   [ 'Content-Type',\n     'application/json',\n     'User-Agent',\n     'PostmanRuntime/7.26.8',\n     'Accept',\n     '*/*',\n     'Cache-Control',\n     'no-cache',\n     'Postman-Token',\n     'c051ee45-fb6f-4c37-873c-d4783a847b20',\n     'Host',\n     'localhost:3000',\n     'Accept-Encoding',\n     'gzip, deflate, br',\n     'Connection',\n     'keep-alive',\n     'Content-Length',\n     '1674' ],\n  trailers: {},\n  rawTrailers: [],\n  upgrade: false,\n  url: '/digit_endorsment',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 118987,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50090 } },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/quote',\n  originalUrl: '/quote/digit_endorsment',\n  _parsedUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  params: {},\n  query: {},\n  res: \n   ServerResponse {\n     domain: null,\n     _events: { finish: [Object], end: [Function: onevent] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     output: [],\n     outputEncodings: [],\n     outputCallbacks: [],\n     outputSize: 0,\n     writable: true,\n     _last: false,\n     upgrading: false,\n     chunkedEncoding: false,\n     shouldKeepAlive: true,\n     useChunkedEncodingByDefault: true,\n     sendDate: true,\n     _removedHeader: {},\n     _contentLength: null,\n     _hasBody: true,\n     _trailer: '',\n     finished: false,\n     _headerSent: false,\n     socket: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 118987,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     connection: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 118987,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     _header: null,\n     _headers: \n      { 'x-powered-by': 'Express',\n        'access-control-allow-credentials': 'true',\n        'access-control-allow-headers': 'X-Requested-With, Content-Type',\n        'access-control-allow-origin': '*' },\n     _headerNames: \n      { 'x-powered-by': 'X-Powered-By',\n        'access-control-allow-credentials': 'Access-Control-Allow-Credentials',\n        'access-control-allow-headers': 'Access-Control-Allow-Headers',\n        'access-control-allow-origin': 'Access-Control-Allow-Origin' },\n     _onPendingData: [Function: updateOutgoingData],\n     req: [Circular],\n     locals: {},\n     writeHead: [Function: writeHead],\n     end: [Function: end],\n     _startAt: undefined,\n     _startTime: undefined,\n     __onFinished: { [Function: listener] queue: [Object] } },\n  _parsedOriginalUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/quote/digit_endorsment',\n     path: '/quote/digit_endorsment',\n     href: '/quote/digit_endorsment',\n     _raw: '/quote/digit_endorsment' },\n  sessionStore: \n   MemoryStore {\n     domain: null,\n     _events: \n      { disconnect: [Function: ondisconnect],\n        connect: [Function: onconnect] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     sessions: {},\n     generate: [Function] },\n  sessionID: '442MDYOXhbFO6M7bHSd51T4hkNieMLg5',\n  session: \n   Session {\n     cookie: \n      { path: '/',\n        _expires: 2022-01-13T06:26:37.828Z,\n        originalMaxAge: 600000,\n        httpOnly: true } },\n  body: \n   { product_id: 10,\n     vehicle_id: '50747',\n     rto_id: '580',\n     vehicle_insurance_type: 'renew',\n     vehicle_registration_date: '2018-01-10',\n     vehicle_manf_date: '2018-01-01',\n     policy_expiry_date: '',\n     prev_insurer_id: '2',\n     vehicle_registration_type: 'individual',\n     vehicle_ncb_current: '0',\n     is_claim_exists: 'yes',\n     method_type: 'Premium',\n     execution_async: 'yes',\n     electrical_accessory: 0,\n     non_electrical_accessory: 0,\n     is_llpd: 'no',\n     is_antitheft_fit: 'no',\n     is_external_bifuel: '',\n     is_aai_member: 'no',\n     external_bifuel_type: '',\n     external_bifuel_value: '0',\n     pa_owner_driver_si: '1500000',\n     is_pa_od: 'yes',\n     is_having_valid_dl: 'no',\n     is_opted_standalone_cpa: 'yes',\n     pa_paid_driver_si: '0',\n     first_name: 'TETS',\n     mobile: '9436578643',\n     email: 'test@ters.com',\n     crn: '1052072',\n     ss_id: '819',\n     client_id: 2,\n     fba_id: '0',\n     geo_lat: 0,\n     geo_long: 0,\n     agent_source: '',\n     app_version: '2.0',\n     vehicle_insurance_subtype: '1CH_0TP',\n     secret_key: 'SECRET-HZ07QRWY-JIBT-XRMQ-ZP95-J0RWP3DYRACW',\n     client_key: 'CLIENT-CNTP6NYE-CU9N-DUZW-CSPI-SH1IS4DOVHB9',\n     is_breakin: 'yes',\n     is_fastlane_rto: false,\n     is_inspection_done: 'no',\n     is_policy_exist: 'no',\n     is_tp_policy_exists: 'yes',\n     is_financed: 'no',\n     is_oslc: 'no',\n     oslc_si: 0,\n     sub_fba_id: 0,\n     is_helmet_cover: 'no',\n     helmet_cover_si: 0,\n     registration_no: 'MH02AA1234',\n     ip_city_state: 'Mumbai_Maharashtra' },\n  _body: true,\n  length: undefined,\n  read: [Function],\n  route: \n   Route {\n     path: '/digit_endorsment',\n     stack: [ [Object] ],\n     methods: { post: true } },\n  _startAt: [ 2014, 705545200 ],\n  _startTime: 2022-01-13T06:16:37.868Z,\n  _remoteAddress: '::1',\n  secret: undefined,\n  cookies: {},\n  signedCookies: {} }","timestamp":"11:47:05 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"11:53:57 AM"}
{"meta":"","level":"info","message":"","timestamp":"11:53:57 AM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"11:53:57 AM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"11:53:57 AM"}
{"meta":"","level":"info","message":"","timestamp":"11:53:57 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"11:53:57 AM"}
{"meta":"","level":"info","message":"","timestamp":"11:53:57 AM"}
{"level":"info","message":"digit_endorsment s","timestamp":"11:54:18 AM"}
{"level":"info","message":"IncomingMessage {\n  _readableState: \n   ReadableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     buffer: BufferList { head: null, tail: null, length: 0 },\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: true,\n     ended: true,\n     endEmitted: true,\n     reading: false,\n     sync: false,\n     needReadable: false,\n     emittedReadable: false,\n     readableListening: false,\n     resumeScheduled: false,\n     defaultEncoding: 'utf8',\n     ranOut: false,\n     awaitDrain: 0,\n     readingMore: false,\n     decoder: null,\n     encoding: null },\n  readable: false,\n  domain: null,\n  _events: {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 60359,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50164 } },\n  connection: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 60359,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50164 } },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  headers: \n   { 'content-type': 'application/json',\n     'user-agent': 'PostmanRuntime/7.26.8',\n     accept: '*/*',\n     'cache-control': 'no-cache',\n     'postman-token': '06b59074-11bd-457c-b312-4bf147118733',\n     host: 'localhost:3000',\n     'accept-encoding': 'gzip, deflate, br',\n     connection: 'keep-alive',\n     'content-length': '1674' },\n  rawHeaders: \n   [ 'Content-Type',\n     'application/json',\n     'User-Agent',\n     'PostmanRuntime/7.26.8',\n     'Accept',\n     '*/*',\n     'Cache-Control',\n     'no-cache',\n     'Postman-Token',\n     '06b59074-11bd-457c-b312-4bf147118733',\n     'Host',\n     'localhost:3000',\n     'Accept-Encoding',\n     'gzip, deflate, br',\n     'Connection',\n     'keep-alive',\n     'Content-Length',\n     '1674' ],\n  trailers: {},\n  rawTrailers: [],\n  upgrade: false,\n  url: '/digit_endorsment',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 60359,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50164 } },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/quote',\n  originalUrl: '/quote/digit_endorsment',\n  _parsedUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  params: {},\n  query: {},\n  res: \n   ServerResponse {\n     domain: null,\n     _events: { finish: [Object], end: [Function: onevent] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     output: [],\n     outputEncodings: [],\n     outputCallbacks: [],\n     outputSize: 0,\n     writable: true,\n     _last: false,\n     upgrading: false,\n     chunkedEncoding: false,\n     shouldKeepAlive: true,\n     useChunkedEncodingByDefault: true,\n     sendDate: true,\n     _removedHeader: {},\n     _contentLength: null,\n     _hasBody: true,\n     _trailer: '',\n     finished: false,\n     _headerSent: false,\n     socket: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 60359,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     connection: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 60359,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     _header: null,\n     _headers: \n      { 'x-powered-by': 'Express',\n        'access-control-allow-credentials': 'true',\n        'access-control-allow-headers': 'X-Requested-With, Content-Type',\n        'access-control-allow-origin': '*' },\n     _headerNames: \n      { 'x-powered-by': 'X-Powered-By',\n        'access-control-allow-credentials': 'Access-Control-Allow-Credentials',\n        'access-control-allow-headers': 'Access-Control-Allow-Headers',\n        'access-control-allow-origin': 'Access-Control-Allow-Origin' },\n     _onPendingData: [Function: updateOutgoingData],\n     req: [Circular],\n     locals: {},\n     writeHead: [Function: writeHead],\n     end: [Function: end],\n     _startAt: undefined,\n     _startTime: undefined,\n     __onFinished: { [Function: listener] queue: [Object] } },\n  _parsedOriginalUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/quote/digit_endorsment',\n     path: '/quote/digit_endorsment',\n     href: '/quote/digit_endorsment',\n     _raw: '/quote/digit_endorsment' },\n  sessionStore: \n   MemoryStore {\n     domain: null,\n     _events: \n      { disconnect: [Function: ondisconnect],\n        connect: [Function: onconnect] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     sessions: {},\n     generate: [Function] },\n  sessionID: 'ezYHyRAG3DVEuKqO_pbeBudSwnq77XNY',\n  session: \n   Session {\n     cookie: \n      { path: '/',\n        _expires: 2022-01-13T06:34:16.525Z,\n        originalMaxAge: 600000,\n        httpOnly: true } },\n  body: \n   { product_id: 10,\n     vehicle_id: '50747',\n     rto_id: '580',\n     vehicle_insurance_type: 'renew',\n     vehicle_registration_date: '2018-01-10',\n     vehicle_manf_date: '2018-01-01',\n     policy_expiry_date: '',\n     prev_insurer_id: '2',\n     vehicle_registration_type: 'individual',\n     vehicle_ncb_current: '0',\n     is_claim_exists: 'yes',\n     method_type: 'Premium',\n     execution_async: 'yes',\n     electrical_accessory: 0,\n     non_electrical_accessory: 0,\n     is_llpd: 'no',\n     is_antitheft_fit: 'no',\n     is_external_bifuel: '',\n     is_aai_member: 'no',\n     external_bifuel_type: '',\n     external_bifuel_value: '0',\n     pa_owner_driver_si: '1500000',\n     is_pa_od: 'yes',\n     is_having_valid_dl: 'no',\n     is_opted_standalone_cpa: 'yes',\n     pa_paid_driver_si: '0',\n     first_name: 'TETS',\n     mobile: '9436578643',\n     email: 'test@ters.com',\n     crn: '1052072',\n     ss_id: '819',\n     client_id: 2,\n     fba_id: '0',\n     geo_lat: 0,\n     geo_long: 0,\n     agent_source: '',\n     app_version: '2.0',\n     vehicle_insurance_subtype: '1CH_0TP',\n     secret_key: 'SECRET-HZ07QRWY-JIBT-XRMQ-ZP95-J0RWP3DYRACW',\n     client_key: 'CLIENT-CNTP6NYE-CU9N-DUZW-CSPI-SH1IS4DOVHB9',\n     is_breakin: 'yes',\n     is_fastlane_rto: false,\n     is_inspection_done: 'no',\n     is_policy_exist: 'no',\n     is_tp_policy_exists: 'yes',\n     is_financed: 'no',\n     is_oslc: 'no',\n     oslc_si: 0,\n     sub_fba_id: 0,\n     is_helmet_cover: 'no',\n     helmet_cover_si: 0,\n     registration_no: 'MH02AA1234',\n     ip_city_state: 'Mumbai_Maharashtra' },\n  _body: true,\n  length: undefined,\n  read: [Function],\n  route: \n   Route {\n     path: '/digit_endorsment',\n     stack: [ [Object] ],\n     methods: { post: true } },\n  _startAt: [ 2473, 398744200 ],\n  _startTime: 2022-01-13T06:24:16.561Z,\n  _remoteAddress: '::1',\n  secret: undefined,\n  cookies: {},\n  signedCookies: {} }","timestamp":"11:54:20 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"11:57:19 AM"}
{"meta":"","level":"info","message":"","timestamp":"11:57:19 AM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"11:57:19 AM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"11:57:19 AM"}
{"meta":"","level":"info","message":"","timestamp":"11:57:19 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"11:57:19 AM"}
{"meta":"","level":"info","message":"","timestamp":"11:57:19 AM"}
{"level":"info","message":"digit_endorsment s","timestamp":"11:58:55 AM"}
{"level":"info","message":"IncomingMessage {\n  _readableState: \n   ReadableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     buffer: BufferList { head: null, tail: null, length: 0 },\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: true,\n     ended: true,\n     endEmitted: true,\n     reading: false,\n     sync: false,\n     needReadable: false,\n     emittedReadable: false,\n     readableListening: false,\n     resumeScheduled: false,\n     defaultEncoding: 'utf8',\n     ranOut: false,\n     awaitDrain: 0,\n     readingMore: false,\n     decoder: null,\n     encoding: null },\n  readable: false,\n  domain: null,\n  _events: {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 112036,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50208 } },\n  connection: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 112036,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50208 } },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  headers: \n   { 'content-type': 'application/json',\n     'user-agent': 'PostmanRuntime/7.26.8',\n     accept: '*/*',\n     'cache-control': 'no-cache',\n     'postman-token': 'a94e3511-f53b-4ae5-8c8f-97af50d85324',\n     host: 'localhost:3000',\n     'accept-encoding': 'gzip, deflate, br',\n     connection: 'keep-alive',\n     'content-length': '1674' },\n  rawHeaders: \n   [ 'Content-Type',\n     'application/json',\n     'User-Agent',\n     'PostmanRuntime/7.26.8',\n     'Accept',\n     '*/*',\n     'Cache-Control',\n     'no-cache',\n     'Postman-Token',\n     'a94e3511-f53b-4ae5-8c8f-97af50d85324',\n     'Host',\n     'localhost:3000',\n     'Accept-Encoding',\n     'gzip, deflate, br',\n     'Connection',\n     'keep-alive',\n     'Content-Length',\n     '1674' ],\n  trailers: {},\n  rawTrailers: [],\n  upgrade: false,\n  url: '/digit_endorsment',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 112036,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50208 } },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/quote',\n  originalUrl: '/quote/digit_endorsment',\n  _parsedUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  params: {},\n  query: {},\n  res: \n   ServerResponse {\n     domain: null,\n     _events: { finish: [Object], end: [Function: onevent] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     output: [],\n     outputEncodings: [],\n     outputCallbacks: [],\n     outputSize: 0,\n     writable: true,\n     _last: false,\n     upgrading: false,\n     chunkedEncoding: false,\n     shouldKeepAlive: true,\n     useChunkedEncodingByDefault: true,\n     sendDate: true,\n     _removedHeader: {},\n     _contentLength: null,\n     _hasBody: true,\n     _trailer: '',\n     finished: false,\n     _headerSent: false,\n     socket: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 112036,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     connection: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 112036,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     _header: null,\n     _headers: \n      { 'x-powered-by': 'Express',\n        'access-control-allow-credentials': 'true',\n        'access-control-allow-headers': 'X-Requested-With, Content-Type',\n        'access-control-allow-origin': '*' },\n     _headerNames: \n      { 'x-powered-by': 'X-Powered-By',\n        'access-control-allow-credentials': 'Access-Control-Allow-Credentials',\n        'access-control-allow-headers': 'Access-Control-Allow-Headers',\n        'access-control-allow-origin': 'Access-Control-Allow-Origin' },\n     _onPendingData: [Function: updateOutgoingData],\n     req: [Circular],\n     locals: {},\n     writeHead: [Function: writeHead],\n     end: [Function: end],\n     _startAt: undefined,\n     _startTime: undefined,\n     __onFinished: { [Function: listener] queue: [Object] } },\n  _parsedOriginalUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/quote/digit_endorsment',\n     path: '/quote/digit_endorsment',\n     href: '/quote/digit_endorsment',\n     _raw: '/quote/digit_endorsment' },\n  sessionStore: \n   MemoryStore {\n     domain: null,\n     _events: \n      { disconnect: [Function: ondisconnect],\n        connect: [Function: onconnect] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     sessions: {},\n     generate: [Function] },\n  sessionID: 'A0vnLHRuf6w_9PrjEA5UdxH5A2SqJ2li',\n  session: \n   Session {\n     cookie: \n      { path: '/',\n        _expires: 2022-01-13T06:38:31.396Z,\n        originalMaxAge: 600000,\n        httpOnly: true } },\n  body: \n   { product_id: 10,\n     vehicle_id: '50747',\n     rto_id: '580',\n     vehicle_insurance_type: 'renew',\n     vehicle_registration_date: '2018-01-10',\n     vehicle_manf_date: '2018-01-01',\n     policy_expiry_date: '',\n     prev_insurer_id: '2',\n     vehicle_registration_type: 'individual',\n     vehicle_ncb_current: '0',\n     is_claim_exists: 'yes',\n     method_type: 'Premium',\n     execution_async: 'yes',\n     electrical_accessory: 0,\n     non_electrical_accessory: 0,\n     is_llpd: 'no',\n     is_antitheft_fit: 'no',\n     is_external_bifuel: '',\n     is_aai_member: 'no',\n     external_bifuel_type: '',\n     external_bifuel_value: '0',\n     pa_owner_driver_si: '1500000',\n     is_pa_od: 'yes',\n     is_having_valid_dl: 'no',\n     is_opted_standalone_cpa: 'yes',\n     pa_paid_driver_si: '0',\n     first_name: 'TETS',\n     mobile: '9436578643',\n     email: 'test@ters.com',\n     crn: '1052072',\n     ss_id: '819',\n     client_id: 2,\n     fba_id: '0',\n     geo_lat: 0,\n     geo_long: 0,\n     agent_source: '',\n     app_version: '2.0',\n     vehicle_insurance_subtype: '1CH_0TP',\n     secret_key: 'SECRET-HZ07QRWY-JIBT-XRMQ-ZP95-J0RWP3DYRACW',\n     client_key: 'CLIENT-CNTP6NYE-CU9N-DUZW-CSPI-SH1IS4DOVHB9',\n     is_breakin: 'yes',\n     is_fastlane_rto: false,\n     is_inspection_done: 'no',\n     is_policy_exist: 'no',\n     is_tp_policy_exists: 'yes',\n     is_financed: 'no',\n     is_oslc: 'no',\n     oslc_si: 0,\n     sub_fba_id: 0,\n     is_helmet_cover: 'no',\n     helmet_cover_si: 0,\n     registration_no: 'MH02AA1234',\n     ip_city_state: 'Mumbai_Maharashtra' },\n  _body: true,\n  length: undefined,\n  read: [Function],\n  route: \n   Route {\n     path: '/digit_endorsment',\n     stack: [ [Object] ],\n     methods: { post: true } },\n  _startAt: [ 2728, 266935100 ],\n  _startTime: 2022-01-13T06:28:31.430Z,\n  _remoteAddress: '::1',\n  secret: undefined,\n  cookies: {},\n  signedCookies: {} }","timestamp":"11:58:58 AM"}
{"level":"info","message":"[object Object]","timestamp":"11:59:47 AM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"12:10:04 PM"}
{"meta":"","level":"info","message":"","timestamp":"12:10:04 PM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"12:10:04 PM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"12:10:04 PM"}
{"meta":"","level":"info","message":"","timestamp":"12:10:04 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"12:10:04 PM"}
{"meta":"","level":"info","message":"","timestamp":"12:10:04 PM"}
{"level":"info","message":"digit_endorsment s","timestamp":"12:10:11 PM"}
{"level":"info","message":"IncomingMessage {\n  _readableState: \n   ReadableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     buffer: BufferList { head: null, tail: null, length: 0 },\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: true,\n     ended: true,\n     endEmitted: true,\n     reading: false,\n     sync: false,\n     needReadable: false,\n     emittedReadable: false,\n     readableListening: false,\n     resumeScheduled: false,\n     defaultEncoding: 'utf8',\n     ranOut: false,\n     awaitDrain: 0,\n     readingMore: false,\n     decoder: null,\n     encoding: null },\n  readable: false,\n  domain: null,\n  _events: {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 45159,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50264 } },\n  connection: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 45159,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50264 } },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  headers: \n   { 'content-type': 'application/json',\n     'user-agent': 'PostmanRuntime/7.26.8',\n     accept: '*/*',\n     'cache-control': 'no-cache',\n     'postman-token': '236b11af-ac7b-4ec9-a868-2c5e50f70fa6',\n     host: 'localhost:3000',\n     'accept-encoding': 'gzip, deflate, br',\n     connection: 'keep-alive',\n     'content-length': '1674' },\n  rawHeaders: \n   [ 'Content-Type',\n     'application/json',\n     'User-Agent',\n     'PostmanRuntime/7.26.8',\n     'Accept',\n     '*/*',\n     'Cache-Control',\n     'no-cache',\n     'Postman-Token',\n     '236b11af-ac7b-4ec9-a868-2c5e50f70fa6',\n     'Host',\n     'localhost:3000',\n     'Accept-Encoding',\n     'gzip, deflate, br',\n     'Connection',\n     'keep-alive',\n     'Content-Length',\n     '1674' ],\n  trailers: {},\n  rawTrailers: [],\n  upgrade: false,\n  url: '/digit_endorsment',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 45159,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50264 } },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/quote',\n  originalUrl: '/quote/digit_endorsment',\n  _parsedUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  params: {},\n  query: {},\n  res: \n   ServerResponse {\n     domain: null,\n     _events: { finish: [Object], end: [Function: onevent] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     output: [],\n     outputEncodings: [],\n     outputCallbacks: [],\n     outputSize: 0,\n     writable: true,\n     _last: false,\n     upgrading: false,\n     chunkedEncoding: false,\n     shouldKeepAlive: true,\n     useChunkedEncodingByDefault: true,\n     sendDate: true,\n     _removedHeader: {},\n     _contentLength: null,\n     _hasBody: true,\n     _trailer: '',\n     finished: false,\n     _headerSent: false,\n     socket: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 45159,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     connection: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 45159,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     _header: null,\n     _headers: \n      { 'x-powered-by': 'Express',\n        'access-control-allow-credentials': 'true',\n        'access-control-allow-headers': 'X-Requested-With, Content-Type',\n        'access-control-allow-origin': '*' },\n     _headerNames: \n      { 'x-powered-by': 'X-Powered-By',\n        'access-control-allow-credentials': 'Access-Control-Allow-Credentials',\n        'access-control-allow-headers': 'Access-Control-Allow-Headers',\n        'access-control-allow-origin': 'Access-Control-Allow-Origin' },\n     _onPendingData: [Function: updateOutgoingData],\n     req: [Circular],\n     locals: {},\n     writeHead: [Function: writeHead],\n     end: [Function: end],\n     _startAt: undefined,\n     _startTime: undefined,\n     __onFinished: { [Function: listener] queue: [Object] } },\n  _parsedOriginalUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/quote/digit_endorsment',\n     path: '/quote/digit_endorsment',\n     href: '/quote/digit_endorsment',\n     _raw: '/quote/digit_endorsment' },\n  sessionStore: \n   MemoryStore {\n     domain: null,\n     _events: \n      { disconnect: [Function: ondisconnect],\n        connect: [Function: onconnect] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     sessions: {},\n     generate: [Function] },\n  sessionID: '5Cza_tPitPltDgwL1f7U2pEIZFD7-1Vx',\n  session: \n   Session {\n     cookie: \n      { path: '/',\n        _expires: 2022-01-13T06:50:09.484Z,\n        originalMaxAge: 600000,\n        httpOnly: true } },\n  body: \n   { product_id: 10,\n     vehicle_id: '50747',\n     rto_id: '580',\n     vehicle_insurance_type: 'renew',\n     vehicle_registration_date: '2018-01-10',\n     vehicle_manf_date: '2018-01-01',\n     policy_expiry_date: '',\n     prev_insurer_id: '2',\n     vehicle_registration_type: 'individual',\n     vehicle_ncb_current: '0',\n     is_claim_exists: 'yes',\n     method_type: 'Premium',\n     execution_async: 'yes',\n     electrical_accessory: 0,\n     non_electrical_accessory: 0,\n     is_llpd: 'no',\n     is_antitheft_fit: 'no',\n     is_external_bifuel: '',\n     is_aai_member: 'no',\n     external_bifuel_type: '',\n     external_bifuel_value: '0',\n     pa_owner_driver_si: '1500000',\n     is_pa_od: 'yes',\n     is_having_valid_dl: 'no',\n     is_opted_standalone_cpa: 'yes',\n     pa_paid_driver_si: '0',\n     first_name: 'TETS',\n     mobile: '9436578643',\n     email: 'test@ters.com',\n     crn: '1052072',\n     ss_id: '819',\n     client_id: 2,\n     fba_id: '0',\n     geo_lat: 0,\n     geo_long: 0,\n     agent_source: '',\n     app_version: '2.0',\n     vehicle_insurance_subtype: '1CH_0TP',\n     secret_key: 'SECRET-HZ07QRWY-JIBT-XRMQ-ZP95-J0RWP3DYRACW',\n     client_key: 'CLIENT-CNTP6NYE-CU9N-DUZW-CSPI-SH1IS4DOVHB9',\n     is_breakin: 'yes',\n     is_fastlane_rto: false,\n     is_inspection_done: 'no',\n     is_policy_exist: 'no',\n     is_tp_policy_exists: 'yes',\n     is_financed: 'no',\n     is_oslc: 'no',\n     oslc_si: 0,\n     sub_fba_id: 0,\n     is_helmet_cover: 'no',\n     helmet_cover_si: 0,\n     registration_no: 'MH02AA1234',\n     ip_city_state: 'Mumbai_Maharashtra' },\n  _body: true,\n  length: undefined,\n  read: [Function],\n  route: \n   Route {\n     path: '/digit_endorsment',\n     stack: [ [Object] ],\n     methods: { post: true } },\n  _startAt: [ 3426, 344966599 ],\n  _startTime: 2022-01-13T06:40:09.507Z,\n  _remoteAddress: '::1',\n  secret: undefined,\n  cookies: {},\n  signedCookies: {} }","timestamp":"12:10:14 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"12:12:37 PM"}
{"meta":"","level":"info","message":"","timestamp":"12:12:37 PM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"12:12:37 PM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"12:12:37 PM"}
{"meta":"","level":"info","message":"","timestamp":"12:12:37 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"12:12:37 PM"}
{"meta":"","level":"info","message":"","timestamp":"12:12:37 PM"}
{"level":"info","message":"digit_endorsment s","timestamp":"12:12:45 PM"}
{"level":"info","message":"IncomingMessage {\n  _readableState: \n   ReadableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     buffer: BufferList { head: null, tail: null, length: 0 },\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: true,\n     ended: true,\n     endEmitted: true,\n     reading: false,\n     sync: false,\n     needReadable: false,\n     emittedReadable: false,\n     readableListening: false,\n     resumeScheduled: false,\n     defaultEncoding: 'utf8',\n     ranOut: false,\n     awaitDrain: 0,\n     readingMore: false,\n     decoder: null,\n     encoding: null },\n  readable: false,\n  domain: null,\n  _events: {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 44232,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50297 } },\n  connection: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 44232,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50297 } },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  headers: \n   { 'content-type': 'application/json',\n     'user-agent': 'PostmanRuntime/7.26.8',\n     accept: '*/*',\n     'cache-control': 'no-cache',\n     'postman-token': 'be0965f6-a401-4fb5-a75c-e7e1461ff75b',\n     host: 'localhost:3000',\n     'accept-encoding': 'gzip, deflate, br',\n     connection: 'keep-alive',\n     'content-length': '1674' },\n  rawHeaders: \n   [ 'Content-Type',\n     'application/json',\n     'User-Agent',\n     'PostmanRuntime/7.26.8',\n     'Accept',\n     '*/*',\n     'Cache-Control',\n     'no-cache',\n     'Postman-Token',\n     'be0965f6-a401-4fb5-a75c-e7e1461ff75b',\n     'Host',\n     'localhost:3000',\n     'Accept-Encoding',\n     'gzip, deflate, br',\n     'Connection',\n     'keep-alive',\n     'Content-Length',\n     '1674' ],\n  trailers: {},\n  rawTrailers: [],\n  upgrade: false,\n  url: '/digit_endorsment',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 44232,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50297 } },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/quote',\n  originalUrl: '/quote/digit_endorsment',\n  _parsedUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  params: {},\n  query: {},\n  res: \n   ServerResponse {\n     domain: null,\n     _events: { finish: [Object], end: [Function: onevent] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     output: [],\n     outputEncodings: [],\n     outputCallbacks: [],\n     outputSize: 0,\n     writable: true,\n     _last: false,\n     upgrading: false,\n     chunkedEncoding: false,\n     shouldKeepAlive: true,\n     useChunkedEncodingByDefault: true,\n     sendDate: true,\n     _removedHeader: {},\n     _contentLength: null,\n     _hasBody: true,\n     _trailer: '',\n     finished: false,\n     _headerSent: false,\n     socket: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 44232,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     connection: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 44232,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     _header: null,\n     _headers: \n      { 'x-powered-by': 'Express',\n        'access-control-allow-credentials': 'true',\n        'access-control-allow-headers': 'X-Requested-With, Content-Type',\n        'access-control-allow-origin': '*' },\n     _headerNames: \n      { 'x-powered-by': 'X-Powered-By',\n        'access-control-allow-credentials': 'Access-Control-Allow-Credentials',\n        'access-control-allow-headers': 'Access-Control-Allow-Headers',\n        'access-control-allow-origin': 'Access-Control-Allow-Origin' },\n     _onPendingData: [Function: updateOutgoingData],\n     req: [Circular],\n     locals: {},\n     writeHead: [Function: writeHead],\n     end: [Function: end],\n     _startAt: undefined,\n     _startTime: undefined,\n     __onFinished: { [Function: listener] queue: [Object] } },\n  _parsedOriginalUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/quote/digit_endorsment',\n     path: '/quote/digit_endorsment',\n     href: '/quote/digit_endorsment',\n     _raw: '/quote/digit_endorsment' },\n  sessionStore: \n   MemoryStore {\n     domain: null,\n     _events: \n      { disconnect: [Function: ondisconnect],\n        connect: [Function: onconnect] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     sessions: {},\n     generate: [Function] },\n  sessionID: 'VaHaII26glnIAEFSW9dcGeiUTgZHdCFs',\n  session: \n   Session {\n     cookie: \n      { path: '/',\n        _expires: 2022-01-13T06:52:42.781Z,\n        originalMaxAge: 600000,\n        httpOnly: true } },\n  body: \n   { product_id: 10,\n     vehicle_id: '50747',\n     rto_id: '580',\n     vehicle_insurance_type: 'renew',\n     vehicle_registration_date: '2018-01-10',\n     vehicle_manf_date: '2018-01-01',\n     policy_expiry_date: '',\n     prev_insurer_id: '2',\n     vehicle_registration_type: 'individual',\n     vehicle_ncb_current: '0',\n     is_claim_exists: 'yes',\n     method_type: 'Premium',\n     execution_async: 'yes',\n     electrical_accessory: 0,\n     non_electrical_accessory: 0,\n     is_llpd: 'no',\n     is_antitheft_fit: 'no',\n     is_external_bifuel: '',\n     is_aai_member: 'no',\n     external_bifuel_type: '',\n     external_bifuel_value: '0',\n     pa_owner_driver_si: '1500000',\n     is_pa_od: 'yes',\n     is_having_valid_dl: 'no',\n     is_opted_standalone_cpa: 'yes',\n     pa_paid_driver_si: '0',\n     first_name: 'TETS',\n     mobile: '9436578643',\n     email: 'test@ters.com',\n     crn: '1052072',\n     ss_id: '819',\n     client_id: 2,\n     fba_id: '0',\n     geo_lat: 0,\n     geo_long: 0,\n     agent_source: '',\n     app_version: '2.0',\n     vehicle_insurance_subtype: '1CH_0TP',\n     secret_key: 'SECRET-HZ07QRWY-JIBT-XRMQ-ZP95-J0RWP3DYRACW',\n     client_key: 'CLIENT-CNTP6NYE-CU9N-DUZW-CSPI-SH1IS4DOVHB9',\n     is_breakin: 'yes',\n     is_fastlane_rto: false,\n     is_inspection_done: 'no',\n     is_policy_exist: 'no',\n     is_tp_policy_exists: 'yes',\n     is_financed: 'no',\n     is_oslc: 'no',\n     oslc_si: 0,\n     sub_fba_id: 0,\n     is_helmet_cover: 'no',\n     helmet_cover_si: 0,\n     registration_no: 'MH02AA1234',\n     ip_city_state: 'Mumbai_Maharashtra' },\n  _body: true,\n  length: undefined,\n  read: [Function],\n  route: \n   Route {\n     path: '/digit_endorsment',\n     stack: [ [Object] ],\n     methods: { post: true } },\n  _startAt: [ 3579, 646810200 ],\n  _startTime: 2022-01-13T06:42:42.809Z,\n  _remoteAddress: '::1',\n  secret: undefined,\n  cookies: {},\n  signedCookies: {} }","timestamp":"12:12:46 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"12:15:36 PM"}
{"meta":"","level":"info","message":"","timestamp":"12:15:36 PM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"12:15:36 PM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"12:15:36 PM"}
{"meta":"","level":"info","message":"","timestamp":"12:15:36 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"12:15:36 PM"}
{"meta":"","level":"info","message":"","timestamp":"12:15:36 PM"}
{"level":"info","message":"digit_endorsment s","timestamp":"12:15:43 PM"}
{"level":"info","message":"IncomingMessage {\n  _readableState: \n   ReadableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     buffer: BufferList { head: null, tail: null, length: 0 },\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: true,\n     ended: true,\n     endEmitted: true,\n     reading: false,\n     sync: false,\n     needReadable: false,\n     emittedReadable: false,\n     readableListening: false,\n     resumeScheduled: false,\n     defaultEncoding: 'utf8',\n     ranOut: false,\n     awaitDrain: 0,\n     readingMore: false,\n     decoder: null,\n     encoding: null },\n  readable: false,\n  domain: null,\n  _events: {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 43618,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50343 } },\n  connection: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 43618,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50343 } },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  headers: \n   { 'content-type': 'application/json',\n     'user-agent': 'PostmanRuntime/7.26.8',\n     accept: '*/*',\n     'cache-control': 'no-cache',\n     'postman-token': '08376e3f-5660-4b75-bf3d-d3abe5e9576b',\n     host: 'localhost:3000',\n     'accept-encoding': 'gzip, deflate, br',\n     connection: 'keep-alive',\n     'content-length': '1674' },\n  rawHeaders: \n   [ 'Content-Type',\n     'application/json',\n     'User-Agent',\n     'PostmanRuntime/7.26.8',\n     'Accept',\n     '*/*',\n     'Cache-Control',\n     'no-cache',\n     'Postman-Token',\n     '08376e3f-5660-4b75-bf3d-d3abe5e9576b',\n     'Host',\n     'localhost:3000',\n     'Accept-Encoding',\n     'gzip, deflate, br',\n     'Connection',\n     'keep-alive',\n     'Content-Length',\n     '1674' ],\n  trailers: {},\n  rawTrailers: [],\n  upgrade: false,\n  url: '/digit_endorsment',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 43618,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50343 } },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/quote',\n  originalUrl: '/quote/digit_endorsment',\n  _parsedUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  params: {},\n  query: {},\n  res: \n   ServerResponse {\n     domain: null,\n     _events: { finish: [Object], end: [Function: onevent] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     output: [],\n     outputEncodings: [],\n     outputCallbacks: [],\n     outputSize: 0,\n     writable: true,\n     _last: false,\n     upgrading: false,\n     chunkedEncoding: false,\n     shouldKeepAlive: true,\n     useChunkedEncodingByDefault: true,\n     sendDate: true,\n     _removedHeader: {},\n     _contentLength: null,\n     _hasBody: true,\n     _trailer: '',\n     finished: false,\n     _headerSent: false,\n     socket: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 43618,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     connection: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 43618,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     _header: null,\n     _headers: \n      { 'x-powered-by': 'Express',\n        'access-control-allow-credentials': 'true',\n        'access-control-allow-headers': 'X-Requested-With, Content-Type',\n        'access-control-allow-origin': '*' },\n     _headerNames: \n      { 'x-powered-by': 'X-Powered-By',\n        'access-control-allow-credentials': 'Access-Control-Allow-Credentials',\n        'access-control-allow-headers': 'Access-Control-Allow-Headers',\n        'access-control-allow-origin': 'Access-Control-Allow-Origin' },\n     _onPendingData: [Function: updateOutgoingData],\n     req: [Circular],\n     locals: {},\n     writeHead: [Function: writeHead],\n     end: [Function: end],\n     _startAt: undefined,\n     _startTime: undefined,\n     __onFinished: { [Function: listener] queue: [Object] } },\n  _parsedOriginalUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/quote/digit_endorsment',\n     path: '/quote/digit_endorsment',\n     href: '/quote/digit_endorsment',\n     _raw: '/quote/digit_endorsment' },\n  sessionStore: \n   MemoryStore {\n     domain: null,\n     _events: \n      { disconnect: [Function: ondisconnect],\n        connect: [Function: onconnect] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     sessions: {},\n     generate: [Function] },\n  sessionID: 'CleftS-mg3wQ9q8NNg9n3ae4sOBerSqH',\n  session: \n   Session {\n     cookie: \n      { path: '/',\n        _expires: 2022-01-13T06:55:40.264Z,\n        originalMaxAge: 600000,\n        httpOnly: true } },\n  body: \n   { product_id: 10,\n     vehicle_id: '50747',\n     rto_id: '580',\n     vehicle_insurance_type: 'renew',\n     vehicle_registration_date: '2018-01-10',\n     vehicle_manf_date: '2018-01-01',\n     policy_expiry_date: '',\n     prev_insurer_id: '2',\n     vehicle_registration_type: 'individual',\n     vehicle_ncb_current: '0',\n     is_claim_exists: 'yes',\n     method_type: 'Premium',\n     execution_async: 'yes',\n     electrical_accessory: 0,\n     non_electrical_accessory: 0,\n     is_llpd: 'no',\n     is_antitheft_fit: 'no',\n     is_external_bifuel: '',\n     is_aai_member: 'no',\n     external_bifuel_type: '',\n     external_bifuel_value: '0',\n     pa_owner_driver_si: '1500000',\n     is_pa_od: 'yes',\n     is_having_valid_dl: 'no',\n     is_opted_standalone_cpa: 'yes',\n     pa_paid_driver_si: '0',\n     first_name: 'TETS',\n     mobile: '9436578643',\n     email: 'test@ters.com',\n     crn: '1052072',\n     ss_id: '819',\n     client_id: 2,\n     fba_id: '0',\n     geo_lat: 0,\n     geo_long: 0,\n     agent_source: '',\n     app_version: '2.0',\n     vehicle_insurance_subtype: '1CH_0TP',\n     secret_key: 'SECRET-HZ07QRWY-JIBT-XRMQ-ZP95-J0RWP3DYRACW',\n     client_key: 'CLIENT-CNTP6NYE-CU9N-DUZW-CSPI-SH1IS4DOVHB9',\n     is_breakin: 'yes',\n     is_fastlane_rto: false,\n     is_inspection_done: 'no',\n     is_policy_exist: 'no',\n     is_tp_policy_exists: 'yes',\n     is_financed: 'no',\n     is_oslc: 'no',\n     oslc_si: 0,\n     sub_fba_id: 0,\n     is_helmet_cover: 'no',\n     helmet_cover_si: 0,\n     registration_no: 'MH02AA1234',\n     ip_city_state: 'Mumbai_Maharashtra' },\n  _body: true,\n  length: undefined,\n  read: [Function],\n  route: \n   Route {\n     path: '/digit_endorsment',\n     stack: [ [Object] ],\n     methods: { post: true } },\n  _startAt: [ 3757, 126014700 ],\n  _startTime: 2022-01-13T06:45:40.287Z,\n  _remoteAddress: '::1',\n  secret: undefined,\n  cookies: {},\n  signedCookies: {} }","timestamp":"12:15:43 PM"}
{"level":"info","message":"{\"person\":[{\"individual\":{\"title\":\"___title___\"},\"identificationDocuments\":[{\"documentType\":\"AADHAR_CARD\",\"documentId\":\"___adhar_Id___\"},{\"documentType\":\"PAN_CARD\",\"documentId\":\"___pan_Id___\"}],\"communications\":[{\"isPrefferedCommunication\":true,\"communicationType\":\"MOBILE\",\"communicationId\":\"___mobileId___\"},{\"isPrefferedCommunication\":true,\"communicationType\":\"EMAIL\",\"communicationId\":\"___emailId___\"}],\"address\":[{\"addressType\":\"___addressType_1___\",\"street\":\"___street_pr___\",\"streetNumber\":\"___streetno_pr___\"},{\"addressType\":\"___addressType_2___\",\"street\":\"___street_sr___\",\"streetNumber\":\"___streetno_sr___\",\"district\":\"___district_sr___\",\"city\":\"___city_sr___\",\"country\":\"IN\",\"pincode\":\"___pincode_sr___\"},{\"addressType\":\"___addressType_3___\",\"street\":\"___street_hq___\",\"streetNumber\":\"___streetno_hq___\"},{\"addressType\":\"___addressType_4___\",\"street\":\"___street_reg___\",\"streetNumber\":\"___street_no_reg___\",\"district\":\"___district_reg___\",\"city\":\"___city_reg___\",\"country\":\"IN\",\"pincode\":\"___pincode_reg___\"},{\"addressType\":\"___addressType_5___\",\"street\":\"___street_br___\",\"streetNumber\":\"___street_no_br___\",\"district\":\"___district_br___\",\"city\":\"___city_br___\",\"country\":\"IN\",\"pincode\":\"___pincode_br___\"}]}],\"nominee\":{\"firstName\":\"____firstName______\",\"lastName\":\"___lastName___\",\"dateOfBirth\":\"___dateOfBirth___\",\"relation\":\"___relation___\"},\"financer\":\"___financer___\"}","timestamp":"12:16:05 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"12:17:06 PM"}
{"meta":"","level":"info","message":"","timestamp":"12:17:06 PM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"12:17:06 PM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"12:17:06 PM"}
{"meta":"","level":"info","message":"","timestamp":"12:17:06 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"12:17:06 PM"}
{"meta":"","level":"info","message":"","timestamp":"12:17:06 PM"}
{"level":"info","message":"digit_endorsment s","timestamp":"12:17:13 PM"}
{"level":"info","message":"IncomingMessage {\n  _readableState: \n   ReadableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     buffer: BufferList { head: null, tail: null, length: 0 },\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: true,\n     ended: true,\n     endEmitted: true,\n     reading: false,\n     sync: false,\n     needReadable: false,\n     emittedReadable: false,\n     readableListening: false,\n     resumeScheduled: false,\n     defaultEncoding: 'utf8',\n     ranOut: false,\n     awaitDrain: 0,\n     readingMore: false,\n     decoder: null,\n     encoding: null },\n  readable: false,\n  domain: null,\n  _events: {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 42816,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50374 } },\n  connection: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 42816,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50374 } },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  headers: \n   { 'content-type': 'application/json',\n     'user-agent': 'PostmanRuntime/7.26.8',\n     accept: '*/*',\n     'cache-control': 'no-cache',\n     'postman-token': 'f5c93013-c26a-4af1-b2c7-f42dd2ed9e60',\n     host: 'localhost:3000',\n     'accept-encoding': 'gzip, deflate, br',\n     connection: 'keep-alive',\n     'content-length': '1674' },\n  rawHeaders: \n   [ 'Content-Type',\n     'application/json',\n     'User-Agent',\n     'PostmanRuntime/7.26.8',\n     'Accept',\n     '*/*',\n     'Cache-Control',\n     'no-cache',\n     'Postman-Token',\n     'f5c93013-c26a-4af1-b2c7-f42dd2ed9e60',\n     'Host',\n     'localhost:3000',\n     'Accept-Encoding',\n     'gzip, deflate, br',\n     'Connection',\n     'keep-alive',\n     'Content-Length',\n     '1674' ],\n  trailers: {},\n  rawTrailers: [],\n  upgrade: false,\n  url: '/digit_endorsment',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 42816,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50374 } },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/quote',\n  originalUrl: '/quote/digit_endorsment',\n  _parsedUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  params: {},\n  query: {},\n  res: \n   ServerResponse {\n     domain: null,\n     _events: { finish: [Object], end: [Function: onevent] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     output: [],\n     outputEncodings: [],\n     outputCallbacks: [],\n     outputSize: 0,\n     writable: true,\n     _last: false,\n     upgrading: false,\n     chunkedEncoding: false,\n     shouldKeepAlive: true,\n     useChunkedEncodingByDefault: true,\n     sendDate: true,\n     _removedHeader: {},\n     _contentLength: null,\n     _hasBody: true,\n     _trailer: '',\n     finished: false,\n     _headerSent: false,\n     socket: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 42816,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     connection: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 42816,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     _header: null,\n     _headers: \n      { 'x-powered-by': 'Express',\n        'access-control-allow-credentials': 'true',\n        'access-control-allow-headers': 'X-Requested-With, Content-Type',\n        'access-control-allow-origin': '*' },\n     _headerNames: \n      { 'x-powered-by': 'X-Powered-By',\n        'access-control-allow-credentials': 'Access-Control-Allow-Credentials',\n        'access-control-allow-headers': 'Access-Control-Allow-Headers',\n        'access-control-allow-origin': 'Access-Control-Allow-Origin' },\n     _onPendingData: [Function: updateOutgoingData],\n     req: [Circular],\n     locals: {},\n     writeHead: [Function: writeHead],\n     end: [Function: end],\n     _startAt: undefined,\n     _startTime: undefined,\n     __onFinished: { [Function: listener] queue: [Object] } },\n  _parsedOriginalUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/quote/digit_endorsment',\n     path: '/quote/digit_endorsment',\n     href: '/quote/digit_endorsment',\n     _raw: '/quote/digit_endorsment' },\n  sessionStore: \n   MemoryStore {\n     domain: null,\n     _events: \n      { disconnect: [Function: ondisconnect],\n        connect: [Function: onconnect] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     sessions: {},\n     generate: [Function] },\n  sessionID: 'AGbDySNL5viOeysPr0uVobg1Awf_0JSm',\n  session: \n   Session {\n     cookie: \n      { path: '/',\n        _expires: 2022-01-13T06:57:09.971Z,\n        originalMaxAge: 600000,\n        httpOnly: true } },\n  body: \n   { product_id: 10,\n     vehicle_id: '50747',\n     rto_id: '580',\n     vehicle_insurance_type: 'renew',\n     vehicle_registration_date: '2018-01-10',\n     vehicle_manf_date: '2018-01-01',\n     policy_expiry_date: '',\n     prev_insurer_id: '2',\n     vehicle_registration_type: 'individual',\n     vehicle_ncb_current: '0',\n     is_claim_exists: 'yes',\n     method_type: 'Premium',\n     execution_async: 'yes',\n     electrical_accessory: 0,\n     non_electrical_accessory: 0,\n     is_llpd: 'no',\n     is_antitheft_fit: 'no',\n     is_external_bifuel: '',\n     is_aai_member: 'no',\n     external_bifuel_type: '',\n     external_bifuel_value: '0',\n     pa_owner_driver_si: '1500000',\n     is_pa_od: 'yes',\n     is_having_valid_dl: 'no',\n     is_opted_standalone_cpa: 'yes',\n     pa_paid_driver_si: '0',\n     first_name: 'TETS',\n     mobile: '9436578643',\n     email: 'test@ters.com',\n     crn: '1052072',\n     ss_id: '819',\n     client_id: 2,\n     fba_id: '0',\n     geo_lat: 0,\n     geo_long: 0,\n     agent_source: '',\n     app_version: '2.0',\n     vehicle_insurance_subtype: '1CH_0TP',\n     secret_key: 'SECRET-HZ07QRWY-JIBT-XRMQ-ZP95-J0RWP3DYRACW',\n     client_key: 'CLIENT-CNTP6NYE-CU9N-DUZW-CSPI-SH1IS4DOVHB9',\n     is_breakin: 'yes',\n     is_fastlane_rto: false,\n     is_inspection_done: 'no',\n     is_policy_exist: 'no',\n     is_tp_policy_exists: 'yes',\n     is_financed: 'no',\n     is_oslc: 'no',\n     oslc_si: 0,\n     sub_fba_id: 0,\n     is_helmet_cover: 'no',\n     helmet_cover_si: 0,\n     registration_no: 'MH02AA1234',\n     ip_city_state: 'Mumbai_Maharashtra' },\n  _body: true,\n  length: undefined,\n  read: [Function],\n  route: \n   Route {\n     path: '/digit_endorsment',\n     stack: [ [Object] ],\n     methods: { post: true } },\n  _startAt: [ 3846, 832718500 ],\n  _startTime: 2022-01-13T06:47:09.994Z,\n  _remoteAddress: '::1',\n  secret: undefined,\n  cookies: {},\n  signedCookies: {} }","timestamp":"12:17:15 PM"}
{"level":"info","message":"{\"person\":[{\"individual\":{\"title\":\"___title___\"},\"identificationDocuments\":[{\"documentType\":\"AADHAR_CARD\",\"documentId\":\"___adhar_Id___\"},{\"documentType\":\"PAN_CARD\",\"documentId\":\"___pan_Id___\"}],\"communications\":[{\"isPrefferedCommunication\":true,\"communicationType\":\"MOBILE\",\"communicationId\":\"___mobileId___\"},{\"isPrefferedCommunication\":true,\"communicationType\":\"EMAIL\",\"communicationId\":\"___emailId___\"}],\"address\":[{\"addressType\":\"___addressType_1___\",\"street\":\"___street_pr___\",\"streetNumber\":\"___streetno_pr___\"},{\"addressType\":\"___addressType_2___\",\"street\":\"___street_sr___\",\"streetNumber\":\"___streetno_sr___\",\"district\":\"___district_sr___\",\"city\":\"___city_sr___\",\"country\":\"IN\",\"pincode\":\"___pincode_sr___\"},{\"addressType\":\"___addressType_3___\",\"street\":\"___street_hq___\",\"streetNumber\":\"___streetno_hq___\"},{\"addressType\":\"___addressType_4___\",\"street\":\"___street_reg___\",\"streetNumber\":\"___street_no_reg___\",\"district\":\"___district_reg___\",\"city\":\"___city_reg___\",\"country\":\"IN\",\"pincode\":\"___pincode_reg___\"},{\"addressType\":\"___addressType_5___\",\"street\":\"___street_br___\",\"streetNumber\":\"___street_no_br___\",\"district\":\"___district_br___\",\"city\":\"___city_br___\",\"country\":\"IN\",\"pincode\":\"___pincode_br___\"}]}],\"nominee\":{\"firstName\":\"____firstName______\",\"lastName\":\"___lastName___\",\"dateOfBirth\":\"___dateOfBirth___\",\"relation\":\"___relation___\"},\"financer\":\"___financer___\"}","timestamp":"12:17:34 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"12:49:22 PM"}
{"meta":"","level":"info","message":"","timestamp":"12:49:22 PM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"12:49:22 PM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"12:49:22 PM"}
{"meta":"","level":"info","message":"","timestamp":"12:49:22 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"12:49:22 PM"}
{"meta":"","level":"info","message":"","timestamp":"12:49:22 PM"}
{"level":"info","message":"digit_endorsment s","timestamp":"12:49:28 PM"}
{"level":"info","message":"IncomingMessage {\n  _readableState: \n   ReadableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     buffer: BufferList { head: null, tail: null, length: 0 },\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: true,\n     ended: true,\n     endEmitted: true,\n     reading: false,\n     sync: false,\n     needReadable: false,\n     emittedReadable: false,\n     readableListening: false,\n     resumeScheduled: false,\n     defaultEncoding: 'utf8',\n     ranOut: false,\n     awaitDrain: 0,\n     readingMore: false,\n     decoder: null,\n     encoding: null },\n  readable: false,\n  domain: null,\n  _events: {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 46946,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50642 } },\n  connection: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 46946,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50642 } },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  headers: \n   { 'content-type': 'application/json',\n     'user-agent': 'PostmanRuntime/7.26.8',\n     accept: '*/*',\n     'cache-control': 'no-cache',\n     'postman-token': '65f1846b-6395-4238-a02f-612fdac5d852',\n     host: 'localhost:3000',\n     'accept-encoding': 'gzip, deflate, br',\n     connection: 'keep-alive',\n     'content-length': '1674' },\n  rawHeaders: \n   [ 'Content-Type',\n     'application/json',\n     'User-Agent',\n     'PostmanRuntime/7.26.8',\n     'Accept',\n     '*/*',\n     'Cache-Control',\n     'no-cache',\n     'Postman-Token',\n     '65f1846b-6395-4238-a02f-612fdac5d852',\n     'Host',\n     'localhost:3000',\n     'Accept-Encoding',\n     'gzip, deflate, br',\n     'Connection',\n     'keep-alive',\n     'Content-Length',\n     '1674' ],\n  trailers: {},\n  rawTrailers: [],\n  upgrade: false,\n  url: '/digit_endorsment',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 46946,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50642 } },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/quote',\n  originalUrl: '/quote/digit_endorsment',\n  _parsedUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  params: {},\n  query: {},\n  res: \n   ServerResponse {\n     domain: null,\n     _events: { finish: [Object], end: [Function: onevent] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     output: [],\n     outputEncodings: [],\n     outputCallbacks: [],\n     outputSize: 0,\n     writable: true,\n     _last: false,\n     upgrading: false,\n     chunkedEncoding: false,\n     shouldKeepAlive: true,\n     useChunkedEncodingByDefault: true,\n     sendDate: true,\n     _removedHeader: {},\n     _contentLength: null,\n     _hasBody: true,\n     _trailer: '',\n     finished: false,\n     _headerSent: false,\n     socket: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 46946,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     connection: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 46946,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     _header: null,\n     _headers: \n      { 'x-powered-by': 'Express',\n        'access-control-allow-credentials': 'true',\n        'access-control-allow-headers': 'X-Requested-With, Content-Type',\n        'access-control-allow-origin': '*' },\n     _headerNames: \n      { 'x-powered-by': 'X-Powered-By',\n        'access-control-allow-credentials': 'Access-Control-Allow-Credentials',\n        'access-control-allow-headers': 'Access-Control-Allow-Headers',\n        'access-control-allow-origin': 'Access-Control-Allow-Origin' },\n     _onPendingData: [Function: updateOutgoingData],\n     req: [Circular],\n     locals: {},\n     writeHead: [Function: writeHead],\n     end: [Function: end],\n     _startAt: undefined,\n     _startTime: undefined,\n     __onFinished: { [Function: listener] queue: [Object] } },\n  _parsedOriginalUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/quote/digit_endorsment',\n     path: '/quote/digit_endorsment',\n     href: '/quote/digit_endorsment',\n     _raw: '/quote/digit_endorsment' },\n  sessionStore: \n   MemoryStore {\n     domain: null,\n     _events: \n      { disconnect: [Function: ondisconnect],\n        connect: [Function: onconnect] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     sessions: {},\n     generate: [Function] },\n  sessionID: '7Y4eSoZSFkDh6sjrAcRmP64z56tGNe6_',\n  session: \n   Session {\n     cookie: \n      { path: '/',\n        _expires: 2022-01-13T07:29:28.784Z,\n        originalMaxAge: 600000,\n        httpOnly: true } },\n  body: \n   { product_id: 10,\n     vehicle_id: '50747',\n     rto_id: '580',\n     vehicle_insurance_type: 'renew',\n     vehicle_registration_date: '2018-01-10',\n     vehicle_manf_date: '2018-01-01',\n     policy_expiry_date: '',\n     prev_insurer_id: '2',\n     vehicle_registration_type: 'individual',\n     vehicle_ncb_current: '0',\n     is_claim_exists: 'yes',\n     method_type: 'Premium',\n     execution_async: 'yes',\n     electrical_accessory: 0,\n     non_electrical_accessory: 0,\n     is_llpd: 'no',\n     is_antitheft_fit: 'no',\n     is_external_bifuel: '',\n     is_aai_member: 'no',\n     external_bifuel_type: '',\n     external_bifuel_value: '0',\n     pa_owner_driver_si: '1500000',\n     is_pa_od: 'yes',\n     is_having_valid_dl: 'no',\n     is_opted_standalone_cpa: 'yes',\n     pa_paid_driver_si: '0',\n     first_name: 'TETS',\n     mobile: '9436578643',\n     email: 'test@ters.com',\n     crn: '1052072',\n     ss_id: '819',\n     client_id: 2,\n     fba_id: '0',\n     geo_lat: 0,\n     geo_long: 0,\n     agent_source: '',\n     app_version: '2.0',\n     vehicle_insurance_subtype: '1CH_0TP',\n     secret_key: 'SECRET-HZ07QRWY-JIBT-XRMQ-ZP95-J0RWP3DYRACW',\n     client_key: 'CLIENT-CNTP6NYE-CU9N-DUZW-CSPI-SH1IS4DOVHB9',\n     is_breakin: 'yes',\n     is_fastlane_rto: false,\n     is_inspection_done: 'no',\n     is_policy_exist: 'no',\n     is_tp_policy_exists: 'yes',\n     is_financed: 'no',\n     is_oslc: 'no',\n     oslc_si: 0,\n     sub_fba_id: 0,\n     is_helmet_cover: 'no',\n     helmet_cover_si: 0,\n     registration_no: 'MH02AA1234',\n     ip_city_state: 'Mumbai_Maharashtra' },\n  _body: true,\n  length: undefined,\n  read: [Function],\n  route: \n   Route {\n     path: '/digit_endorsment',\n     stack: [ [Object] ],\n     methods: { post: true } },\n  _startAt: [ 5785, 652009800 ],\n  _startTime: 2022-01-13T07:19:28.814Z,\n  _remoteAddress: '::1',\n  secret: undefined,\n  cookies: {},\n  signedCookies: {} }","timestamp":"12:49:29 PM"}
{"level":"info","message":"digit_endorsment s","timestamp":"12:49:39 PM"}
{"level":"info","message":"IncomingMessage {\n  _readableState: \n   ReadableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     buffer: BufferList { head: null, tail: null, length: 0 },\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: true,\n     ended: true,\n     endEmitted: true,\n     reading: false,\n     sync: false,\n     needReadable: false,\n     emittedReadable: false,\n     readableListening: false,\n     resumeScheduled: false,\n     defaultEncoding: 'utf8',\n     ranOut: false,\n     awaitDrain: 0,\n     readingMore: false,\n     decoder: null,\n     encoding: null },\n  readable: false,\n  domain: null,\n  _events: {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 57385,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50645 } },\n  connection: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 57385,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50645 } },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  headers: \n   { 'content-type': 'application/json',\n     'user-agent': 'PostmanRuntime/7.26.8',\n     accept: '*/*',\n     'cache-control': 'no-cache',\n     'postman-token': '9f59df27-8c2e-4fdb-98f9-f66dd14167a4',\n     host: 'localhost:3000',\n     'accept-encoding': 'gzip, deflate, br',\n     connection: 'keep-alive',\n     'content-length': '1674' },\n  rawHeaders: \n   [ 'Content-Type',\n     'application/json',\n     'User-Agent',\n     'PostmanRuntime/7.26.8',\n     'Accept',\n     '*/*',\n     'Cache-Control',\n     'no-cache',\n     'Postman-Token',\n     '9f59df27-8c2e-4fdb-98f9-f66dd14167a4',\n     'Host',\n     'localhost:3000',\n     'Accept-Encoding',\n     'gzip, deflate, br',\n     'Connection',\n     'keep-alive',\n     'Content-Length',\n     '1674' ],\n  trailers: {},\n  rawTrailers: [],\n  upgrade: false,\n  url: '/digit_endorsment',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 57385,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50645 } },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/quote',\n  originalUrl: '/quote/digit_endorsment',\n  _parsedUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  params: {},\n  query: {},\n  res: \n   ServerResponse {\n     domain: null,\n     _events: { finish: [Object], end: [Function: onevent] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     output: [],\n     outputEncodings: [],\n     outputCallbacks: [],\n     outputSize: 0,\n     writable: true,\n     _last: false,\n     upgrading: false,\n     chunkedEncoding: false,\n     shouldKeepAlive: true,\n     useChunkedEncodingByDefault: true,\n     sendDate: true,\n     _removedHeader: {},\n     _contentLength: null,\n     _hasBody: true,\n     _trailer: '',\n     finished: false,\n     _headerSent: false,\n     socket: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 57385,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     connection: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 57385,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     _header: null,\n     _headers: \n      { 'x-powered-by': 'Express',\n        'access-control-allow-credentials': 'true',\n        'access-control-allow-headers': 'X-Requested-With, Content-Type',\n        'access-control-allow-origin': '*' },\n     _headerNames: \n      { 'x-powered-by': 'X-Powered-By',\n        'access-control-allow-credentials': 'Access-Control-Allow-Credentials',\n        'access-control-allow-headers': 'Access-Control-Allow-Headers',\n        'access-control-allow-origin': 'Access-Control-Allow-Origin' },\n     _onPendingData: [Function: updateOutgoingData],\n     req: [Circular],\n     locals: {},\n     writeHead: [Function: writeHead],\n     end: [Function: end],\n     _startAt: undefined,\n     _startTime: undefined,\n     __onFinished: { [Function: listener] queue: [Object] } },\n  _parsedOriginalUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/quote/digit_endorsment',\n     path: '/quote/digit_endorsment',\n     href: '/quote/digit_endorsment',\n     _raw: '/quote/digit_endorsment' },\n  sessionStore: \n   MemoryStore {\n     domain: null,\n     _events: \n      { disconnect: [Function: ondisconnect],\n        connect: [Function: onconnect] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     sessions: {},\n     generate: [Function] },\n  sessionID: 'IJUwG_asXqbAFhTF8Deu_NVRuSJpXxPv',\n  session: \n   Session {\n     cookie: \n      { path: '/',\n        _expires: 2022-01-13T07:29:39.240Z,\n        originalMaxAge: 600000,\n        httpOnly: true } },\n  body: \n   { product_id: 10,\n     vehicle_id: '50747',\n     rto_id: '580',\n     vehicle_insurance_type: 'renew',\n     vehicle_registration_date: '2018-01-10',\n     vehicle_manf_date: '2018-01-01',\n     policy_expiry_date: '',\n     prev_insurer_id: '2',\n     vehicle_registration_type: 'individual',\n     vehicle_ncb_current: '0',\n     is_claim_exists: 'yes',\n     method_type: 'Premium',\n     execution_async: 'yes',\n     electrical_accessory: 0,\n     non_electrical_accessory: 0,\n     is_llpd: 'no',\n     is_antitheft_fit: 'no',\n     is_external_bifuel: '',\n     is_aai_member: 'no',\n     external_bifuel_type: '',\n     external_bifuel_value: '0',\n     pa_owner_driver_si: '1500000',\n     is_pa_od: 'yes',\n     is_having_valid_dl: 'no',\n     is_opted_standalone_cpa: 'yes',\n     pa_paid_driver_si: '0',\n     first_name: 'TETS',\n     mobile: '9436578643',\n     email: 'test@ters.com',\n     crn: '1052072',\n     ss_id: '819',\n     client_id: 2,\n     fba_id: '0',\n     geo_lat: 0,\n     geo_long: 0,\n     agent_source: '',\n     app_version: '2.0',\n     vehicle_insurance_subtype: '1CH_0TP',\n     secret_key: 'SECRET-HZ07QRWY-JIBT-XRMQ-ZP95-J0RWP3DYRACW',\n     client_key: 'CLIENT-CNTP6NYE-CU9N-DUZW-CSPI-SH1IS4DOVHB9',\n     is_breakin: 'yes',\n     is_fastlane_rto: false,\n     is_inspection_done: 'no',\n     is_policy_exist: 'no',\n     is_tp_policy_exists: 'yes',\n     is_financed: 'no',\n     is_oslc: 'no',\n     oslc_si: 0,\n     sub_fba_id: 0,\n     is_helmet_cover: 'no',\n     helmet_cover_si: 0,\n     registration_no: 'MH02AA1234',\n     ip_city_state: 'Mumbai_Maharashtra' },\n  _body: true,\n  length: undefined,\n  read: [Function],\n  route: \n   Route {\n     path: '/digit_endorsment',\n     stack: [ [Object] ],\n     methods: { post: true } },\n  _startAt: [ 5796, 81029900 ],\n  _startTime: 2022-01-13T07:19:39.243Z,\n  _remoteAddress: '::1',\n  secret: undefined,\n  cookies: {},\n  signedCookies: {} }","timestamp":"12:51:27 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"12:52:50 PM"}
{"meta":"","level":"info","message":"","timestamp":"12:52:50 PM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"12:52:50 PM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"12:52:50 PM"}
{"meta":"","level":"info","message":"","timestamp":"12:52:50 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"12:52:50 PM"}
{"meta":"","level":"info","message":"","timestamp":"12:52:50 PM"}
{"level":"info","message":"digit_endorsment s","timestamp":"12:53:16 PM"}
{"level":"info","message":"IncomingMessage {\n  _readableState: \n   ReadableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     buffer: BufferList { head: null, tail: null, length: 0 },\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: true,\n     ended: true,\n     endEmitted: true,\n     reading: false,\n     sync: false,\n     needReadable: false,\n     emittedReadable: false,\n     readableListening: false,\n     resumeScheduled: false,\n     defaultEncoding: 'utf8',\n     ranOut: false,\n     awaitDrain: 0,\n     readingMore: false,\n     decoder: null,\n     encoding: null },\n  readable: false,\n  domain: null,\n  _events: {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 66211,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50699 } },\n  connection: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 66211,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50699 } },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  headers: \n   { 'content-type': 'application/json',\n     'user-agent': 'PostmanRuntime/7.26.8',\n     accept: '*/*',\n     'cache-control': 'no-cache',\n     'postman-token': '3b25d9b1-8b69-4809-94e5-33339b9a2939',\n     host: 'localhost:3000',\n     'accept-encoding': 'gzip, deflate, br',\n     connection: 'keep-alive',\n     'content-length': '1674' },\n  rawHeaders: \n   [ 'Content-Type',\n     'application/json',\n     'User-Agent',\n     'PostmanRuntime/7.26.8',\n     'Accept',\n     '*/*',\n     'Cache-Control',\n     'no-cache',\n     'Postman-Token',\n     '3b25d9b1-8b69-4809-94e5-33339b9a2939',\n     'Host',\n     'localhost:3000',\n     'Accept-Encoding',\n     'gzip, deflate, br',\n     'Connection',\n     'keep-alive',\n     'Content-Length',\n     '1674' ],\n  trailers: {},\n  rawTrailers: [],\n  upgrade: false,\n  url: '/digit_endorsment',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 66211,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50699 } },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/quote',\n  originalUrl: '/quote/digit_endorsment',\n  _parsedUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  params: {},\n  query: {},\n  res: \n   ServerResponse {\n     domain: null,\n     _events: { finish: [Object], end: [Function: onevent] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     output: [],\n     outputEncodings: [],\n     outputCallbacks: [],\n     outputSize: 0,\n     writable: true,\n     _last: false,\n     upgrading: false,\n     chunkedEncoding: false,\n     shouldKeepAlive: true,\n     useChunkedEncodingByDefault: true,\n     sendDate: true,\n     _removedHeader: {},\n     _contentLength: null,\n     _hasBody: true,\n     _trailer: '',\n     finished: false,\n     _headerSent: false,\n     socket: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 66211,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     connection: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 66211,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     _header: null,\n     _headers: \n      { 'x-powered-by': 'Express',\n        'access-control-allow-credentials': 'true',\n        'access-control-allow-headers': 'X-Requested-With, Content-Type',\n        'access-control-allow-origin': '*' },\n     _headerNames: \n      { 'x-powered-by': 'X-Powered-By',\n        'access-control-allow-credentials': 'Access-Control-Allow-Credentials',\n        'access-control-allow-headers': 'Access-Control-Allow-Headers',\n        'access-control-allow-origin': 'Access-Control-Allow-Origin' },\n     _onPendingData: [Function: updateOutgoingData],\n     req: [Circular],\n     locals: {},\n     writeHead: [Function: writeHead],\n     end: [Function: end],\n     _startAt: undefined,\n     _startTime: undefined,\n     __onFinished: { [Function: listener] queue: [Object] } },\n  _parsedOriginalUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/quote/digit_endorsment',\n     path: '/quote/digit_endorsment',\n     href: '/quote/digit_endorsment',\n     _raw: '/quote/digit_endorsment' },\n  sessionStore: \n   MemoryStore {\n     domain: null,\n     _events: \n      { disconnect: [Function: ondisconnect],\n        connect: [Function: onconnect] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     sessions: {},\n     generate: [Function] },\n  sessionID: 'gdfOH35K3HZJZBV9MUNLFrT6qMtgxuc1',\n  session: \n   Session {\n     cookie: \n      { path: '/',\n        _expires: 2022-01-13T07:33:16.627Z,\n        originalMaxAge: 600000,\n        httpOnly: true } },\n  body: \n   { product_id: 10,\n     vehicle_id: '50747',\n     rto_id: '580',\n     vehicle_insurance_type: 'renew',\n     vehicle_registration_date: '2018-01-10',\n     vehicle_manf_date: '2018-01-01',\n     policy_expiry_date: '',\n     prev_insurer_id: '2',\n     vehicle_registration_type: 'individual',\n     vehicle_ncb_current: '0',\n     is_claim_exists: 'yes',\n     method_type: 'Premium',\n     execution_async: 'yes',\n     electrical_accessory: 0,\n     non_electrical_accessory: 0,\n     is_llpd: 'no',\n     is_antitheft_fit: 'no',\n     is_external_bifuel: '',\n     is_aai_member: 'no',\n     external_bifuel_type: '',\n     external_bifuel_value: '0',\n     pa_owner_driver_si: '1500000',\n     is_pa_od: 'yes',\n     is_having_valid_dl: 'no',\n     is_opted_standalone_cpa: 'yes',\n     pa_paid_driver_si: '0',\n     first_name: 'TETS',\n     mobile: '9436578643',\n     email: 'test@ters.com',\n     crn: '1052072',\n     ss_id: '819',\n     client_id: 2,\n     fba_id: '0',\n     geo_lat: 0,\n     geo_long: 0,\n     agent_source: '',\n     app_version: '2.0',\n     vehicle_insurance_subtype: '1CH_0TP',\n     secret_key: 'SECRET-HZ07QRWY-JIBT-XRMQ-ZP95-J0RWP3DYRACW',\n     client_key: 'CLIENT-CNTP6NYE-CU9N-DUZW-CSPI-SH1IS4DOVHB9',\n     is_breakin: 'yes',\n     is_fastlane_rto: false,\n     is_inspection_done: 'no',\n     is_policy_exist: 'no',\n     is_tp_policy_exists: 'yes',\n     is_financed: 'no',\n     is_oslc: 'no',\n     oslc_si: 0,\n     sub_fba_id: 0,\n     is_helmet_cover: 'no',\n     helmet_cover_si: 0,\n     registration_no: 'MH02AA1234',\n     ip_city_state: 'Mumbai_Maharashtra' },\n  _body: true,\n  length: undefined,\n  read: [Function],\n  route: \n   Route {\n     path: '/digit_endorsment',\n     stack: [ [Object] ],\n     methods: { post: true } },\n  _startAt: [ 6013, 489253700 ],\n  _startTime: 2022-01-13T07:23:16.652Z,\n  _remoteAddress: '::1',\n  secret: undefined,\n  cookies: {},\n  signedCookies: {} }","timestamp":"12:53:18 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"12:55:37 PM"}
{"meta":"","level":"info","message":"","timestamp":"12:55:37 PM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"12:55:37 PM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"12:55:37 PM"}
{"meta":"","level":"info","message":"","timestamp":"12:55:37 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"12:55:37 PM"}
{"meta":"","level":"info","message":"","timestamp":"12:55:37 PM"}
{"level":"info","message":"digit_endorsment s","timestamp":"12:55:54 PM"}
{"level":"info","message":"IncomingMessage {\n  _readableState: \n   ReadableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     buffer: BufferList { head: null, tail: null, length: 0 },\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: true,\n     ended: true,\n     endEmitted: true,\n     reading: false,\n     sync: false,\n     needReadable: false,\n     emittedReadable: false,\n     readableListening: false,\n     resumeScheduled: false,\n     defaultEncoding: 'utf8',\n     ranOut: false,\n     awaitDrain: 0,\n     readingMore: false,\n     decoder: null,\n     encoding: null },\n  readable: false,\n  domain: null,\n  _events: {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 55202,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50735 } },\n  connection: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 55202,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50735 } },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  headers: \n   { 'content-type': 'application/json',\n     'user-agent': 'PostmanRuntime/7.26.8',\n     accept: '*/*',\n     'cache-control': 'no-cache',\n     'postman-token': 'd0706671-021d-48ff-8dcc-c8307cfb1c34',\n     host: 'localhost:3000',\n     'accept-encoding': 'gzip, deflate, br',\n     connection: 'keep-alive',\n     'content-length': '1674' },\n  rawHeaders: \n   [ 'Content-Type',\n     'application/json',\n     'User-Agent',\n     'PostmanRuntime/7.26.8',\n     'Accept',\n     '*/*',\n     'Cache-Control',\n     'no-cache',\n     'Postman-Token',\n     'd0706671-021d-48ff-8dcc-c8307cfb1c34',\n     'Host',\n     'localhost:3000',\n     'Accept-Encoding',\n     'gzip, deflate, br',\n     'Connection',\n     'keep-alive',\n     'Content-Length',\n     '1674' ],\n  trailers: {},\n  rawTrailers: [],\n  upgrade: false,\n  url: '/digit_endorsment',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 55202,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50735 } },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/quote',\n  originalUrl: '/quote/digit_endorsment',\n  _parsedUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  params: {},\n  query: {},\n  res: \n   ServerResponse {\n     domain: null,\n     _events: { finish: [Object], end: [Function: onevent] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     output: [],\n     outputEncodings: [],\n     outputCallbacks: [],\n     outputSize: 0,\n     writable: true,\n     _last: false,\n     upgrading: false,\n     chunkedEncoding: false,\n     shouldKeepAlive: true,\n     useChunkedEncodingByDefault: true,\n     sendDate: true,\n     _removedHeader: {},\n     _contentLength: null,\n     _hasBody: true,\n     _trailer: '',\n     finished: false,\n     _headerSent: false,\n     socket: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 55202,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     connection: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 55202,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     _header: null,\n     _headers: \n      { 'x-powered-by': 'Express',\n        'access-control-allow-credentials': 'true',\n        'access-control-allow-headers': 'X-Requested-With, Content-Type',\n        'access-control-allow-origin': '*' },\n     _headerNames: \n      { 'x-powered-by': 'X-Powered-By',\n        'access-control-allow-credentials': 'Access-Control-Allow-Credentials',\n        'access-control-allow-headers': 'Access-Control-Allow-Headers',\n        'access-control-allow-origin': 'Access-Control-Allow-Origin' },\n     _onPendingData: [Function: updateOutgoingData],\n     req: [Circular],\n     locals: {},\n     writeHead: [Function: writeHead],\n     end: [Function: end],\n     _startAt: undefined,\n     _startTime: undefined,\n     __onFinished: { [Function: listener] queue: [Object] } },\n  _parsedOriginalUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/quote/digit_endorsment',\n     path: '/quote/digit_endorsment',\n     href: '/quote/digit_endorsment',\n     _raw: '/quote/digit_endorsment' },\n  sessionStore: \n   MemoryStore {\n     domain: null,\n     _events: \n      { disconnect: [Function: ondisconnect],\n        connect: [Function: onconnect] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     sessions: {},\n     generate: [Function] },\n  sessionID: 'm-JHFmXmNJNUH1EcGCtMvHzmcP4UZtP5',\n  session: \n   Session {\n     cookie: \n      { path: '/',\n        _expires: 2022-01-13T07:35:53.999Z,\n        originalMaxAge: 600000,\n        httpOnly: true } },\n  body: \n   { product_id: 10,\n     vehicle_id: '50747',\n     rto_id: '580',\n     vehicle_insurance_type: 'renew',\n     vehicle_registration_date: '2018-01-10',\n     vehicle_manf_date: '2018-01-01',\n     policy_expiry_date: '',\n     prev_insurer_id: '2',\n     vehicle_registration_type: 'individual',\n     vehicle_ncb_current: '0',\n     is_claim_exists: 'yes',\n     method_type: 'Premium',\n     execution_async: 'yes',\n     electrical_accessory: 0,\n     non_electrical_accessory: 0,\n     is_llpd: 'no',\n     is_antitheft_fit: 'no',\n     is_external_bifuel: '',\n     is_aai_member: 'no',\n     external_bifuel_type: '',\n     external_bifuel_value: '0',\n     pa_owner_driver_si: '1500000',\n     is_pa_od: 'yes',\n     is_having_valid_dl: 'no',\n     is_opted_standalone_cpa: 'yes',\n     pa_paid_driver_si: '0',\n     first_name: 'TETS',\n     mobile: '9436578643',\n     email: 'test@ters.com',\n     crn: '1052072',\n     ss_id: '819',\n     client_id: 2,\n     fba_id: '0',\n     geo_lat: 0,\n     geo_long: 0,\n     agent_source: '',\n     app_version: '2.0',\n     vehicle_insurance_subtype: '1CH_0TP',\n     secret_key: 'SECRET-HZ07QRWY-JIBT-XRMQ-ZP95-J0RWP3DYRACW',\n     client_key: 'CLIENT-CNTP6NYE-CU9N-DUZW-CSPI-SH1IS4DOVHB9',\n     is_breakin: 'yes',\n     is_fastlane_rto: false,\n     is_inspection_done: 'no',\n     is_policy_exist: 'no',\n     is_tp_policy_exists: 'yes',\n     is_financed: 'no',\n     is_oslc: 'no',\n     oslc_si: 0,\n     sub_fba_id: 0,\n     is_helmet_cover: 'no',\n     helmet_cover_si: 0,\n     registration_no: 'MH02AA1234',\n     ip_city_state: 'Mumbai_Maharashtra' },\n  _body: true,\n  length: undefined,\n  read: [Function],\n  route: \n   Route {\n     path: '/digit_endorsment',\n     stack: [ [Object] ],\n     methods: { post: true } },\n  _startAt: [ 6170, 865805200 ],\n  _startTime: 2022-01-13T07:25:54.028Z,\n  _remoteAddress: '::1',\n  secret: undefined,\n  cookies: {},\n  signedCookies: {} }","timestamp":"12:55:58 PM"}
{"level":"info","message":"digit_endorsment s","timestamp":"12:56:49 PM"}
{"level":"info","message":"IncomingMessage {\n  _readableState: \n   ReadableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     buffer: BufferList { head: null, tail: null, length: 0 },\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: true,\n     ended: true,\n     endEmitted: true,\n     reading: false,\n     sync: false,\n     needReadable: false,\n     emittedReadable: false,\n     readableListening: false,\n     resumeScheduled: false,\n     defaultEncoding: 'utf8',\n     ranOut: false,\n     awaitDrain: 0,\n     readingMore: false,\n     decoder: null,\n     encoding: null },\n  readable: false,\n  domain: null,\n  _events: {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 110510,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50741 } },\n  connection: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 110510,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50741 } },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  headers: \n   { 'content-type': 'application/json',\n     'user-agent': 'PostmanRuntime/7.26.8',\n     accept: '*/*',\n     'cache-control': 'no-cache',\n     'postman-token': '7aedfc65-be9c-4b1f-b05d-6786077a4319',\n     host: 'localhost:3000',\n     'accept-encoding': 'gzip, deflate, br',\n     connection: 'keep-alive',\n     'content-length': '1674' },\n  rawHeaders: \n   [ 'Content-Type',\n     'application/json',\n     'User-Agent',\n     'PostmanRuntime/7.26.8',\n     'Accept',\n     '*/*',\n     'Cache-Control',\n     'no-cache',\n     'Postman-Token',\n     '7aedfc65-be9c-4b1f-b05d-6786077a4319',\n     'Host',\n     'localhost:3000',\n     'Accept-Encoding',\n     'gzip, deflate, br',\n     'Connection',\n     'keep-alive',\n     'Content-Length',\n     '1674' ],\n  trailers: {},\n  rawTrailers: [],\n  upgrade: false,\n  url: '/digit_endorsment',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 110510,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50741 } },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/quote',\n  originalUrl: '/quote/digit_endorsment',\n  _parsedUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  params: {},\n  query: {},\n  res: \n   ServerResponse {\n     domain: null,\n     _events: { finish: [Object], end: [Function: onevent] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     output: [],\n     outputEncodings: [],\n     outputCallbacks: [],\n     outputSize: 0,\n     writable: true,\n     _last: false,\n     upgrading: false,\n     chunkedEncoding: false,\n     shouldKeepAlive: true,\n     useChunkedEncodingByDefault: true,\n     sendDate: true,\n     _removedHeader: {},\n     _contentLength: null,\n     _hasBody: true,\n     _trailer: '',\n     finished: false,\n     _headerSent: false,\n     socket: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 110510,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     connection: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 110510,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     _header: null,\n     _headers: \n      { 'x-powered-by': 'Express',\n        'access-control-allow-credentials': 'true',\n        'access-control-allow-headers': 'X-Requested-With, Content-Type',\n        'access-control-allow-origin': '*' },\n     _headerNames: \n      { 'x-powered-by': 'X-Powered-By',\n        'access-control-allow-credentials': 'Access-Control-Allow-Credentials',\n        'access-control-allow-headers': 'Access-Control-Allow-Headers',\n        'access-control-allow-origin': 'Access-Control-Allow-Origin' },\n     _onPendingData: [Function: updateOutgoingData],\n     req: [Circular],\n     locals: {},\n     writeHead: [Function: writeHead],\n     end: [Function: end],\n     _startAt: undefined,\n     _startTime: undefined,\n     __onFinished: { [Function: listener] queue: [Object] } },\n  _parsedOriginalUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/quote/digit_endorsment',\n     path: '/quote/digit_endorsment',\n     href: '/quote/digit_endorsment',\n     _raw: '/quote/digit_endorsment' },\n  sessionStore: \n   MemoryStore {\n     domain: null,\n     _events: \n      { disconnect: [Function: ondisconnect],\n        connect: [Function: onconnect] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     sessions: {},\n     generate: [Function] },\n  sessionID: 'iSYA7HO52Z2jK2Ba2L_EISLTxyhFPFNc',\n  session: \n   Session {\n     cookie: \n      { path: '/',\n        _expires: 2022-01-13T07:36:49.325Z,\n        originalMaxAge: 600000,\n        httpOnly: true } },\n  body: \n   { product_id: 10,\n     vehicle_id: '50747',\n     rto_id: '580',\n     vehicle_insurance_type: 'renew',\n     vehicle_registration_date: '2018-01-10',\n     vehicle_manf_date: '2018-01-01',\n     policy_expiry_date: '',\n     prev_insurer_id: '2',\n     vehicle_registration_type: 'individual',\n     vehicle_ncb_current: '0',\n     is_claim_exists: 'yes',\n     method_type: 'Premium',\n     execution_async: 'yes',\n     electrical_accessory: 0,\n     non_electrical_accessory: 0,\n     is_llpd: 'no',\n     is_antitheft_fit: 'no',\n     is_external_bifuel: '',\n     is_aai_member: 'no',\n     external_bifuel_type: '',\n     external_bifuel_value: '0',\n     pa_owner_driver_si: '1500000',\n     is_pa_od: 'yes',\n     is_having_valid_dl: 'no',\n     is_opted_standalone_cpa: 'yes',\n     pa_paid_driver_si: '0',\n     first_name: 'TETS',\n     mobile: '9436578643',\n     email: 'test@ters.com',\n     crn: '1052072',\n     ss_id: '819',\n     client_id: 2,\n     fba_id: '0',\n     geo_lat: 0,\n     geo_long: 0,\n     agent_source: '',\n     app_version: '2.0',\n     vehicle_insurance_subtype: '1CH_0TP',\n     secret_key: 'SECRET-HZ07QRWY-JIBT-XRMQ-ZP95-J0RWP3DYRACW',\n     client_key: 'CLIENT-CNTP6NYE-CU9N-DUZW-CSPI-SH1IS4DOVHB9',\n     is_breakin: 'yes',\n     is_fastlane_rto: false,\n     is_inspection_done: 'no',\n     is_policy_exist: 'no',\n     is_tp_policy_exists: 'yes',\n     is_financed: 'no',\n     is_oslc: 'no',\n     oslc_si: 0,\n     sub_fba_id: 0,\n     is_helmet_cover: 'no',\n     helmet_cover_si: 0,\n     registration_no: 'MH02AA1234',\n     ip_city_state: 'Mumbai_Maharashtra' },\n  _body: true,\n  length: undefined,\n  read: [Function],\n  route: \n   Route {\n     path: '/digit_endorsment',\n     stack: [ [Object] ],\n     methods: { post: true } },\n  _startAt: [ 6226, 166179500 ],\n  _startTime: 2022-01-13T07:26:49.328Z,\n  _remoteAddress: '::1',\n  secret: undefined,\n  cookies: {},\n  signedCookies: {} }","timestamp":"12:56:59 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"1:08:49 PM"}
{"meta":"","level":"info","message":"","timestamp":"1:08:49 PM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"1:08:49 PM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"1:08:49 PM"}
{"meta":"","level":"info","message":"","timestamp":"1:08:49 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"1:08:49 PM"}
{"meta":"","level":"info","message":"","timestamp":"1:08:49 PM"}
{"level":"info","message":"digit_endorsment s","timestamp":"1:09:35 PM"}
{"level":"info","message":"IncomingMessage {\n  _readableState: \n   ReadableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     buffer: BufferList { head: null, tail: null, length: 0 },\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: true,\n     ended: true,\n     endEmitted: true,\n     reading: false,\n     sync: false,\n     needReadable: false,\n     emittedReadable: false,\n     readableListening: false,\n     resumeScheduled: false,\n     defaultEncoding: 'utf8',\n     ranOut: false,\n     awaitDrain: 0,\n     readingMore: false,\n     decoder: null,\n     encoding: null },\n  readable: false,\n  domain: null,\n  _events: {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 86095,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50915 } },\n  connection: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 86095,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50915 } },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  headers: \n   { 'content-type': 'application/json',\n     'user-agent': 'PostmanRuntime/7.26.8',\n     accept: '*/*',\n     'cache-control': 'no-cache',\n     'postman-token': '5758d7c3-b91f-4d00-ba69-f2761e2b283f',\n     host: 'localhost:3000',\n     'accept-encoding': 'gzip, deflate, br',\n     connection: 'keep-alive',\n     'content-length': '1674' },\n  rawHeaders: \n   [ 'Content-Type',\n     'application/json',\n     'User-Agent',\n     'PostmanRuntime/7.26.8',\n     'Accept',\n     '*/*',\n     'Cache-Control',\n     'no-cache',\n     'Postman-Token',\n     '5758d7c3-b91f-4d00-ba69-f2761e2b283f',\n     'Host',\n     'localhost:3000',\n     'Accept-Encoding',\n     'gzip, deflate, br',\n     'Connection',\n     'keep-alive',\n     'Content-Length',\n     '1674' ],\n  trailers: {},\n  rawTrailers: [],\n  upgrade: false,\n  url: '/digit_endorsment',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 86095,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50915 } },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/quote',\n  originalUrl: '/quote/digit_endorsment',\n  _parsedUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  params: {},\n  query: {},\n  res: \n   ServerResponse {\n     domain: null,\n     _events: { finish: [Object], end: [Function: onevent] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     output: [],\n     outputEncodings: [],\n     outputCallbacks: [],\n     outputSize: 0,\n     writable: true,\n     _last: false,\n     upgrading: false,\n     chunkedEncoding: false,\n     shouldKeepAlive: true,\n     useChunkedEncodingByDefault: true,\n     sendDate: true,\n     _removedHeader: {},\n     _contentLength: null,\n     _hasBody: true,\n     _trailer: '',\n     finished: false,\n     _headerSent: false,\n     socket: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 86095,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     connection: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 86095,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     _header: null,\n     _headers: \n      { 'x-powered-by': 'Express',\n        'access-control-allow-credentials': 'true',\n        'access-control-allow-headers': 'X-Requested-With, Content-Type',\n        'access-control-allow-origin': '*' },\n     _headerNames: \n      { 'x-powered-by': 'X-Powered-By',\n        'access-control-allow-credentials': 'Access-Control-Allow-Credentials',\n        'access-control-allow-headers': 'Access-Control-Allow-Headers',\n        'access-control-allow-origin': 'Access-Control-Allow-Origin' },\n     _onPendingData: [Function: updateOutgoingData],\n     req: [Circular],\n     locals: {},\n     writeHead: [Function: writeHead],\n     end: [Function: end],\n     _startAt: undefined,\n     _startTime: undefined,\n     __onFinished: { [Function: listener] queue: [Object] } },\n  _parsedOriginalUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/quote/digit_endorsment',\n     path: '/quote/digit_endorsment',\n     href: '/quote/digit_endorsment',\n     _raw: '/quote/digit_endorsment' },\n  sessionStore: \n   MemoryStore {\n     domain: null,\n     _events: \n      { disconnect: [Function: ondisconnect],\n        connect: [Function: onconnect] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     sessions: {},\n     generate: [Function] },\n  sessionID: 'sbt3a-vxZ_xN-ZzeGVGcvp6y_zrLD2JM',\n  session: \n   Session {\n     cookie: \n      { path: '/',\n        _expires: 2022-01-13T07:49:35.539Z,\n        originalMaxAge: 600000,\n        httpOnly: true } },\n  body: \n   { product_id: 10,\n     vehicle_id: '50747',\n     rto_id: '580',\n     vehicle_insurance_type: 'renew',\n     vehicle_registration_date: '2018-01-10',\n     vehicle_manf_date: '2018-01-01',\n     policy_expiry_date: '',\n     prev_insurer_id: '2',\n     vehicle_registration_type: 'individual',\n     vehicle_ncb_current: '0',\n     is_claim_exists: 'yes',\n     method_type: 'Premium',\n     execution_async: 'yes',\n     electrical_accessory: 0,\n     non_electrical_accessory: 0,\n     is_llpd: 'no',\n     is_antitheft_fit: 'no',\n     is_external_bifuel: '',\n     is_aai_member: 'no',\n     external_bifuel_type: '',\n     external_bifuel_value: '0',\n     pa_owner_driver_si: '1500000',\n     is_pa_od: 'yes',\n     is_having_valid_dl: 'no',\n     is_opted_standalone_cpa: 'yes',\n     pa_paid_driver_si: '0',\n     first_name: 'TETS',\n     mobile: '9436578643',\n     email: 'test@ters.com',\n     crn: '1052072',\n     ss_id: '819',\n     client_id: 2,\n     fba_id: '0',\n     geo_lat: 0,\n     geo_long: 0,\n     agent_source: '',\n     app_version: '2.0',\n     vehicle_insurance_subtype: '1CH_0TP',\n     secret_key: 'SECRET-HZ07QRWY-JIBT-XRMQ-ZP95-J0RWP3DYRACW',\n     client_key: 'CLIENT-CNTP6NYE-CU9N-DUZW-CSPI-SH1IS4DOVHB9',\n     is_breakin: 'yes',\n     is_fastlane_rto: false,\n     is_inspection_done: 'no',\n     is_policy_exist: 'no',\n     is_tp_policy_exists: 'yes',\n     is_financed: 'no',\n     is_oslc: 'no',\n     oslc_si: 0,\n     sub_fba_id: 0,\n     is_helmet_cover: 'no',\n     helmet_cover_si: 0,\n     registration_no: 'MH02AA1234',\n     ip_city_state: 'Mumbai_Maharashtra' },\n  _body: true,\n  length: undefined,\n  read: [Function],\n  route: \n   Route {\n     path: '/digit_endorsment',\n     stack: [ [Object] ],\n     methods: { post: true } },\n  _startAt: [ 6992, 400803699 ],\n  _startTime: 2022-01-13T07:39:35.562Z,\n  _remoteAddress: '::1',\n  secret: undefined,\n  cookies: {},\n  signedCookies: {} }","timestamp":"1:09:35 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"1:12:58 PM"}
{"meta":"","level":"info","message":"","timestamp":"1:12:58 PM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"1:12:58 PM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"1:12:58 PM"}
{"meta":"","level":"info","message":"","timestamp":"1:12:58 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"1:12:58 PM"}
{"meta":"","level":"info","message":"","timestamp":"1:12:58 PM"}
{"level":"info","message":"digit_endorsment s","timestamp":"1:13:06 PM"}
{"level":"info","message":"IncomingMessage {\n  _readableState: \n   ReadableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     buffer: BufferList { head: null, tail: null, length: 0 },\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: true,\n     ended: true,\n     endEmitted: true,\n     reading: false,\n     sync: false,\n     needReadable: false,\n     emittedReadable: false,\n     readableListening: false,\n     resumeScheduled: false,\n     defaultEncoding: 'utf8',\n     ranOut: false,\n     awaitDrain: 0,\n     readingMore: false,\n     decoder: null,\n     encoding: null },\n  readable: false,\n  domain: null,\n  _events: {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 46456,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50942 } },\n  connection: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 46456,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50942 } },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  headers: \n   { 'content-type': 'application/json',\n     'user-agent': 'PostmanRuntime/7.26.8',\n     accept: '*/*',\n     'cache-control': 'no-cache',\n     'postman-token': 'a2f8d322-9776-4c61-b1ce-f293380574df',\n     host: 'localhost:3000',\n     'accept-encoding': 'gzip, deflate, br',\n     connection: 'keep-alive',\n     'content-length': '1674' },\n  rawHeaders: \n   [ 'Content-Type',\n     'application/json',\n     'User-Agent',\n     'PostmanRuntime/7.26.8',\n     'Accept',\n     '*/*',\n     'Cache-Control',\n     'no-cache',\n     'Postman-Token',\n     'a2f8d322-9776-4c61-b1ce-f293380574df',\n     'Host',\n     'localhost:3000',\n     'Accept-Encoding',\n     'gzip, deflate, br',\n     'Connection',\n     'keep-alive',\n     'Content-Length',\n     '1674' ],\n  trailers: {},\n  rawTrailers: [],\n  upgrade: false,\n  url: '/digit_endorsment',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 46456,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 50942 } },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/quote',\n  originalUrl: '/quote/digit_endorsment',\n  _parsedUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  params: {},\n  query: {},\n  res: \n   ServerResponse {\n     domain: null,\n     _events: { finish: [Object], end: [Function: onevent] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     output: [],\n     outputEncodings: [],\n     outputCallbacks: [],\n     outputSize: 0,\n     writable: true,\n     _last: false,\n     upgrading: false,\n     chunkedEncoding: false,\n     shouldKeepAlive: true,\n     useChunkedEncodingByDefault: true,\n     sendDate: true,\n     _removedHeader: {},\n     _contentLength: null,\n     _hasBody: true,\n     _trailer: '',\n     finished: false,\n     _headerSent: false,\n     socket: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 46456,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     connection: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 46456,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     _header: null,\n     _headers: \n      { 'x-powered-by': 'Express',\n        'access-control-allow-credentials': 'true',\n        'access-control-allow-headers': 'X-Requested-With, Content-Type',\n        'access-control-allow-origin': '*' },\n     _headerNames: \n      { 'x-powered-by': 'X-Powered-By',\n        'access-control-allow-credentials': 'Access-Control-Allow-Credentials',\n        'access-control-allow-headers': 'Access-Control-Allow-Headers',\n        'access-control-allow-origin': 'Access-Control-Allow-Origin' },\n     _onPendingData: [Function: updateOutgoingData],\n     req: [Circular],\n     locals: {},\n     writeHead: [Function: writeHead],\n     end: [Function: end],\n     _startAt: undefined,\n     _startTime: undefined,\n     __onFinished: { [Function: listener] queue: [Object] } },\n  _parsedOriginalUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/quote/digit_endorsment',\n     path: '/quote/digit_endorsment',\n     href: '/quote/digit_endorsment',\n     _raw: '/quote/digit_endorsment' },\n  sessionStore: \n   MemoryStore {\n     domain: null,\n     _events: \n      { disconnect: [Function: ondisconnect],\n        connect: [Function: onconnect] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     sessions: {},\n     generate: [Function] },\n  sessionID: 'O1WmPHa8GkgudW2CjiJiT86FcY-c_map',\n  session: \n   Session {\n     cookie: \n      { path: '/',\n        _expires: 2022-01-13T07:53:06.639Z,\n        originalMaxAge: 600000,\n        httpOnly: true } },\n  body: \n   { product_id: 10,\n     vehicle_id: '50747',\n     rto_id: '580',\n     vehicle_insurance_type: 'renew',\n     vehicle_registration_date: '2018-01-10',\n     vehicle_manf_date: '2018-01-01',\n     policy_expiry_date: '',\n     prev_insurer_id: '2',\n     vehicle_registration_type: 'individual',\n     vehicle_ncb_current: '0',\n     is_claim_exists: 'yes',\n     method_type: 'Premium',\n     execution_async: 'yes',\n     electrical_accessory: 0,\n     non_electrical_accessory: 0,\n     is_llpd: 'no',\n     is_antitheft_fit: 'no',\n     is_external_bifuel: '',\n     is_aai_member: 'no',\n     external_bifuel_type: '',\n     external_bifuel_value: '0',\n     pa_owner_driver_si: '1500000',\n     is_pa_od: 'yes',\n     is_having_valid_dl: 'no',\n     is_opted_standalone_cpa: 'yes',\n     pa_paid_driver_si: '0',\n     first_name: 'TETS',\n     mobile: '9436578643',\n     email: 'test@ters.com',\n     crn: '1052072',\n     ss_id: '819',\n     client_id: 2,\n     fba_id: '0',\n     geo_lat: 0,\n     geo_long: 0,\n     agent_source: '',\n     app_version: '2.0',\n     vehicle_insurance_subtype: '1CH_0TP',\n     secret_key: 'SECRET-HZ07QRWY-JIBT-XRMQ-ZP95-J0RWP3DYRACW',\n     client_key: 'CLIENT-CNTP6NYE-CU9N-DUZW-CSPI-SH1IS4DOVHB9',\n     is_breakin: 'yes',\n     is_fastlane_rto: false,\n     is_inspection_done: 'no',\n     is_policy_exist: 'no',\n     is_tp_policy_exists: 'yes',\n     is_financed: 'no',\n     is_oslc: 'no',\n     oslc_si: 0,\n     sub_fba_id: 0,\n     is_helmet_cover: 'no',\n     helmet_cover_si: 0,\n     registration_no: 'MH02AA1234',\n     ip_city_state: 'Mumbai_Maharashtra' },\n  _body: true,\n  length: undefined,\n  read: [Function],\n  route: \n   Route {\n     path: '/digit_endorsment',\n     stack: [ [Object] ],\n     methods: { post: true } },\n  _startAt: [ 7203, 508522499 ],\n  _startTime: 2022-01-13T07:43:06.670Z,\n  _remoteAddress: '::1',\n  secret: undefined,\n  cookies: {},\n  signedCookies: {} }","timestamp":"1:13:06 PM"}
{"level":"info","message":"{ person: \n   [ { individual: [Object],\n       identificationDocuments: [Object],\n       communications: [Object],\n       address: [Object] } ],\n  nominee: \n   { firstName: '___firstName___',\n     lastName: '___lastName___',\n     dateOfBirth: '___dateOfBirth___',\n     relation: '___relation___' },\n  financer: '___financer___' }","timestamp":"1:13:57 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"1:42:44 PM"}
{"meta":"","level":"info","message":"","timestamp":"1:42:44 PM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"1:42:44 PM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"1:42:44 PM"}
{"meta":"","level":"info","message":"","timestamp":"1:42:44 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"1:42:44 PM"}
{"meta":"","level":"info","message":"","timestamp":"1:42:44 PM"}
{"level":"info","message":"digit_endorsment s","timestamp":"1:43:16 PM"}
{"level":"info","message":"IncomingMessage {\n  _readableState: \n   ReadableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     buffer: BufferList { head: null, tail: null, length: 0 },\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: true,\n     ended: true,\n     endEmitted: true,\n     reading: false,\n     sync: false,\n     needReadable: false,\n     emittedReadable: false,\n     readableListening: false,\n     resumeScheduled: false,\n     defaultEncoding: 'utf8',\n     ranOut: false,\n     awaitDrain: 0,\n     readingMore: false,\n     decoder: null,\n     encoding: null },\n  readable: false,\n  domain: null,\n  _events: {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 81029,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 51049 } },\n  connection: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 81029,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 51049 } },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  headers: \n   { 'content-type': 'application/json',\n     'user-agent': 'PostmanRuntime/7.26.8',\n     accept: '*/*',\n     'cache-control': 'no-cache',\n     'postman-token': '93891b35-9043-4960-95b1-9cb15288c01d',\n     host: 'localhost:3000',\n     'accept-encoding': 'gzip, deflate, br',\n     connection: 'keep-alive',\n     'content-length': '1674' },\n  rawHeaders: \n   [ 'Content-Type',\n     'application/json',\n     'User-Agent',\n     'PostmanRuntime/7.26.8',\n     'Accept',\n     '*/*',\n     'Cache-Control',\n     'no-cache',\n     'Postman-Token',\n     '93891b35-9043-4960-95b1-9cb15288c01d',\n     'Host',\n     'localhost:3000',\n     'Accept-Encoding',\n     'gzip, deflate, br',\n     'Connection',\n     'keep-alive',\n     'Content-Length',\n     '1674' ],\n  trailers: {},\n  rawTrailers: [],\n  upgrade: false,\n  url: '/digit_endorsment',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1977,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 81029,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 51049 } },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/quote',\n  originalUrl: '/quote/digit_endorsment',\n  _parsedUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  params: {},\n  query: {},\n  res: \n   ServerResponse {\n     domain: null,\n     _events: { finish: [Object], end: [Function: onevent] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     output: [],\n     outputEncodings: [],\n     outputCallbacks: [],\n     outputSize: 0,\n     writable: true,\n     _last: false,\n     upgrading: false,\n     chunkedEncoding: false,\n     shouldKeepAlive: true,\n     useChunkedEncodingByDefault: true,\n     sendDate: true,\n     _removedHeader: {},\n     _contentLength: null,\n     _hasBody: true,\n     _trailer: '',\n     finished: false,\n     _headerSent: false,\n     socket: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 81029,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     connection: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 81029,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     _header: null,\n     _headers: \n      { 'x-powered-by': 'Express',\n        'access-control-allow-credentials': 'true',\n        'access-control-allow-headers': 'X-Requested-With, Content-Type',\n        'access-control-allow-origin': '*' },\n     _headerNames: \n      { 'x-powered-by': 'X-Powered-By',\n        'access-control-allow-credentials': 'Access-Control-Allow-Credentials',\n        'access-control-allow-headers': 'Access-Control-Allow-Headers',\n        'access-control-allow-origin': 'Access-Control-Allow-Origin' },\n     _onPendingData: [Function: updateOutgoingData],\n     req: [Circular],\n     locals: {},\n     writeHead: [Function: writeHead],\n     end: [Function: end],\n     _startAt: undefined,\n     _startTime: undefined,\n     __onFinished: { [Function: listener] queue: [Object] } },\n  _parsedOriginalUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/quote/digit_endorsment',\n     path: '/quote/digit_endorsment',\n     href: '/quote/digit_endorsment',\n     _raw: '/quote/digit_endorsment' },\n  sessionStore: \n   MemoryStore {\n     domain: null,\n     _events: \n      { disconnect: [Function: ondisconnect],\n        connect: [Function: onconnect] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     sessions: {},\n     generate: [Function] },\n  sessionID: 'y75rn4AFbyYXRK8leAC5TKjG-BLVu-TL',\n  session: \n   Session {\n     cookie: \n      { path: '/',\n        _expires: 2022-01-13T08:23:16.156Z,\n        originalMaxAge: 600000,\n        httpOnly: true } },\n  body: \n   { product_id: 10,\n     vehicle_id: '50747',\n     rto_id: '580',\n     vehicle_insurance_type: 'renew',\n     vehicle_registration_date: '2018-01-10',\n     vehicle_manf_date: '2018-01-01',\n     policy_expiry_date: '',\n     prev_insurer_id: '2',\n     vehicle_registration_type: 'individual',\n     vehicle_ncb_current: '0',\n     is_claim_exists: 'yes',\n     method_type: 'Premium',\n     execution_async: 'yes',\n     electrical_accessory: 0,\n     non_electrical_accessory: 0,\n     is_llpd: 'no',\n     is_antitheft_fit: 'no',\n     is_external_bifuel: '',\n     is_aai_member: 'no',\n     external_bifuel_type: '',\n     external_bifuel_value: '0',\n     pa_owner_driver_si: '1500000',\n     is_pa_od: 'yes',\n     is_having_valid_dl: 'no',\n     is_opted_standalone_cpa: 'yes',\n     pa_paid_driver_si: '0',\n     first_name: 'TETS',\n     mobile: '9436578643',\n     email: 'test@ters.com',\n     crn: '1052072',\n     ss_id: '819',\n     client_id: 2,\n     fba_id: '0',\n     geo_lat: 0,\n     geo_long: 0,\n     agent_source: '',\n     app_version: '2.0',\n     vehicle_insurance_subtype: '1CH_0TP',\n     secret_key: 'SECRET-HZ07QRWY-JIBT-XRMQ-ZP95-J0RWP3DYRACW',\n     client_key: 'CLIENT-CNTP6NYE-CU9N-DUZW-CSPI-SH1IS4DOVHB9',\n     is_breakin: 'yes',\n     is_fastlane_rto: false,\n     is_inspection_done: 'no',\n     is_policy_exist: 'no',\n     is_tp_policy_exists: 'yes',\n     is_financed: 'no',\n     is_oslc: 'no',\n     oslc_si: 0,\n     sub_fba_id: 0,\n     is_helmet_cover: 'no',\n     helmet_cover_si: 0,\n     registration_no: 'MH02AA1234',\n     ip_city_state: 'Mumbai_Maharashtra' },\n  _body: true,\n  length: undefined,\n  read: [Function],\n  route: \n   Route {\n     path: '/digit_endorsment',\n     stack: [ [Object] ],\n     methods: { post: true } },\n  _startAt: [ 9013, 163738199 ],\n  _startTime: 2022-01-13T08:13:16.325Z,\n  _remoteAddress: '::1',\n  secret: undefined,\n  cookies: {},\n  signedCookies: {} }","timestamp":"1:43:16 PM"}
{"level":"info","message":"{ person: \n   [ { individual: [Object],\n       identificationDocuments: [Object],\n       communications: [Object],\n       address: [Object] } ],\n  nominee: \n   { firstName: '___firstName___',\n     lastName: '___lastName___',\n     dateOfBirth: '___dateOfBirth___',\n     relation: '___relation___' },\n  financer: '___financer___' }","timestamp":"1:43:36 PM"}
{"level":"info","message":"{ person: \n   [ { individual: [Object],\n       identificationDocuments: [Object],\n       communications: [Object],\n       address: [Object] } ],\n  nominee: \n   { firstName: 'NOMINEE',\n     lastName: 'TEST',\n     dateOfBirth: '1989-12-21',\n     relation: 'DAUGHTER' },\n  financer: '' }","timestamp":"1:47:24 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"2:20:28 PM"}
{"meta":"","level":"info","message":"","timestamp":"2:20:28 PM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"2:20:28 PM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"2:20:28 PM"}
{"meta":"","level":"info","message":"","timestamp":"2:20:28 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"2:20:28 PM"}
{"meta":"","level":"info","message":"","timestamp":"2:20:28 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"2:22:10 PM"}
{"meta":"","level":"info","message":"","timestamp":"2:22:10 PM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"2:22:10 PM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"2:22:10 PM"}
{"meta":"","level":"info","message":"","timestamp":"2:22:10 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"2:22:10 PM"}
{"meta":"","level":"info","message":"","timestamp":"2:22:10 PM"}
{"level":"info","message":"**************************","timestamp":"2:23:12 PM"}
{"level":"info","message":"Main_Error { Error: listen EADDRINUSE :::3000\n    at Object.exports._errnoException (util.js:1022:11)\n    at exports._exceptionWithHostPort (util.js:1045:20)\n    at Server._listen2 (net.js:1259:14)\n    at listen (net.js:1295:10)\n    at Server.listen (net.js:1391:5)\n    at Object.<anonymous> (D:\\Office\\HorizonAPI\\SourceCode\\bin\\www:35:8)\n    at Module._compile (module.js:570:32)\n    at Object.Module._extensions..js (module.js:579:10)\n    at Module.load (module.js:487:32)\n    at tryModuleLoad (module.js:446:12)\n    at Function.Module._load (module.js:438:3)\n    at Timeout.Module.runMain [as _onTimeout] (module.js:604:10)\n    at ontimeout (timers.js:365:14)\n    at tryOnTimeout (timers.js:237:5)\n    at Timer.listOnTimeout (timers.js:207:5)\n  code: 'EADDRINUSE',\n  errno: 'EADDRINUSE',\n  syscall: 'listen',\n  address: '::',\n  port: 3000 }","timestamp":"2:23:12 PM"}
{"level":"info","message":"**************************","timestamp":"2:23:12 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"2:26:31 PM"}
{"meta":"","level":"info","message":"","timestamp":"2:26:31 PM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"2:26:31 PM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"2:26:31 PM"}
{"meta":"","level":"info","message":"","timestamp":"2:26:31 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"2:26:31 PM"}
{"meta":"","level":"info","message":"","timestamp":"2:26:31 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"2:59:24 PM"}
{"meta":"","level":"info","message":"","timestamp":"2:59:24 PM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"2:59:24 PM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"2:59:24 PM"}
{"meta":"","level":"info","message":"","timestamp":"2:59:24 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"2:59:24 PM"}
{"meta":"","level":"info","message":"","timestamp":"2:59:24 PM"}
{"level":"info","message":"digit_endorsment starts","timestamp":"3:00:22 PM"}
{"level":"info","message":"IncomingMessage {\n  _readableState: \n   ReadableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     buffer: BufferList { head: null, tail: null, length: 0 },\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: true,\n     ended: true,\n     endEmitted: true,\n     reading: false,\n     sync: false,\n     needReadable: false,\n     emittedReadable: false,\n     readableListening: false,\n     resumeScheduled: false,\n     defaultEncoding: 'utf8',\n     ranOut: false,\n     awaitDrain: 0,\n     readingMore: false,\n     decoder: null,\n     encoding: null },\n  readable: false,\n  domain: null,\n  _events: {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1971,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 99501,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 52476 } },\n  connection: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1971,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 99501,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 52476 } },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  headers: \n   { 'content-type': 'application/json',\n     'user-agent': 'PostmanRuntime/7.26.8',\n     accept: '*/*',\n     'cache-control': 'no-cache',\n     'postman-token': 'f6c6b2e0-1d86-4482-9c60-9bbaa1173f59',\n     host: 'localhost:3000',\n     'accept-encoding': 'gzip, deflate, br',\n     connection: 'keep-alive',\n     'content-length': '1674' },\n  rawHeaders: \n   [ 'Content-Type',\n     'application/json',\n     'User-Agent',\n     'PostmanRuntime/7.26.8',\n     'Accept',\n     '*/*',\n     'Cache-Control',\n     'no-cache',\n     'Postman-Token',\n     'f6c6b2e0-1d86-4482-9c60-9bbaa1173f59',\n     'Host',\n     'localhost:3000',\n     'Accept-Encoding',\n     'gzip, deflate, br',\n     'Connection',\n     'keep-alive',\n     'Content-Length',\n     '1674' ],\n  trailers: {},\n  rawTrailers: [],\n  upgrade: false,\n  url: '/digit_endorsment',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1971,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 99501,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 52476 } },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '',\n  originalUrl: '/digit_endorsment',\n  _parsedUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  params: {},\n  query: {},\n  res: \n   ServerResponse {\n     domain: null,\n     _events: { finish: [Object], end: [Function: onevent] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     output: [],\n     outputEncodings: [],\n     outputCallbacks: [],\n     outputSize: 0,\n     writable: true,\n     _last: false,\n     upgrading: false,\n     chunkedEncoding: false,\n     shouldKeepAlive: true,\n     useChunkedEncodingByDefault: true,\n     sendDate: true,\n     _removedHeader: {},\n     _contentLength: null,\n     _hasBody: true,\n     _trailer: '',\n     finished: false,\n     _headerSent: false,\n     socket: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 99501,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     connection: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 99501,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     _header: null,\n     _headers: \n      { 'x-powered-by': 'Express',\n        'access-control-allow-credentials': 'true',\n        'access-control-allow-headers': 'X-Requested-With, Content-Type',\n        'access-control-allow-origin': '*' },\n     _headerNames: \n      { 'x-powered-by': 'X-Powered-By',\n        'access-control-allow-credentials': 'Access-Control-Allow-Credentials',\n        'access-control-allow-headers': 'Access-Control-Allow-Headers',\n        'access-control-allow-origin': 'Access-Control-Allow-Origin' },\n     _onPendingData: [Function: updateOutgoingData],\n     req: [Circular],\n     locals: {},\n     writeHead: [Function: writeHead],\n     end: [Function: end],\n     _startAt: undefined,\n     _startTime: undefined,\n     __onFinished: { [Function: listener] queue: [Object] } },\n  _parsedOriginalUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  sessionStore: \n   MemoryStore {\n     domain: null,\n     _events: \n      { disconnect: [Function: ondisconnect],\n        connect: [Function: onconnect] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     sessions: {},\n     generate: [Function] },\n  sessionID: 'W7mLc7ajb0iTIQc4vFflt197QvbO7eaP',\n  session: \n   Session {\n     cookie: \n      { path: '/',\n        _expires: 2022-01-13T09:40:22.564Z,\n        originalMaxAge: 600000,\n        httpOnly: true } },\n  body: \n   { product_id: 10,\n     vehicle_id: '50747',\n     rto_id: '580',\n     vehicle_insurance_type: 'renew',\n     vehicle_registration_date: '2018-01-10',\n     vehicle_manf_date: '2018-01-01',\n     policy_expiry_date: '',\n     prev_insurer_id: '2',\n     vehicle_registration_type: 'individual',\n     vehicle_ncb_current: '0',\n     is_claim_exists: 'yes',\n     method_type: 'Premium',\n     execution_async: 'yes',\n     electrical_accessory: 0,\n     non_electrical_accessory: 0,\n     is_llpd: 'no',\n     is_antitheft_fit: 'no',\n     is_external_bifuel: '',\n     is_aai_member: 'no',\n     external_bifuel_type: '',\n     external_bifuel_value: '0',\n     pa_owner_driver_si: '1500000',\n     is_pa_od: 'yes',\n     is_having_valid_dl: 'no',\n     is_opted_standalone_cpa: 'yes',\n     pa_paid_driver_si: '0',\n     first_name: 'TETS',\n     mobile: '9436578643',\n     email: 'test@ters.com',\n     crn: '1052072',\n     ss_id: '819',\n     client_id: 2,\n     fba_id: '0',\n     geo_lat: 0,\n     geo_long: 0,\n     agent_source: '',\n     app_version: '2.0',\n     vehicle_insurance_subtype: '1CH_0TP',\n     secret_key: 'SECRET-HZ07QRWY-JIBT-XRMQ-ZP95-J0RWP3DYRACW',\n     client_key: 'CLIENT-CNTP6NYE-CU9N-DUZW-CSPI-SH1IS4DOVHB9',\n     is_breakin: 'yes',\n     is_fastlane_rto: false,\n     is_inspection_done: 'no',\n     is_policy_exist: 'no',\n     is_tp_policy_exists: 'yes',\n     is_financed: 'no',\n     is_oslc: 'no',\n     oslc_si: 0,\n     sub_fba_id: 0,\n     is_helmet_cover: 'no',\n     helmet_cover_si: 0,\n     registration_no: 'MH02AA1234',\n     ip_city_state: 'Mumbai_Maharashtra' },\n  _body: true,\n  length: undefined,\n  read: [Function],\n  route: \n   Route {\n     path: '/digit_endorsment',\n     stack: [ [Object] ],\n     methods: { post: true } },\n  _startAt: [ 13639, 425388200 ],\n  _startTime: 2022-01-13T09:30:22.588Z,\n  _remoteAddress: '::1',\n  secret: undefined,\n  cookies: {},\n  signedCookies: {} }","timestamp":"3:01:00 PM"}
{"level":"info","message":"{ person: \n   [ { individual: [Object],\n       identificationDocuments: [Object],\n       communications: [Object],\n       address: [Object] } ],\n  nominee: \n   { firstName: '___firstName___',\n     lastName: '___lastName___',\n     dateOfBirth: '___dateOfBirth___',\n     relation: '___relation___' },\n  financer: '___financer___' }","timestamp":"3:01:21 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"3:15:06 PM"}
{"meta":"","level":"info","message":"","timestamp":"3:15:06 PM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"3:15:06 PM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"3:15:06 PM"}
{"meta":"","level":"info","message":"","timestamp":"3:15:06 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"3:15:06 PM"}
{"meta":"","level":"info","message":"","timestamp":"3:15:06 PM"}
{"level":"info","message":"digit_endorsment starts","timestamp":"3:16:13 PM"}
{"level":"info","message":"IncomingMessage {\n  _readableState: \n   ReadableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     buffer: BufferList { head: null, tail: null, length: 0 },\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: true,\n     ended: true,\n     endEmitted: true,\n     reading: false,\n     sync: false,\n     needReadable: false,\n     emittedReadable: false,\n     readableListening: false,\n     resumeScheduled: false,\n     defaultEncoding: 'utf8',\n     ranOut: false,\n     awaitDrain: 0,\n     readingMore: false,\n     decoder: null,\n     encoding: null },\n  readable: false,\n  domain: null,\n  _events: {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1971,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 107137,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 52606 } },\n  connection: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1971,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 107137,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 52606 } },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  headers: \n   { 'content-type': 'application/json',\n     'user-agent': 'PostmanRuntime/7.26.8',\n     accept: '*/*',\n     'cache-control': 'no-cache',\n     'postman-token': '1021affd-7f4b-404d-91ff-97690bcae772',\n     host: 'localhost:3000',\n     'accept-encoding': 'gzip, deflate, br',\n     connection: 'keep-alive',\n     'content-length': '1674' },\n  rawHeaders: \n   [ 'Content-Type',\n     'application/json',\n     'User-Agent',\n     'PostmanRuntime/7.26.8',\n     'Accept',\n     '*/*',\n     'Cache-Control',\n     'no-cache',\n     'Postman-Token',\n     '1021affd-7f4b-404d-91ff-97690bcae772',\n     'Host',\n     'localhost:3000',\n     'Accept-Encoding',\n     'gzip, deflate, br',\n     'Connection',\n     'keep-alive',\n     'Content-Length',\n     '1674' ],\n  trailers: {},\n  rawTrailers: [],\n  upgrade: false,\n  url: '/digit_endorsment',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1971,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 107137,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 52606 } },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '',\n  originalUrl: '/digit_endorsment',\n  _parsedUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  params: {},\n  query: {},\n  res: \n   ServerResponse {\n     domain: null,\n     _events: { finish: [Object], end: [Function: onevent] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     output: [],\n     outputEncodings: [],\n     outputCallbacks: [],\n     outputSize: 0,\n     writable: true,\n     _last: false,\n     upgrading: false,\n     chunkedEncoding: false,\n     shouldKeepAlive: true,\n     useChunkedEncodingByDefault: true,\n     sendDate: true,\n     _removedHeader: {},\n     _contentLength: null,\n     _hasBody: true,\n     _trailer: '',\n     finished: false,\n     _headerSent: false,\n     socket: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 107137,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     connection: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 107137,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     _header: null,\n     _headers: \n      { 'x-powered-by': 'Express',\n        'access-control-allow-credentials': 'true',\n        'access-control-allow-headers': 'X-Requested-With, Content-Type',\n        'access-control-allow-origin': '*' },\n     _headerNames: \n      { 'x-powered-by': 'X-Powered-By',\n        'access-control-allow-credentials': 'Access-Control-Allow-Credentials',\n        'access-control-allow-headers': 'Access-Control-Allow-Headers',\n        'access-control-allow-origin': 'Access-Control-Allow-Origin' },\n     _onPendingData: [Function: updateOutgoingData],\n     req: [Circular],\n     locals: {},\n     writeHead: [Function: writeHead],\n     end: [Function: end],\n     _startAt: undefined,\n     _startTime: undefined,\n     __onFinished: { [Function: listener] queue: [Object] } },\n  _parsedOriginalUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  sessionStore: \n   MemoryStore {\n     domain: null,\n     _events: \n      { disconnect: [Function: ondisconnect],\n        connect: [Function: onconnect] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     sessions: {},\n     generate: [Function] },\n  sessionID: '71F8ugj9AGMXdgWQ7stoWDw5wYSEFt7n',\n  session: \n   Session {\n     cookie: \n      { path: '/',\n        _expires: 2022-01-13T09:56:13.705Z,\n        originalMaxAge: 600000,\n        httpOnly: true } },\n  body: \n   { product_id: 10,\n     vehicle_id: '50747',\n     rto_id: '580',\n     vehicle_insurance_type: 'renew',\n     vehicle_registration_date: '2018-01-10',\n     vehicle_manf_date: '2018-01-01',\n     policy_expiry_date: '',\n     prev_insurer_id: '2',\n     vehicle_registration_type: 'individual',\n     vehicle_ncb_current: '0',\n     is_claim_exists: 'yes',\n     method_type: 'Premium',\n     execution_async: 'yes',\n     electrical_accessory: 0,\n     non_electrical_accessory: 0,\n     is_llpd: 'no',\n     is_antitheft_fit: 'no',\n     is_external_bifuel: '',\n     is_aai_member: 'no',\n     external_bifuel_type: '',\n     external_bifuel_value: '0',\n     pa_owner_driver_si: '1500000',\n     is_pa_od: 'yes',\n     is_having_valid_dl: 'no',\n     is_opted_standalone_cpa: 'yes',\n     pa_paid_driver_si: '0',\n     first_name: 'TETS',\n     mobile: '9436578643',\n     email: 'test@ters.com',\n     crn: '1052072',\n     ss_id: '819',\n     client_id: 2,\n     fba_id: '0',\n     geo_lat: 0,\n     geo_long: 0,\n     agent_source: '',\n     app_version: '2.0',\n     vehicle_insurance_subtype: '1CH_0TP',\n     secret_key: 'SECRET-HZ07QRWY-JIBT-XRMQ-ZP95-J0RWP3DYRACW',\n     client_key: 'CLIENT-CNTP6NYE-CU9N-DUZW-CSPI-SH1IS4DOVHB9',\n     is_breakin: 'yes',\n     is_fastlane_rto: false,\n     is_inspection_done: 'no',\n     is_policy_exist: 'no',\n     is_tp_policy_exists: 'yes',\n     is_financed: 'no',\n     is_oslc: 'no',\n     oslc_si: 0,\n     sub_fba_id: 0,\n     is_helmet_cover: 'no',\n     helmet_cover_si: 0,\n     registration_no: 'MH02AA1234',\n     ip_city_state: 'Mumbai_Maharashtra' },\n  _body: true,\n  length: undefined,\n  read: [Function],\n  route: \n   Route {\n     path: '/digit_endorsment',\n     stack: [ [Object] ],\n     methods: { post: true } },\n  _startAt: [ 14590, 569227900 ],\n  _startTime: 2022-01-13T09:46:13.731Z,\n  _remoteAddress: '::1',\n  secret: undefined,\n  cookies: {},\n  signedCookies: {} }","timestamp":"3:16:14 PM"}
{"level":"info","message":"{ person: \n   [ { individual: [Object],\n       identificationDocuments: [Object],\n       communications: [Object],\n       address: [Object] } ],\n  nominee: \n   { firstName: '___firstName___',\n     lastName: '___lastName___',\n     dateOfBirth: '___dateOfBirth___',\n     relation: '___relation___' },\n  financer: '___financer___' }","timestamp":"3:16:42 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"3:18:55 PM"}
{"meta":"","level":"info","message":"","timestamp":"3:18:55 PM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"3:18:55 PM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"3:18:55 PM"}
{"meta":"","level":"info","message":"","timestamp":"3:18:55 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"3:18:55 PM"}
{"meta":"","level":"info","message":"","timestamp":"3:18:55 PM"}
{"level":"info","message":"digit_endorsment starts","timestamp":"3:19:37 PM"}
{"level":"info","message":"IncomingMessage {\n  _readableState: \n   ReadableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     buffer: BufferList { head: null, tail: null, length: 0 },\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: true,\n     ended: true,\n     endEmitted: true,\n     reading: false,\n     sync: false,\n     needReadable: false,\n     emittedReadable: false,\n     readableListening: false,\n     resumeScheduled: false,\n     defaultEncoding: 'utf8',\n     ranOut: false,\n     awaitDrain: 0,\n     readingMore: false,\n     decoder: null,\n     encoding: null },\n  readable: false,\n  domain: null,\n  _events: {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1971,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 81797,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 52654 } },\n  connection: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1971,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 81797,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 52654 } },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  headers: \n   { 'content-type': 'application/json',\n     'user-agent': 'PostmanRuntime/7.26.8',\n     accept: '*/*',\n     'cache-control': 'no-cache',\n     'postman-token': '9a7a8abb-09ba-4c33-b093-74223f515119',\n     host: 'localhost:3000',\n     'accept-encoding': 'gzip, deflate, br',\n     connection: 'keep-alive',\n     'content-length': '1674' },\n  rawHeaders: \n   [ 'Content-Type',\n     'application/json',\n     'User-Agent',\n     'PostmanRuntime/7.26.8',\n     'Accept',\n     '*/*',\n     'Cache-Control',\n     'no-cache',\n     'Postman-Token',\n     '9a7a8abb-09ba-4c33-b093-74223f515119',\n     'Host',\n     'localhost:3000',\n     'Accept-Encoding',\n     'gzip, deflate, br',\n     'Connection',\n     'keep-alive',\n     'Content-Length',\n     '1674' ],\n  trailers: {},\n  rawTrailers: [],\n  upgrade: false,\n  url: '/digit_endorsment',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 1971,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 81797,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 52654 } },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '',\n  originalUrl: '/digit_endorsment',\n  _parsedUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  params: {},\n  query: {},\n  res: \n   ServerResponse {\n     domain: null,\n     _events: { finish: [Object], end: [Function: onevent] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     output: [],\n     outputEncodings: [],\n     outputCallbacks: [],\n     outputSize: 0,\n     writable: true,\n     _last: false,\n     upgrading: false,\n     chunkedEncoding: false,\n     shouldKeepAlive: true,\n     useChunkedEncodingByDefault: true,\n     sendDate: true,\n     _removedHeader: {},\n     _contentLength: null,\n     _hasBody: true,\n     _trailer: '',\n     finished: false,\n     _headerSent: false,\n     socket: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 81797,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     connection: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 81797,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     _header: null,\n     _headers: \n      { 'x-powered-by': 'Express',\n        'access-control-allow-credentials': 'true',\n        'access-control-allow-headers': 'X-Requested-With, Content-Type',\n        'access-control-allow-origin': '*' },\n     _headerNames: \n      { 'x-powered-by': 'X-Powered-By',\n        'access-control-allow-credentials': 'Access-Control-Allow-Credentials',\n        'access-control-allow-headers': 'Access-Control-Allow-Headers',\n        'access-control-allow-origin': 'Access-Control-Allow-Origin' },\n     _onPendingData: [Function: updateOutgoingData],\n     req: [Circular],\n     locals: {},\n     writeHead: [Function: writeHead],\n     end: [Function: end],\n     _startAt: undefined,\n     _startTime: undefined,\n     __onFinished: { [Function: listener] queue: [Object] } },\n  _parsedOriginalUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  sessionStore: \n   MemoryStore {\n     domain: null,\n     _events: \n      { disconnect: [Function: ondisconnect],\n        connect: [Function: onconnect] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     sessions: {},\n     generate: [Function] },\n  sessionID: 'DEAKbFrFQfDh905yg0_VTJ-TL27KcyXm',\n  session: \n   Session {\n     cookie: \n      { path: '/',\n        _expires: 2022-01-13T09:59:37.295Z,\n        originalMaxAge: 600000,\n        httpOnly: true } },\n  body: \n   { product_id: 10,\n     vehicle_id: '50747',\n     rto_id: '580',\n     vehicle_insurance_type: 'renew',\n     vehicle_registration_date: '2018-01-10',\n     vehicle_manf_date: '2018-01-01',\n     policy_expiry_date: '',\n     prev_insurer_id: '2',\n     vehicle_registration_type: 'individual',\n     vehicle_ncb_current: '0',\n     is_claim_exists: 'yes',\n     method_type: 'Premium',\n     execution_async: 'yes',\n     electrical_accessory: 0,\n     non_electrical_accessory: 0,\n     is_llpd: 'no',\n     is_antitheft_fit: 'no',\n     is_external_bifuel: '',\n     is_aai_member: 'no',\n     external_bifuel_type: '',\n     external_bifuel_value: '0',\n     pa_owner_driver_si: '1500000',\n     is_pa_od: 'yes',\n     is_having_valid_dl: 'no',\n     is_opted_standalone_cpa: 'yes',\n     pa_paid_driver_si: '0',\n     first_name: 'TETS',\n     mobile: '9436578643',\n     email: 'test@ters.com',\n     crn: '1052072',\n     ss_id: '819',\n     client_id: 2,\n     fba_id: '0',\n     geo_lat: 0,\n     geo_long: 0,\n     agent_source: '',\n     app_version: '2.0',\n     vehicle_insurance_subtype: '1CH_0TP',\n     secret_key: 'SECRET-HZ07QRWY-JIBT-XRMQ-ZP95-J0RWP3DYRACW',\n     client_key: 'CLIENT-CNTP6NYE-CU9N-DUZW-CSPI-SH1IS4DOVHB9',\n     is_breakin: 'yes',\n     is_fastlane_rto: false,\n     is_inspection_done: 'no',\n     is_policy_exist: 'no',\n     is_tp_policy_exists: 'yes',\n     is_financed: 'no',\n     is_oslc: 'no',\n     oslc_si: 0,\n     sub_fba_id: 0,\n     is_helmet_cover: 'no',\n     helmet_cover_si: 0,\n     registration_no: 'MH02AA1234',\n     ip_city_state: 'Mumbai_Maharashtra' },\n  _body: true,\n  length: undefined,\n  read: [Function],\n  route: \n   Route {\n     path: '/digit_endorsment',\n     stack: [ [Object] ],\n     methods: { post: true } },\n  _startAt: [ 14794, 157786200 ],\n  _startTime: 2022-01-13T09:49:37.320Z,\n  _remoteAddress: '::1',\n  secret: undefined,\n  cookies: {},\n  signedCookies: {} }","timestamp":"3:19:37 PM"}
{"level":"info","message":"{ person: \n   [ { individual: [Object],\n       identificationDocuments: [Object],\n       communications: [Object],\n       address: [Object] } ],\n  nominee: \n   { firstName: '___firstName___',\n     lastName: '___lastName___',\n     dateOfBirth: '___dateOfBirth___',\n     relation: '___relation___' },\n  financer: '___financer___' }","timestamp":"3:19:48 PM"}
{"level":"info","message":"[object Object]","timestamp":"3:21:30 PM"}
{"level":"info","message":"{ requestId: '5140',\n  link: 'https://preprod-S3Service.godigit.com/S3Service/rest/download/file?target=75E6FC117C2BE63537F3EE8AA567E5EB9D94013B82576A23F60BA5FAD045D2CBAFB159722EBDB8C8BAFC92ED384540451E2C3236970718E42577DA176B1284AD50C4B88B250E5888BBCAD62A6AC0AEB0F997F326191F608E63153F4784FE4A99',\n  status: 'Non technical amendment successful' }","timestamp":"3:21:31 PM"}
{"level":"info","message":"Sucess","timestamp":"3:21:57 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"4:17:54 PM"}
{"meta":"","level":"info","message":"","timestamp":"4:17:54 PM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"4:17:54 PM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"4:17:54 PM"}
{"meta":"","level":"info","message":"","timestamp":"4:17:54 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"4:17:54 PM"}
{"meta":"","level":"info","message":"","timestamp":"4:17:54 PM"}
{"level":"info","message":"digit_endorsment starts","timestamp":"4:17:59 PM"}
{"level":"info","message":"IncomingMessage {\n  _readableState: \n   ReadableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     buffer: BufferList { head: null, tail: null, length: 0 },\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: true,\n     ended: true,\n     endEmitted: true,\n     reading: false,\n     sync: false,\n     needReadable: false,\n     emittedReadable: false,\n     readableListening: false,\n     resumeScheduled: false,\n     defaultEncoding: 'utf8',\n     ranOut: false,\n     awaitDrain: 0,\n     readingMore: false,\n     decoder: null,\n     encoding: null },\n  readable: false,\n  domain: null,\n  _events: {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 320,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 52183,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 56572 } },\n  connection: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 320,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 52183,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 56572 } },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  headers: \n   { 'content-type': 'application/json',\n     'user-agent': 'PostmanRuntime/7.26.8',\n     accept: '*/*',\n     'cache-control': 'no-cache',\n     'postman-token': 'bd482c19-882b-4840-a95d-5e5254508a85',\n     host: 'localhost:3000',\n     'accept-encoding': 'gzip, deflate, br',\n     connection: 'keep-alive',\n     'content-length': '25' },\n  rawHeaders: \n   [ 'Content-Type',\n     'application/json',\n     'User-Agent',\n     'PostmanRuntime/7.26.8',\n     'Accept',\n     '*/*',\n     'Cache-Control',\n     'no-cache',\n     'Postman-Token',\n     'bd482c19-882b-4840-a95d-5e5254508a85',\n     'Host',\n     'localhost:3000',\n     'Accept-Encoding',\n     'gzip, deflate, br',\n     'Connection',\n     'keep-alive',\n     'Content-Length',\n     '25' ],\n  trailers: {},\n  rawTrailers: [],\n  upgrade: false,\n  url: '/digit_endorsment',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 320,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 52183,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 56572 } },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '',\n  originalUrl: '/digit_endorsment',\n  _parsedUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  params: {},\n  query: {},\n  res: \n   ServerResponse {\n     domain: null,\n     _events: { finish: [Object], end: [Function: onevent] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     output: [],\n     outputEncodings: [],\n     outputCallbacks: [],\n     outputSize: 0,\n     writable: true,\n     _last: false,\n     upgrading: false,\n     chunkedEncoding: false,\n     shouldKeepAlive: true,\n     useChunkedEncodingByDefault: true,\n     sendDate: true,\n     _removedHeader: {},\n     _contentLength: null,\n     _hasBody: true,\n     _trailer: '',\n     finished: false,\n     _headerSent: false,\n     socket: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 52183,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     connection: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 52183,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     _header: null,\n     _headers: \n      { 'x-powered-by': 'Express',\n        'access-control-allow-credentials': 'true',\n        'access-control-allow-headers': 'X-Requested-With, Content-Type',\n        'access-control-allow-origin': '*' },\n     _headerNames: \n      { 'x-powered-by': 'X-Powered-By',\n        'access-control-allow-credentials': 'Access-Control-Allow-Credentials',\n        'access-control-allow-headers': 'Access-Control-Allow-Headers',\n        'access-control-allow-origin': 'Access-Control-Allow-Origin' },\n     _onPendingData: [Function: updateOutgoingData],\n     req: [Circular],\n     locals: {},\n     writeHead: [Function: writeHead],\n     end: [Function: end],\n     _startAt: undefined,\n     _startTime: undefined,\n     __onFinished: { [Function: listener] queue: [Object] } },\n  _parsedOriginalUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  sessionStore: \n   MemoryStore {\n     domain: null,\n     _events: \n      { disconnect: [Function: ondisconnect],\n        connect: [Function: onconnect] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     sessions: {},\n     generate: [Function] },\n  sessionID: 'F6MyB4eI7CE9tZYJeYy6nw3Q5DEhh2D4',\n  session: \n   Session {\n     cookie: \n      { path: '/',\n        _expires: 2022-01-13T10:57:59.600Z,\n        originalMaxAge: 600000,\n        httpOnly: true } },\n  body: { PB_CRN: 217065 },\n  _body: true,\n  length: undefined,\n  read: [Function],\n  route: \n   Route {\n     path: '/digit_endorsment',\n     stack: [ [Object] ],\n     methods: { post: true } },\n  _startAt: [ 18296, 462584400 ],\n  _startTime: 2022-01-13T10:47:59.625Z,\n  _remoteAddress: '::1',\n  secret: undefined,\n  cookies: {},\n  signedCookies: {} }","timestamp":"4:17:59 PM"}
{"level":"info","message":"digit_endorsment starts","timestamp":"4:18:35 PM"}
{"level":"info","message":"IncomingMessage {\n  _readableState: \n   ReadableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     buffer: BufferList { head: null, tail: null, length: 0 },\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: true,\n     ended: true,\n     endEmitted: true,\n     reading: false,\n     sync: false,\n     needReadable: false,\n     emittedReadable: false,\n     readableListening: false,\n     resumeScheduled: false,\n     defaultEncoding: 'utf8',\n     ranOut: false,\n     awaitDrain: 0,\n     readingMore: false,\n     decoder: null,\n     encoding: null },\n  readable: false,\n  domain: null,\n  _events: {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 320,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 72484,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 56592 } },\n  connection: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 320,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 72484,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 56592 } },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  headers: \n   { 'content-type': 'application/json',\n     'user-agent': 'PostmanRuntime/7.26.8',\n     accept: '*/*',\n     'cache-control': 'no-cache',\n     'postman-token': '6cb4f581-9ecf-4e4b-b223-82fcb8b73bce',\n     host: 'localhost:3000',\n     'accept-encoding': 'gzip, deflate, br',\n     connection: 'keep-alive',\n     'content-length': '25' },\n  rawHeaders: \n   [ 'Content-Type',\n     'application/json',\n     'User-Agent',\n     'PostmanRuntime/7.26.8',\n     'Accept',\n     '*/*',\n     'Cache-Control',\n     'no-cache',\n     'Postman-Token',\n     '6cb4f581-9ecf-4e4b-b223-82fcb8b73bce',\n     'Host',\n     'localhost:3000',\n     'Accept-Encoding',\n     'gzip, deflate, br',\n     'Connection',\n     'keep-alive',\n     'Content-Length',\n     '25' ],\n  trailers: {},\n  rawTrailers: [],\n  upgrade: false,\n  url: '/digit_endorsment',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 320,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 72484,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 56592 } },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '',\n  originalUrl: '/digit_endorsment',\n  _parsedUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  params: {},\n  query: {},\n  res: \n   ServerResponse {\n     domain: null,\n     _events: { finish: [Object], end: [Function: onevent] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     output: [],\n     outputEncodings: [],\n     outputCallbacks: [],\n     outputSize: 0,\n     writable: true,\n     _last: false,\n     upgrading: false,\n     chunkedEncoding: false,\n     shouldKeepAlive: true,\n     useChunkedEncodingByDefault: true,\n     sendDate: true,\n     _removedHeader: {},\n     _contentLength: null,\n     _hasBody: true,\n     _trailer: '',\n     finished: false,\n     _headerSent: false,\n     socket: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 72484,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     connection: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 72484,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     _header: null,\n     _headers: \n      { 'x-powered-by': 'Express',\n        'access-control-allow-credentials': 'true',\n        'access-control-allow-headers': 'X-Requested-With, Content-Type',\n        'access-control-allow-origin': '*' },\n     _headerNames: \n      { 'x-powered-by': 'X-Powered-By',\n        'access-control-allow-credentials': 'Access-Control-Allow-Credentials',\n        'access-control-allow-headers': 'Access-Control-Allow-Headers',\n        'access-control-allow-origin': 'Access-Control-Allow-Origin' },\n     _onPendingData: [Function: updateOutgoingData],\n     req: [Circular],\n     locals: {},\n     writeHead: [Function: writeHead],\n     end: [Function: end],\n     _startAt: undefined,\n     _startTime: undefined,\n     __onFinished: { [Function: listener] queue: [Object] } },\n  _parsedOriginalUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  sessionStore: \n   MemoryStore {\n     domain: null,\n     _events: \n      { disconnect: [Function: ondisconnect],\n        connect: [Function: onconnect] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     sessions: {},\n     generate: [Function] },\n  sessionID: 'Kk3XOVtzqVwasMXz2Jp0GLz81XQHM_FC',\n  session: \n   Session {\n     cookie: \n      { path: '/',\n        _expires: 2022-01-13T10:58:19.914Z,\n        originalMaxAge: 600000,\n        httpOnly: true } },\n  body: { PB_CRN: 217065 },\n  _body: true,\n  length: undefined,\n  read: [Function],\n  route: \n   Route {\n     path: '/digit_endorsment',\n     stack: [ [Object] ],\n     methods: { post: true } },\n  _startAt: [ 18316, 757037699 ],\n  _startTime: 2022-01-13T10:48:19.918Z,\n  _remoteAddress: '::1',\n  secret: undefined,\n  cookies: {},\n  signedCookies: {} }","timestamp":"4:18:35 PM"}
{"level":"info","message":"digit_endorsment starts","timestamp":"4:19:50 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"4:21:38 PM"}
{"meta":"","level":"info","message":"","timestamp":"4:21:38 PM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"4:21:38 PM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"4:21:38 PM"}
{"meta":"","level":"info","message":"","timestamp":"4:21:38 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"4:21:38 PM"}
{"meta":"","level":"info","message":"","timestamp":"4:21:38 PM"}
{"level":"info","message":"digit_endorsment starts","timestamp":"4:21:47 PM"}
{"level":"info","message":"IncomingMessage {\n  _readableState: \n   ReadableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     buffer: BufferList { head: null, tail: null, length: 0 },\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: true,\n     ended: true,\n     endEmitted: true,\n     reading: false,\n     sync: false,\n     needReadable: false,\n     emittedReadable: false,\n     readableListening: false,\n     resumeScheduled: false,\n     defaultEncoding: 'utf8',\n     ranOut: false,\n     awaitDrain: 0,\n     readingMore: false,\n     decoder: null,\n     encoding: null },\n  readable: false,\n  domain: null,\n  _events: {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 320,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 45053,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 56729 } },\n  connection: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 320,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 45053,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 56729 } },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  headers: \n   { 'content-type': 'application/json',\n     'user-agent': 'PostmanRuntime/7.26.8',\n     accept: '*/*',\n     'cache-control': 'no-cache',\n     'postman-token': '0c519ab0-6786-4977-bb9c-c600f738041d',\n     host: 'localhost:3000',\n     'accept-encoding': 'gzip, deflate, br',\n     connection: 'keep-alive',\n     'content-length': '25' },\n  rawHeaders: \n   [ 'Content-Type',\n     'application/json',\n     'User-Agent',\n     'PostmanRuntime/7.26.8',\n     'Accept',\n     '*/*',\n     'Cache-Control',\n     'no-cache',\n     'Postman-Token',\n     '0c519ab0-6786-4977-bb9c-c600f738041d',\n     'Host',\n     'localhost:3000',\n     'Accept-Encoding',\n     'gzip, deflate, br',\n     'Connection',\n     'keep-alive',\n     'Content-Length',\n     '25' ],\n  trailers: {},\n  rawTrailers: [],\n  upgrade: false,\n  url: '/digit_endorsment',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 320,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 45053,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 56729 } },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '',\n  originalUrl: '/digit_endorsment',\n  _parsedUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  params: {},\n  query: {},\n  res: \n   ServerResponse {\n     domain: null,\n     _events: { finish: [Object], end: [Function: onevent] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     output: [],\n     outputEncodings: [],\n     outputCallbacks: [],\n     outputSize: 0,\n     writable: true,\n     _last: false,\n     upgrading: false,\n     chunkedEncoding: false,\n     shouldKeepAlive: true,\n     useChunkedEncodingByDefault: true,\n     sendDate: true,\n     _removedHeader: {},\n     _contentLength: null,\n     _hasBody: true,\n     _trailer: '',\n     finished: false,\n     _headerSent: false,\n     socket: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 45053,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     connection: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 45053,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     _header: null,\n     _headers: \n      { 'x-powered-by': 'Express',\n        'access-control-allow-credentials': 'true',\n        'access-control-allow-headers': 'X-Requested-With, Content-Type',\n        'access-control-allow-origin': '*' },\n     _headerNames: \n      { 'x-powered-by': 'X-Powered-By',\n        'access-control-allow-credentials': 'Access-Control-Allow-Credentials',\n        'access-control-allow-headers': 'Access-Control-Allow-Headers',\n        'access-control-allow-origin': 'Access-Control-Allow-Origin' },\n     _onPendingData: [Function: updateOutgoingData],\n     req: [Circular],\n     locals: {},\n     writeHead: [Function: writeHead],\n     end: [Function: end],\n     _startAt: undefined,\n     _startTime: undefined,\n     __onFinished: { [Function: listener] queue: [Object] } },\n  _parsedOriginalUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  sessionStore: \n   MemoryStore {\n     domain: null,\n     _events: \n      { disconnect: [Function: ondisconnect],\n        connect: [Function: onconnect] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     sessions: {},\n     generate: [Function] },\n  sessionID: 'gsxN6ft7QUbSg7O8MUhT542hdoum0TWk',\n  session: \n   Session {\n     cookie: \n      { path: '/',\n        _expires: 2022-01-13T11:01:43.492Z,\n        originalMaxAge: 600000,\n        httpOnly: true } },\n  body: { PB_CRN: 217065 },\n  _body: true,\n  length: undefined,\n  read: [Function],\n  route: \n   Route {\n     path: '/digit_endorsment',\n     stack: [ [Object] ],\n     methods: { post: true } },\n  _startAt: [ 18520, 353840199 ],\n  _startTime: 2022-01-13T10:51:43.517Z,\n  _remoteAddress: '::1',\n  secret: undefined,\n  cookies: {},\n  signedCookies: {} }","timestamp":"4:21:53 PM"}
{"level":"info","message":"{ person: \n   [ { individual: [Object],\n       identificationDocuments: [Object],\n       communications: [Object],\n       address: [Object] } ],\n  nominee: \n   { firstName: '___firstName___',\n     lastName: '___lastName___',\n     dateOfBirth: '___dateOfBirth___',\n     relation: '___relation___' },\n  financer: '___financer___' }","timestamp":"4:21:56 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"4:24:08 PM"}
{"meta":"","level":"info","message":"","timestamp":"4:24:08 PM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"4:24:08 PM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"4:24:08 PM"}
{"meta":"","level":"info","message":"","timestamp":"4:24:08 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"4:24:08 PM"}
{"meta":"","level":"info","message":"","timestamp":"4:24:08 PM"}
{"level":"info","message":"digit_endorsment starts","timestamp":"4:24:19 PM"}
{"level":"info","message":"IncomingMessage {\n  _readableState: \n   ReadableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     buffer: BufferList { head: null, tail: null, length: 0 },\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: true,\n     ended: true,\n     endEmitted: true,\n     reading: false,\n     sync: false,\n     needReadable: false,\n     emittedReadable: false,\n     readableListening: false,\n     resumeScheduled: false,\n     defaultEncoding: 'utf8',\n     ranOut: false,\n     awaitDrain: 0,\n     readingMore: false,\n     decoder: null,\n     encoding: null },\n  readable: false,\n  domain: null,\n  _events: {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 320,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 43999,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 56828 } },\n  connection: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 320,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 43999,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 56828 } },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  headers: \n   { 'content-type': 'application/json',\n     'user-agent': 'PostmanRuntime/7.26.8',\n     accept: '*/*',\n     'cache-control': 'no-cache',\n     'postman-token': 'f64d57ca-d5d7-461f-b8f9-b959795c4659',\n     host: 'localhost:3000',\n     'accept-encoding': 'gzip, deflate, br',\n     connection: 'keep-alive',\n     'content-length': '25' },\n  rawHeaders: \n   [ 'Content-Type',\n     'application/json',\n     'User-Agent',\n     'PostmanRuntime/7.26.8',\n     'Accept',\n     '*/*',\n     'Cache-Control',\n     'no-cache',\n     'Postman-Token',\n     'f64d57ca-d5d7-461f-b8f9-b959795c4659',\n     'Host',\n     'localhost:3000',\n     'Accept-Encoding',\n     'gzip, deflate, br',\n     'Connection',\n     'keep-alive',\n     'Content-Length',\n     '25' ],\n  trailers: {},\n  rawTrailers: [],\n  upgrade: false,\n  url: '/digit_endorsment',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 320,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 43999,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 56828 } },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '',\n  originalUrl: '/digit_endorsment',\n  _parsedUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  params: {},\n  query: {},\n  res: \n   ServerResponse {\n     domain: null,\n     _events: { finish: [Object], end: [Function: onevent] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     output: [],\n     outputEncodings: [],\n     outputCallbacks: [],\n     outputSize: 0,\n     writable: true,\n     _last: false,\n     upgrading: false,\n     chunkedEncoding: false,\n     shouldKeepAlive: true,\n     useChunkedEncodingByDefault: true,\n     sendDate: true,\n     _removedHeader: {},\n     _contentLength: null,\n     _hasBody: true,\n     _trailer: '',\n     finished: false,\n     _headerSent: false,\n     socket: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 43999,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     connection: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 43999,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     _header: null,\n     _headers: \n      { 'x-powered-by': 'Express',\n        'access-control-allow-credentials': 'true',\n        'access-control-allow-headers': 'X-Requested-With, Content-Type',\n        'access-control-allow-origin': '*' },\n     _headerNames: \n      { 'x-powered-by': 'X-Powered-By',\n        'access-control-allow-credentials': 'Access-Control-Allow-Credentials',\n        'access-control-allow-headers': 'Access-Control-Allow-Headers',\n        'access-control-allow-origin': 'Access-Control-Allow-Origin' },\n     _onPendingData: [Function: updateOutgoingData],\n     req: [Circular],\n     locals: {},\n     writeHead: [Function: writeHead],\n     end: [Function: end],\n     _startAt: undefined,\n     _startTime: undefined,\n     __onFinished: { [Function: listener] queue: [Object] } },\n  _parsedOriginalUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  sessionStore: \n   MemoryStore {\n     domain: null,\n     _events: \n      { disconnect: [Function: ondisconnect],\n        connect: [Function: onconnect] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     sessions: {},\n     generate: [Function] },\n  sessionID: 'IxRNo1o7CvTor7HLqauAek59Lml4zE5d',\n  session: \n   Session {\n     cookie: \n      { path: '/',\n        _expires: 2022-01-13T11:04:12.516Z,\n        originalMaxAge: 600000,\n        httpOnly: true } },\n  body: { PB_CRN: 217065 },\n  _body: true,\n  length: undefined,\n  read: [Function],\n  route: \n   Route {\n     path: '/digit_endorsment',\n     stack: [ [Object] ],\n     methods: { post: true } },\n  _startAt: [ 18669, 378455500 ],\n  _startTime: 2022-01-13T10:54:12.541Z,\n  _remoteAddress: '::1',\n  secret: undefined,\n  cookies: {},\n  signedCookies: {} }","timestamp":"4:24:22 PM"}
{"level":"info","message":"{ person: \n   [ { individual: [Object],\n       identificationDocuments: [Object],\n       communications: [Object],\n       address: [Object] } ],\n  nominee: \n   { firstName: '___firstName___',\n     lastName: '___lastName___',\n     dateOfBirth: '___dateOfBirth___',\n     relation: '___relation___' },\n  financer: '___financer___' }","timestamp":"4:24:55 PM"}
{"level":"info","message":"[object Object]","timestamp":"4:26:09 PM"}
{"level":"info","message":"{ requestId: '5141',\n  link: 'https://preprod-S3Service.godigit.com/S3Service/rest/download/file?target=75E6FC117C2BE63537F3EE8AA567E5EB9D94013B82576A23F60BA5FAD045D2CBCABC701B37D0DAD3B806BDA052170A517963859B7DE80244E80EC2FAA3F6600850C4B88B250E5888BBCAD62A6AC0AEB0F997F326191F608E63153F4784FE4A99',\n  status: 'Non technical amendment successful' }","timestamp":"4:26:10 PM"}
{"level":"info","message":"Sucess","timestamp":"4:26:52 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"4:58:45 PM"}
{"meta":"","level":"info","message":"","timestamp":"4:58:45 PM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"4:58:45 PM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"4:58:45 PM"}
{"meta":"","level":"info","message":"","timestamp":"4:58:45 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"4:58:45 PM"}
{"meta":"","level":"info","message":"","timestamp":"4:58:45 PM"}
{"level":"info","message":"digit_endorsment starts","timestamp":"4:59:55 PM"}
{"level":"info","message":"IncomingMessage {\n  _readableState: \n   ReadableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     buffer: BufferList { head: null, tail: null, length: 0 },\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: true,\n     ended: true,\n     endEmitted: true,\n     reading: false,\n     sync: false,\n     needReadable: false,\n     emittedReadable: false,\n     readableListening: false,\n     resumeScheduled: false,\n     defaultEncoding: 'utf8',\n     ranOut: false,\n     awaitDrain: 0,\n     readingMore: false,\n     decoder: null,\n     encoding: null },\n  readable: false,\n  domain: null,\n  _events: {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 321,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 57637,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 57753 } },\n  connection: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 321,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 57637,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 57753 } },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  headers: \n   { 'content-type': 'application/json',\n     'user-agent': 'PostmanRuntime/7.26.8',\n     accept: '*/*',\n     'cache-control': 'no-cache',\n     'postman-token': '49b36d57-f7aa-44bb-a0ad-054e7b055035',\n     host: 'localhost:3000',\n     'accept-encoding': 'gzip, deflate, br',\n     connection: 'keep-alive',\n     'content-length': '26' },\n  rawHeaders: \n   [ 'Content-Type',\n     'application/json',\n     'User-Agent',\n     'PostmanRuntime/7.26.8',\n     'Accept',\n     '*/*',\n     'Cache-Control',\n     'no-cache',\n     'Postman-Token',\n     '49b36d57-f7aa-44bb-a0ad-054e7b055035',\n     'Host',\n     'localhost:3000',\n     'Accept-Encoding',\n     'gzip, deflate, br',\n     'Connection',\n     'keep-alive',\n     'Content-Length',\n     '26' ],\n  trailers: {},\n  rawTrailers: [],\n  upgrade: false,\n  url: '/digit_endorsment',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 321,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 57637,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 57753 } },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '',\n  originalUrl: '/digit_endorsment',\n  _parsedUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  params: {},\n  query: {},\n  res: \n   ServerResponse {\n     domain: null,\n     _events: { finish: [Object], end: [Function: onevent] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     output: [],\n     outputEncodings: [],\n     outputCallbacks: [],\n     outputSize: 0,\n     writable: true,\n     _last: false,\n     upgrading: false,\n     chunkedEncoding: false,\n     shouldKeepAlive: true,\n     useChunkedEncodingByDefault: true,\n     sendDate: true,\n     _removedHeader: {},\n     _contentLength: null,\n     _hasBody: true,\n     _trailer: '',\n     finished: false,\n     _headerSent: false,\n     socket: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 57637,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     connection: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 57637,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     _header: null,\n     _headers: \n      { 'x-powered-by': 'Express',\n        'access-control-allow-credentials': 'true',\n        'access-control-allow-headers': 'X-Requested-With, Content-Type',\n        'access-control-allow-origin': '*' },\n     _headerNames: \n      { 'x-powered-by': 'X-Powered-By',\n        'access-control-allow-credentials': 'Access-Control-Allow-Credentials',\n        'access-control-allow-headers': 'Access-Control-Allow-Headers',\n        'access-control-allow-origin': 'Access-Control-Allow-Origin' },\n     _onPendingData: [Function: updateOutgoingData],\n     req: [Circular],\n     locals: {},\n     writeHead: [Function: writeHead],\n     end: [Function: end],\n     _startAt: undefined,\n     _startTime: undefined,\n     __onFinished: { [Function: listener] queue: [Object] } },\n  _parsedOriginalUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  sessionStore: \n   MemoryStore {\n     domain: null,\n     _events: \n      { disconnect: [Function: ondisconnect],\n        connect: [Function: onconnect] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     sessions: {},\n     generate: [Function] },\n  sessionID: 'GgltVlTORHWIjGxsLUzgz5LUw10nDXl0',\n  session: \n   Session {\n     cookie: \n      { path: '/',\n        _expires: 2022-01-13T11:39:02.916Z,\n        originalMaxAge: 600000,\n        httpOnly: true } },\n  body: { PB_CRN: 1052277 },\n  _body: true,\n  length: undefined,\n  read: [Function],\n  route: \n   Route {\n     path: '/digit_endorsment',\n     stack: [ [Object] ],\n     methods: { post: true } },\n  _startAt: [ 20759, 776829700 ],\n  _startTime: 2022-01-13T11:29:02.939Z,\n  _remoteAddress: '::1',\n  secret: undefined,\n  cookies: {},\n  signedCookies: {} }","timestamp":"5:00:01 PM"}
{"level":"info","message":"{ person: \n   [ { individual: [Object],\n       identificationDocuments: [Object],\n       communications: [Object],\n       address: [Object] } ],\n  nominee: \n   { firstName: '___firstName___',\n     lastName: '___lastName___',\n     dateOfBirth: '___dateOfBirth___',\n     relation: '___relation___' },\n  financer: '___financer___' }","timestamp":"5:00:50 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"5:02:14 PM"}
{"meta":"","level":"info","message":"","timestamp":"5:02:14 PM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"5:02:14 PM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"5:02:14 PM"}
{"meta":"","level":"info","message":"","timestamp":"5:02:14 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"5:02:14 PM"}
{"meta":"","level":"info","message":"","timestamp":"5:02:14 PM"}
{"level":"info","message":"digit_endorsment starts","timestamp":"5:02:23 PM"}
{"level":"info","message":"IncomingMessage {\n  _readableState: \n   ReadableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     buffer: BufferList { head: null, tail: null, length: 0 },\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: true,\n     ended: true,\n     endEmitted: true,\n     reading: false,\n     sync: false,\n     needReadable: false,\n     emittedReadable: false,\n     readableListening: false,\n     resumeScheduled: false,\n     defaultEncoding: 'utf8',\n     ranOut: false,\n     awaitDrain: 0,\n     readingMore: false,\n     decoder: null,\n     encoding: null },\n  readable: false,\n  domain: null,\n  _events: {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 321,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 44743,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 57785 } },\n  connection: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 321,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 44743,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 57785 } },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  headers: \n   { 'content-type': 'application/json',\n     'user-agent': 'PostmanRuntime/7.26.8',\n     accept: '*/*',\n     'cache-control': 'no-cache',\n     'postman-token': '97257859-e881-4a2e-8697-3c7975dcfcf7',\n     host: 'localhost:3000',\n     'accept-encoding': 'gzip, deflate, br',\n     connection: 'keep-alive',\n     'content-length': '26' },\n  rawHeaders: \n   [ 'Content-Type',\n     'application/json',\n     'User-Agent',\n     'PostmanRuntime/7.26.8',\n     'Accept',\n     '*/*',\n     'Cache-Control',\n     'no-cache',\n     'Postman-Token',\n     '97257859-e881-4a2e-8697-3c7975dcfcf7',\n     'Host',\n     'localhost:3000',\n     'Accept-Encoding',\n     'gzip, deflate, br',\n     'Connection',\n     'keep-alive',\n     'Content-Length',\n     '26' ],\n  trailers: {},\n  rawTrailers: [],\n  upgrade: false,\n  url: '/digit_endorsment',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 321,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 44743,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 57785 } },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '',\n  originalUrl: '/digit_endorsment',\n  _parsedUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  params: {},\n  query: {},\n  res: \n   ServerResponse {\n     domain: null,\n     _events: { finish: [Object], end: [Function: onevent] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     output: [],\n     outputEncodings: [],\n     outputCallbacks: [],\n     outputSize: 0,\n     writable: true,\n     _last: false,\n     upgrading: false,\n     chunkedEncoding: false,\n     shouldKeepAlive: true,\n     useChunkedEncodingByDefault: true,\n     sendDate: true,\n     _removedHeader: {},\n     _contentLength: null,\n     _hasBody: true,\n     _trailer: '',\n     finished: false,\n     _headerSent: false,\n     socket: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 44743,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     connection: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 44743,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     _header: null,\n     _headers: \n      { 'x-powered-by': 'Express',\n        'access-control-allow-credentials': 'true',\n        'access-control-allow-headers': 'X-Requested-With, Content-Type',\n        'access-control-allow-origin': '*' },\n     _headerNames: \n      { 'x-powered-by': 'X-Powered-By',\n        'access-control-allow-credentials': 'Access-Control-Allow-Credentials',\n        'access-control-allow-headers': 'Access-Control-Allow-Headers',\n        'access-control-allow-origin': 'Access-Control-Allow-Origin' },\n     _onPendingData: [Function: updateOutgoingData],\n     req: [Circular],\n     locals: {},\n     writeHead: [Function: writeHead],\n     end: [Function: end],\n     _startAt: undefined,\n     _startTime: undefined,\n     __onFinished: { [Function: listener] queue: [Object] } },\n  _parsedOriginalUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  sessionStore: \n   MemoryStore {\n     domain: null,\n     _events: \n      { disconnect: [Function: ondisconnect],\n        connect: [Function: onconnect] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     sessions: {},\n     generate: [Function] },\n  sessionID: 'RhfqN0Epr9hJyDvKWrP3UKulL53wBNmh',\n  session: \n   Session {\n     cookie: \n      { path: '/',\n        _expires: 2022-01-13T11:42:19.357Z,\n        originalMaxAge: 600000,\n        httpOnly: true } },\n  body: { PB_CRN: 1052277 },\n  _body: true,\n  length: undefined,\n  read: [Function],\n  route: \n   Route {\n     path: '/digit_endorsment',\n     stack: [ [Object] ],\n     methods: { post: true } },\n  _startAt: [ 20956, 216973200 ],\n  _startTime: 2022-01-13T11:32:19.380Z,\n  _remoteAddress: '::1',\n  secret: undefined,\n  cookies: {},\n  signedCookies: {} }","timestamp":"5:02:23 PM"}
{"level":"info","message":"{ person: \n   [ { individual: [Object],\n       identificationDocuments: [Object],\n       communications: [Object],\n       address: [Object] } ],\n  nominee: \n   { firstName: '___firstName___',\n     lastName: '___lastName___',\n     dateOfBirth: '___dateOfBirth___',\n     relation: '___relation___' },\n  financer: '___financer___' }","timestamp":"5:02:39 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"5:06:27 PM"}
{"meta":"","level":"info","message":"","timestamp":"5:06:27 PM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"5:06:27 PM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"5:06:27 PM"}
{"meta":"","level":"info","message":"","timestamp":"5:06:27 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"5:06:27 PM"}
{"meta":"","level":"info","message":"","timestamp":"5:06:27 PM"}
{"level":"info","message":"digit_endorsment starts","timestamp":"5:06:36 PM"}
{"level":"info","message":"IncomingMessage {\n  _readableState: \n   ReadableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     buffer: BufferList { head: null, tail: null, length: 0 },\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: true,\n     ended: true,\n     endEmitted: true,\n     reading: false,\n     sync: false,\n     needReadable: false,\n     emittedReadable: false,\n     readableListening: false,\n     resumeScheduled: false,\n     defaultEncoding: 'utf8',\n     ranOut: false,\n     awaitDrain: 0,\n     readingMore: false,\n     decoder: null,\n     encoding: null },\n  readable: false,\n  domain: null,\n  _events: {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 321,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 45413,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 57817 } },\n  connection: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 321,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 45413,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 57817 } },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  headers: \n   { 'content-type': 'application/json',\n     'user-agent': 'PostmanRuntime/7.26.8',\n     accept: '*/*',\n     'cache-control': 'no-cache',\n     'postman-token': '9f9c65fe-4706-46e6-b85a-544a2d62710e',\n     host: 'localhost:3000',\n     'accept-encoding': 'gzip, deflate, br',\n     connection: 'keep-alive',\n     'content-length': '26' },\n  rawHeaders: \n   [ 'Content-Type',\n     'application/json',\n     'User-Agent',\n     'PostmanRuntime/7.26.8',\n     'Accept',\n     '*/*',\n     'Cache-Control',\n     'no-cache',\n     'Postman-Token',\n     '9f9c65fe-4706-46e6-b85a-544a2d62710e',\n     'Host',\n     'localhost:3000',\n     'Accept-Encoding',\n     'gzip, deflate, br',\n     'Connection',\n     'keep-alive',\n     'Content-Length',\n     '26' ],\n  trailers: {},\n  rawTrailers: [],\n  upgrade: false,\n  url: '/digit_endorsment',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        bytesRead: 321,\n        _externalStream: {},\n        fd: -1,\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        writeQueueSize: 0 },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [Object],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Object],\n        close: [Object],\n        data: [Function: socketOnData],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     destroyed: false,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _server: \n      Server {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _pendingResponseData: 0,\n        _connectionKey: '6::::3000' },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _timer: [Object],\n        _unrefed: true,\n        msecs: 120000 },\n     _idleStart: 45413,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     read: [Function],\n     _consuming: true,\n     _httpMessage: \n      ServerResponse {\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedHeader: {},\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _headers: [Object],\n        _headerNames: [Object],\n        _onPendingData: [Function: updateOutgoingData],\n        req: [Circular],\n        locals: {},\n        writeHead: [Function: writeHead],\n        end: [Function: end],\n        _startAt: undefined,\n        _startTime: undefined,\n        __onFinished: [Object] },\n     _peername: { address: '::1', family: 'IPv6', port: 57817 } },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '',\n  originalUrl: '/digit_endorsment',\n  _parsedUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  params: {},\n  query: {},\n  res: \n   ServerResponse {\n     domain: null,\n     _events: { finish: [Object], end: [Function: onevent] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     output: [],\n     outputEncodings: [],\n     outputCallbacks: [],\n     outputSize: 0,\n     writable: true,\n     _last: false,\n     upgrading: false,\n     chunkedEncoding: false,\n     shouldKeepAlive: true,\n     useChunkedEncodingByDefault: true,\n     sendDate: true,\n     _removedHeader: {},\n     _contentLength: null,\n     _hasBody: true,\n     _trailer: '',\n     finished: false,\n     _headerSent: false,\n     socket: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 45413,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     connection: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [Object],\n        _parent: null,\n        _host: null,\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        destroyed: false,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 45413,\n        parser: [Object],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        read: [Function],\n        _consuming: true,\n        _httpMessage: [Circular],\n        _peername: [Object] },\n     _header: null,\n     _headers: \n      { 'x-powered-by': 'Express',\n        'access-control-allow-credentials': 'true',\n        'access-control-allow-headers': 'X-Requested-With, Content-Type',\n        'access-control-allow-origin': '*' },\n     _headerNames: \n      { 'x-powered-by': 'X-Powered-By',\n        'access-control-allow-credentials': 'Access-Control-Allow-Credentials',\n        'access-control-allow-headers': 'Access-Control-Allow-Headers',\n        'access-control-allow-origin': 'Access-Control-Allow-Origin' },\n     _onPendingData: [Function: updateOutgoingData],\n     req: [Circular],\n     locals: {},\n     writeHead: [Function: writeHead],\n     end: [Function: end],\n     _startAt: undefined,\n     _startTime: undefined,\n     __onFinished: { [Function: listener] queue: [Object] } },\n  _parsedOriginalUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/digit_endorsment',\n     path: '/digit_endorsment',\n     href: '/digit_endorsment',\n     _raw: '/digit_endorsment' },\n  sessionStore: \n   MemoryStore {\n     domain: null,\n     _events: \n      { disconnect: [Function: ondisconnect],\n        connect: [Function: onconnect] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     sessions: {},\n     generate: [Function] },\n  sessionID: '7M5jTSuJSjPRz9x_4Sr36XXYIm74nF_0',\n  session: \n   Session {\n     cookie: \n      { path: '/',\n        _expires: 2022-01-13T11:46:33.309Z,\n        originalMaxAge: 600000,\n        httpOnly: true } },\n  body: { PB_CRN: 1052277 },\n  _body: true,\n  length: undefined,\n  read: [Function],\n  route: \n   Route {\n     path: '/digit_endorsment',\n     stack: [ [Object] ],\n     methods: { post: true } },\n  _startAt: [ 21210, 169794200 ],\n  _startTime: 2022-01-13T11:36:33.332Z,\n  _remoteAddress: '::1',\n  secret: undefined,\n  cookies: {},\n  signedCookies: {} }","timestamp":"5:06:36 PM"}
{"level":"info","message":"{ person: \n   [ { individual: [Object],\n       identificationDocuments: [Object],\n       communications: [Object],\n       address: [Object] } ],\n  nominee: \n   { firstName: '___firstName___',\n     lastName: '___lastName___',\n     dateOfBirth: '___dateOfBirth___',\n     relation: '___relation___' },\n  financer: '___financer___' }","timestamp":"5:06:46 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"5:26:01 PM"}
{"meta":"","level":"info","message":"","timestamp":"5:26:01 PM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"5:26:01 PM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"5:26:01 PM"}
{"meta":"","level":"info","message":"","timestamp":"5:26:01 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"5:26:01 PM"}
{"meta":"","level":"info","message":"","timestamp":"5:26:01 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"6:05:03 PM"}
{"meta":"","level":"info","message":"","timestamp":"6:05:03 PM"}
{"level":"info","message":"Development Environment is Listening on port 3000","timestamp":"6:05:03 PM"}
{"level":"info","message":"Web URL : http://localhost:3000","timestamp":"6:05:03 PM"}
{"meta":"","level":"info","message":"","timestamp":"6:05:03 PM"}
{"level":"info","message":"$$$$$$$$$$$$$$$$$$$$$$$$","timestamp":"6:05:03 PM"}
{"meta":"","level":"info","message":"","timestamp":"6:05:03 PM"}

{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"8:50:23 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"8:50:23 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"8:50:23 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"8:50:23 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"8:50:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"8:50:31 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"8:50:31 AM"}
{"level":"error","message":"LOG REFERER YTD undefined ::ffff:127.0.0.1 undefined","timestamp":"8:50:31 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:17:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:17:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:17:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:17:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:17:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:17:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:17:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:17:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:17:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:17:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:17:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:17:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:17:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:17:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:17:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:17:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:17:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:17:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:17:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:17:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:17:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:17:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:17:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:17:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:17:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:17:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:17:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:17:37 AM"}
{"level":"error","message":"(node:9832) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): MongoError: E11000 duplicate key error collection: lm-api-qa.sync_contacts index: Sync_Contact_Id_1 dup key: { : null }","timestamp":"9:17:38 AM"}
{"level":"error","message":"(node:9832) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 2): MongoError: Index: { v: 2, unique: true, key: { Doc_Log_Id: 1 }, name: \"Doc_Log_Id_1\", ns: \"lm-api-qa.posp_doc_logs\", background: true } already exists with different options: { v: 2, key: { Doc_Log_Id: 1 }, name: \"Doc_Log_Id\", ns: \"lm-api-qa.posp_doc_logs\" }","timestamp":"9:17:38 AM"}
{"level":"error","message":"(node:9832) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 3): MongoError: Index with name: Posp_Id_1 already exists with different options","timestamp":"9:17:38 AM"}
{"level":"error","message":"(node:9832) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 4): MongoError: E11000 duplicate key error collection: lm-api-qa.credentials index: Credential_Id_1 dup key: { : null }","timestamp":"9:17:38 AM"}
{"level":"error","message":"(node:9832) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 5): MongoError: E11000 duplicate key error collection: lm-api-qa.offline_transactions index: Transaction_Id_1 dup key: { : null }","timestamp":"9:17:38 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:17:55 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:17:55 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:7000/ ::1 string","timestamp":"9:18:12 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:7000/ ::1 string","timestamp":"9:18:12 AM"}
{"level":"error","message":"LOG REFERER YTD undefined ::ffff:127.0.0.1 undefined","timestamp":"9:18:17 AM"}
{"level":"error","message":"Travel_Premium_Initiate { city_id: 677,\n  client_name: 'PolicyBoss',\n  client_id: 2,\n  client_key: 'CLIENT-CNTP6NYE-CU9N-DUZW-CSPI-SH1IS4DOVHB9',\n  secret_key: 'SECRET-HZ07QRWY-JIBT-XRMQ-ZP95-J0RWP3DYRACW',\n  geo_long: 72.9106087,\n  geo_lat: 19.0997204,\n  ss_id: 0,\n  fba_id: 0,\n  sub_fba_id: 0,\n  agent_source: '0',\n  crn: NaN,\n  member_count: 1,\n  adult_count: 1,\n  child_count: 0,\n  member_6_relation: '',\n  member_6_birth_date: '',\n  member_6_gender: '',\n  member_5_relation: '',\n  member_5_birth_date: '',\n  member_5_gender: '',\n  member_4_relation: '',\n  member_4_birth_date: '',\n  member_4_gender: '',\n  member_3_relation: '',\n  member_3_birth_date: '',\n  member_3_gender: '',\n  member_2_relation: '',\n  member_2_birth_date: '',\n  member_2_gender: '',\n  member_1_relation: '',\n  member_1_birth_date: '2001-08-06',\n  member_1_gender: 'M',\n  mobile: '9999999999',\n  email: 'policybosstesting@gmail.com',\n  contact_name: 'NO NAME',\n  travel_insurance_si: '0',\n  travelling_to_area: 'WorldWide',\n  travel_start_date: '2024-08-07',\n  travel_end_date: '2024-08-10',\n  travel_insurance_type: 'individual',\n  trip_type: 'SINGLE',\n  execution_async: 'yes',\n  method_type: 'Premium',\n  product_id: 4,\n  insurer_selected: '',\n  ui_source: 'UI22',\n  app_version: 'PolicyBoss.com',\n  visitor_id: NaN,\n  ip_address: '' }","timestamp":"9:18:17 AM"}
{"level":"error","message":"(node:9832) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 6): MongoError: E11000 duplicate key error collection: lm-api-qa.identitycounters index: field_1_groupingField_1_model_1 dup key: { : \"Email_Event_Id\", : null, : \"Email_Event\" }","timestamp":"9:18:18 AM"}
{"level":"error","message":"LOG REFERER YTD undefined ::ffff:127.0.0.1 undefined","timestamp":"9:18:18 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:19:55 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:19:55 AM"}
{"level":"error","message":"DBG Isactive 1 Product_class Travel Insurer_Product_Class StarTravel","timestamp":"9:20:58 AM"}
{"level":"error","message":"DBG Isactive 1 Product_class Travel Insurer_Product_Class HDFCErgoTravel","timestamp":"9:20:58 AM"}
{"level":"error","message":"DBG Isactive 1 Product_class Travel Insurer_Product_Class TataAIGTravel","timestamp":"9:20:58 AM"}
{"level":"error","message":"DBG Isactive 1 Product_class Travel Insurer_Product_Class IciciLombardTravel","timestamp":"9:20:58 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:20:58 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:21:02 AM"}
{"level":"warn","message":"uncaughtException { Error: socket hang up\n    at createHangUpError (_http_client.js:254:15)\n    at Socket.socketOnEnd (_http_client.js:346:23)\n    at emitNone (events.js:91:20)\n    at Socket.emit (events.js:185:7)\n    at endReadableNT (_stream_readable.js:974:12)\n    at _combinedTickCallback (internal/process/next_tick.js:74:11)\n    at process._tickCallback (internal/process/next_tick.js:98:9)\n  code: 'ECONNRESET',\n  request: \n   ClientRequest {\n     domain: null,\n     _events: {},\n     _eventsCount: 0,\n     _maxListeners: undefined,\n     href: 'http://qa-horizon.policyboss.com:3000/report/save_log?env=Development&type=ERR',\n     options: \n      { host: 'qa-horizon.policyboss.com',\n        port: '3000',\n        path: '/report/save_log?env=Development&type=ERR',\n        href: 'http://qa-horizon.policyboss.com:3000/report/save_log?env=Development&type=ERR',\n        method: 'POST',\n        headers: [Object],\n        data: '[\"LOG REFERER YTD http://localhost:4200/ ::1 string\"]' },\n     _httpRequest: \n      Writable {\n        _writableState: [Object],\n        writable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        _options: [Object],\n        _ended: true,\n        _ending: true,\n        _redirectCount: 0,\n        _redirects: [],\n        _requestBodyLength: 53,\n        _requestBodyBuffers: [Object],\n        _onNativeResponse: [Function],\n        _currentRequest: [Object],\n        _currentUrl: 'http://qa-horizon.policyboss.com:3000/report/save_log?env=Development&type=ERR' } } }","timestamp":"9:21:02 AM"}
{"level":"warn","message":"uncaughtException { Error: socket hang up\n    at createHangUpError (_http_client.js:254:15)\n    at Socket.socketOnEnd (_http_client.js:346:23)\n    at emitNone (events.js:91:20)\n    at Socket.emit (events.js:185:7)\n    at endReadableNT (_stream_readable.js:974:12)\n    at _combinedTickCallback (internal/process/next_tick.js:74:11)\n    at process._tickCallback (internal/process/next_tick.js:98:9)\n  code: 'ECONNRESET',\n  request: \n   ClientRequest {\n     domain: null,\n     _events: {},\n     _eventsCount: 0,\n     _maxListeners: undefined,\n     href: 'http://qa-horizon.policyboss.com:3000/report/save_log?env=Development&type=ERR',\n     options: \n      { host: 'qa-horizon.policyboss.com',\n        port: '3000',\n        path: '/report/save_log?env=Development&type=ERR',\n        href: 'http://qa-horizon.policyboss.com:3000/report/save_log?env=Development&type=ERR',\n        method: 'POST',\n        headers: [Object],\n        data: '[\"LOG REFERER YTD http://localhost:4200/ ::1 string\"]' },\n     _httpRequest: \n      Writable {\n        _writableState: [Object],\n        writable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        _options: [Object],\n        _ended: true,\n        _ending: true,\n        _redirectCount: 0,\n        _redirects: [],\n        _requestBodyLength: 53,\n        _requestBodyBuffers: [Object],\n        _onNativeResponse: [Function],\n        _currentRequest: [Object],\n        _currentUrl: 'http://qa-horizon.policyboss.com:3000/report/save_log?env=Development&type=ERR' } } }","timestamp":"9:21:02 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:21:02 AM"}
{"level":"error","message":"LOG REFERER YTD undefined ::ffff:127.0.0.1 undefined","timestamp":"9:21:02 AM"}
{"level":"error","message":"LOG REFERER YTD undefined ::ffff:127.0.0.1 undefined","timestamp":"9:21:02 AM"}
{"level":"error","message":"LOG REFERER YTD undefined ::ffff:127.0.0.1 undefined","timestamp":"9:21:02 AM"}
{"level":"warn","message":"uncaughtException { Error: socket hang up\n    at createHangUpError (_http_client.js:254:15)\n    at Socket.socketCloseListener (_http_client.js:286:23)\n    at emitOne (events.js:101:20)\n    at Socket.emit (events.js:188:7)\n    at TCP._handle.close [as _onclose] (net.js:498:12)\n  code: 'ECONNRESET',\n  request: \n   ClientRequest {\n     domain: null,\n     _events: {},\n     _eventsCount: 0,\n     _maxListeners: undefined,\n     href: 'http://qa-horizon.policyboss.com:3000/report/save_log?env=Development&type=ERR',\n     options: \n      { host: 'qa-horizon.policyboss.com',\n        port: '3000',\n        path: '/report/save_log?env=Development&type=ERR',\n        href: 'http://qa-horizon.policyboss.com:3000/report/save_log?env=Development&type=ERR',\n        method: 'POST',\n        headers: [Object],\n        data: '[\"LOG REFERER YTD http://localhost:4200/ ::1 string\"]' },\n     _httpRequest: \n      Writable {\n        _writableState: [Object],\n        writable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        _options: [Object],\n        _ended: true,\n        _ending: true,\n        _redirectCount: 0,\n        _redirects: [],\n        _requestBodyLength: 53,\n        _requestBodyBuffers: [Object],\n        _onNativeResponse: [Function],\n        _currentRequest: [Object],\n        _currentUrl: 'http://qa-horizon.policyboss.com:3000/report/save_log?env=Development&type=ERR' } } }","timestamp":"9:21:02 AM"}
{"level":"warn","message":"uncaughtException { Error: socket hang up\n    at createHangUpError (_http_client.js:254:15)\n    at Socket.socketCloseListener (_http_client.js:286:23)\n    at emitOne (events.js:101:20)\n    at Socket.emit (events.js:188:7)\n    at TCP._handle.close [as _onclose] (net.js:498:12)\n  code: 'ECONNRESET',\n  request: \n   ClientRequest {\n     domain: null,\n     _events: {},\n     _eventsCount: 0,\n     _maxListeners: undefined,\n     href: 'http://qa-horizon.policyboss.com:3000/report/save_log?env=Development&type=ERR',\n     options: \n      { host: 'qa-horizon.policyboss.com',\n        port: '3000',\n        path: '/report/save_log?env=Development&type=ERR',\n        href: 'http://qa-horizon.policyboss.com:3000/report/save_log?env=Development&type=ERR',\n        method: 'POST',\n        headers: [Object],\n        data: '[\"LOG REFERER YTD http://localhost:4200/ ::1 string\"]' },\n     _httpRequest: \n      Writable {\n        _writableState: [Object],\n        writable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        _options: [Object],\n        _ended: true,\n        _ending: true,\n        _redirectCount: 0,\n        _redirects: [],\n        _requestBodyLength: 53,\n        _requestBodyBuffers: [Object],\n        _onNativeResponse: [Function],\n        _currentRequest: [Object],\n        _currentUrl: 'http://qa-horizon.policyboss.com:3000/report/save_log?env=Development&type=ERR' } } }","timestamp":"9:21:02 AM"}
{"level":"error","message":"LOG REFERER YTD undefined ::ffff:127.0.0.1 undefined","timestamp":"9:21:02 AM"}
{"level":"error","message":"Niva Health Renew LINE1","timestamp":"9:21:02 AM"}
{"level":"error","message":"Niva Health Renew LINE1","timestamp":"9:21:02 AM"}
{"level":"error","message":"Niva Health Renew LINE1","timestamp":"9:21:02 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:21:02 AM"}
{"level":"error","message":"Niva Health Renew LINE1","timestamp":"9:21:02 AM"}
{"level":"error","message":"Niva Health Renew LINE5","timestamp":"9:21:02 AM"}
{"level":"error","message":"Health Renewal Jyoti  undefined","timestamp":"9:21:02 AM"}
{"level":"error","message":"Health Renewal Jyoti plan_list [ { Plan_Id: 441,\n    Plan_Name: 'Plan B1',\n    Plan_Code: '1',\n    Is_Active: true },\n  { Plan_Id: 442,\n    Plan_Name: 'Plan C1',\n    Plan_Code: '2',\n    Is_Active: true },\n  { Plan_Id: 445,\n    Plan_Name: 'Plan A1',\n    Plan_Code: '5',\n    Is_Active: true } ]","timestamp":"9:21:02 AM"}
{"level":"error","message":"Dhananjay Health Renewal docLog  { Service_Log_Id: '',\n  Service_Log_Unique_Id: 'ARN-V5XWPMSG-BPZ2-W6Q1-TSXQ-UIC26OCJHYJL',\n  Request_Id: 699288,\n  User_Data_Id: 431553,\n  Request_Unique_Id: 'SRN-SFIDKSNB-MLLW-0FSC-A2G5-40CHFT5QAEMN',\n  PB_CRN: 1158085,\n  Client_Id: 2,\n  LM_Custom_Request: \n   { Plan_Code: '1',\n     Plan_Id: 441,\n     Plan_Name: 'Plan B1',\n     aadhar: '',\n     appointee_age: 0,\n     appointee_birth_date: '2024-08-06',\n     appointee_first_name: '',\n     appointee_last_name: '',\n     appointee_middle_name: '',\n     appointee_name: '',\n     appointee_relation: '',\n     birth_date: '1992-01-01',\n     city_id: 677,\n     communication_address_1: '',\n     communication_address_2: '',\n     communication_address_3: '',\n     communication_city: '',\n     communication_city_code: '',\n     communication_district_code: '',\n     communication_locality_code: '',\n     communication_pincode: '',\n     communication_state: '',\n     communication_state_code: '',\n     company_name: '',\n     current_date: '2024-08-06',\n     current_time: '09:08:92',\n     dbmaster_pb_city_id: 677,\n     dbmaster_pb_city_name: 'MUMBAI',\n     dbmaster_pb_pincode: 400001,\n     dbmaster_pb_state_id: 21,\n     dbmaster_pb_state_name: 'MAHARASHTRA',\n     email: 'policybosstesting@gmail.com',\n     final_premium: '',\n     first_name: 'NO',\n     gender: '',\n     gst_no: '',\n     gst_state: '',\n     insured_age: 32,\n     insurer_id: '',\n     insurer_integration_agent_code: 'Direct',\n     insurer_integration_location_code: '9202',\n     insurer_integration_pdf_url: '',\n     insurer_integration_service_password: 'c68ba59148d7012f352e7efdadffd06f',\n     insurer_integration_service_user: '53ab886c7c7e88d8e2f7a12872888b32',\n     insurer_vehicle_id: undefined,\n     is_posp: '',\n     is_reg_addr_comm_addr_same: '',\n     kyc_no: '',\n     kyc_ref_no: '',\n     last_name: 'NAME',\n     marital: '',\n     member_1_birth_date: '2001-08-06',\n     member_1_first_name: 'NO',\n     member_1_gender: 'M',\n     member_1_last_name: 'NAME',\n     member_1_middle_name: '',\n     member_1_occupation: '',\n     member_1_passport: '',\n     member_1_ped: '',\n     member_1_relation: '',\n     member_1_salutation: '',\n     member_array_birth_date: '2024-08-06',\n     member_array_first_name: '',\n     member_array_gender: '',\n     member_array_last_name: '',\n     member_array_middle_name: '',\n     member_array_occupation: '',\n     member_array_passport: '',\n     member_array_ped: '',\n     member_array_relation: '',\n     member_array_salutation: '',\n     method_type: 'Premium',\n     middle_name: '',\n     mobile: '9999999999',\n     net_premium: '',\n     nominee_address: '',\n     nominee_age: 0,\n     nominee_birth_date: '2024-08-06',\n     nominee_city_name: '',\n     nominee_first_name: '',\n     nominee_last_name: '',\n     nominee_middle_name: '',\n     nominee_name: '',\n     nominee_pincode: '',\n     nominee_relation: '',\n     occupation: '',\n     pan: '',\n     permanent_address_1: '',\n     permanent_address_2: '',\n     permanent_address_3: '',\n     permanent_city: '',\n     permanent_city_code: '',\n     permanent_district_code: '',\n     permanent_locality_code: '',\n     permanent_pincode: '',\n     permanent_state: '',\n     permanent_state_code: '',\n     pg_reference_number_1: '',\n     pg_reference_number_2: '',\n     policy_end_date: '2024-08-10',\n     policy_number: '',\n     policy_start_date: '2024-08-07',\n     policy_tenure: '',\n     product_id: 4,\n     proposal_create_flag: '',\n     recon_reference_number: '',\n     salutation: '',\n     salutation_1: '',\n     tax: '',\n     travel_insurance_si: '0',\n     travel_insurance_type: 'individual',\n     visiting_countries: '',\n     member_1_inc: 0,\n     member_1_age: 23,\n     travel_days: 4 },\n  Insurer_Request: '{\\n    \"selected_plan\": \"Gold\",\\n    \"selected_product\": \"Travel Guard\",\\n    \"application_date\": \"08/03/2024\",\\n    \"policy_type\": \"Without Sublimit\",\\n    \"departure_date\": \"08/04/2024\",\\n    \"return_date_single\": \"08/07/2024\",\\n    \"member_count\": \"1\",\\n        \\n    \"dob_1\": \"08/03/2001\",\\n    \"triptype\": \"Single Trip\",\\n    \"selected_zone\": \"Worldwide Including USA/Canada\",\\n    \"product_id\": \"M100000000003\",\\n    \"customer_pincode\": \"400086\",\\n    \"tripdays\": \"\",\\n    \"email\": \"policybosstesting@gmail.com\",\\n    \"mobile_no\": \"9999999999\",\\n    \"office_location\": \"DELHI\",\\n    \"visa_type\": \"Non Immigrant\",\\n    \"is_tata_employee\": \"\",\\n    \"employee_id\": \"\",\\n    \"tata_emp_email\": \"\"\\n}',\n  Insurer_Response: '',\n  Insurer_Response_Core: '',\n  Premium_Breakup: null,\n  LM_Response: '',\n  Insurer_Transaction_Identifier: '',\n  Health_Renewal_Proposal_Request_Core: null,\n  Status: 'pending',\n  Error_Code: '',\n  Is_Active: 1,\n  Created_On: 2024-08-06T03:51:51.660Z,\n  Product_Id: 4,\n  Insurer_Id: 26,\n  Plan_Id: 441,\n  Plan_Name: 'Plan B1',\n  Plan_Code: '1',\n  Allow_Renew: undefined,\n  Addon_Mode: 'ALACARTE',\n  Method_Type: 'Premium',\n  Call_Execution_Time: 0 }","timestamp":"9:21:51 AM"}
{"level":"error","message":"Dhananjay Health Renewal Before save_log  true","timestamp":"9:21:51 AM"}
{"level":"error","message":"Plan_execute_loop 1158085 26 ARN-V5XWPMSG-BPZ2-W6Q1-TSXQ-UIC26OCJHYJL 441 Plan B1 441 Plan B1","timestamp":"9:21:51 AM"}
{"level":"error","message":"Dhananjay Health Renewal After save_log  true","timestamp":"9:21:51 AM"}
{"level":"error","message":"Dhananjay Health Renewal docLog  { Service_Log_Id: '',\n  Service_Log_Unique_Id: 'ARN-VWFPIRJN-DA6F-0G5N-IEQJ-T20WE3EUTFPA',\n  Request_Id: 699288,\n  User_Data_Id: 431553,\n  Request_Unique_Id: 'SRN-SFIDKSNB-MLLW-0FSC-A2G5-40CHFT5QAEMN',\n  PB_CRN: 1158085,\n  Client_Id: 2,\n  LM_Custom_Request: \n   { Plan_Code: '2',\n     Plan_Id: 442,\n     Plan_Name: 'Plan C1',\n     aadhar: '',\n     appointee_age: 0,\n     appointee_birth_date: '2024-08-06',\n     appointee_first_name: '',\n     appointee_last_name: '',\n     appointee_middle_name: '',\n     appointee_name: '',\n     appointee_relation: '',\n     birth_date: '1992-01-01',\n     city_id: 677,\n     communication_address_1: '',\n     communication_address_2: '',\n     communication_address_3: '',\n     communication_city: '',\n     communication_city_code: '',\n     communication_district_code: '',\n     communication_locality_code: '',\n     communication_pincode: '',\n     communication_state: '',\n     communication_state_code: '',\n     company_name: '',\n     current_date: '2024-08-06',\n     current_time: '09:08:92',\n     dbmaster_pb_city_id: 677,\n     dbmaster_pb_city_name: 'MUMBAI',\n     dbmaster_pb_pincode: 400001,\n     dbmaster_pb_state_id: 21,\n     dbmaster_pb_state_name: 'MAHARASHTRA',\n     email: 'policybosstesting@gmail.com',\n     final_premium: '',\n     first_name: 'NO',\n     gender: '',\n     gst_no: '',\n     gst_state: '',\n     insured_age: 32,\n     insurer_id: '',\n     insurer_integration_agent_code: 'Direct',\n     insurer_integration_location_code: '9202',\n     insurer_integration_pdf_url: '',\n     insurer_integration_service_password: 'c68ba59148d7012f352e7efdadffd06f',\n     insurer_integration_service_user: '53ab886c7c7e88d8e2f7a12872888b32',\n     insurer_vehicle_id: undefined,\n     is_posp: '',\n     is_reg_addr_comm_addr_same: '',\n     kyc_no: '',\n     kyc_ref_no: '',\n     last_name: 'NAME',\n     marital: '',\n     member_1_age: 23,\n     member_1_birth_date: '2001-08-06',\n     member_1_first_name: 'NO',\n     member_1_gender: 'M',\n     member_1_inc: 0,\n     member_1_last_name: 'NAME',\n     member_1_middle_name: '',\n     member_1_occupation: '',\n     member_1_passport: '',\n     member_1_ped: '',\n     member_1_relation: '',\n     member_1_salutation: '',\n     member_array_birth_date: '2024-08-06',\n     member_array_first_name: '',\n     member_array_gender: '',\n     member_array_last_name: '',\n     member_array_middle_name: '',\n     member_array_occupation: '',\n     member_array_passport: '',\n     member_array_ped: '',\n     member_array_relation: '',\n     member_array_salutation: '',\n     method_type: 'Premium',\n     middle_name: '',\n     mobile: '9999999999',\n     net_premium: '',\n     nominee_address: '',\n     nominee_age: 0,\n     nominee_birth_date: '2024-08-06',\n     nominee_city_name: '',\n     nominee_first_name: '',\n     nominee_last_name: '',\n     nominee_middle_name: '',\n     nominee_name: '',\n     nominee_pincode: '',\n     nominee_relation: '',\n     occupation: '',\n     pan: '',\n     permanent_address_1: '',\n     permanent_address_2: '',\n     permanent_address_3: '',\n     permanent_city: '',\n     permanent_city_code: '',\n     permanent_district_code: '',\n     permanent_locality_code: '',\n     permanent_pincode: '',\n     permanent_state: '',\n     permanent_state_code: '',\n     pg_reference_number_1: '',\n     pg_reference_number_2: '',\n     policy_end_date: '2024-08-10',\n     policy_number: '',\n     policy_start_date: '2024-08-07',\n     policy_tenure: '',\n     product_id: 4,\n     proposal_create_flag: '',\n     recon_reference_number: '',\n     salutation: '',\n     salutation_1: '',\n     tax: '',\n     travel_days: 4,\n     travel_insurance_si: '0',\n     travel_insurance_type: 'individual',\n     visiting_countries: '' },\n  Insurer_Request: '{\\n    \"selected_plan\": \"Gold\",\\n    \"selected_product\": \"Travel Guard\",\\n    \"application_date\": \"08/03/2024\",\\n    \"policy_type\": \"Without Sublimit\",\\n    \"departure_date\": \"08/04/2024\",\\n    \"return_date_single\": \"08/07/2024\",\\n    \"member_count\": \"1\",\\n        \\n    \"dob_1\": \"08/03/2001\",\\n    \"triptype\": \"Single Trip\",\\n    \"selected_zone\": \"Worldwide Including USA/Canada\",\\n    \"product_id\": \"M100000000003\",\\n    \"customer_pincode\": \"400086\",\\n    \"tripdays\": \"\",\\n    \"email\": \"policybosstesting@gmail.com\",\\n    \"mobile_no\": \"9999999999\",\\n    \"office_location\": \"DELHI\",\\n    \"visa_type\": \"Non Immigrant\",\\n    \"is_tata_employee\": \"\",\\n    \"employee_id\": \"\",\\n    \"tata_emp_email\": \"\"\\n}',\n  Insurer_Response: '',\n  Insurer_Response_Core: '',\n  Premium_Breakup: null,\n  LM_Response: '',\n  Insurer_Transaction_Identifier: '',\n  Health_Renewal_Proposal_Request_Core: null,\n  Status: 'pending',\n  Error_Code: '',\n  Is_Active: 1,\n  Created_On: 2024-08-06T03:51:53.581Z,\n  Product_Id: 4,\n  Insurer_Id: 26,\n  Plan_Id: 442,\n  Plan_Name: 'Plan C1',\n  Plan_Code: '2',\n  Allow_Renew: undefined,\n  Addon_Mode: 'ALACARTE',\n  Method_Type: 'Premium',\n  Call_Execution_Time: 0 }","timestamp":"9:21:53 AM"}
{"level":"error","message":"Dhananjay Health Renewal Before save_log  true","timestamp":"9:21:53 AM"}
{"level":"error","message":"Plan_execute_loop 1158085 26 ARN-VWFPIRJN-DA6F-0G5N-IEQJ-T20WE3EUTFPA 442 Plan C1 442 Plan C1","timestamp":"9:21:53 AM"}
{"level":"error","message":"Dhananjay Health Renewal After save_log  true","timestamp":"9:21:53 AM"}
{"level":"error","message":"Dhananjay Health Renewal docLog  { Service_Log_Id: '',\n  Service_Log_Unique_Id: 'ARN-SIWL3FS7-VYRC-M1EW-QFMM-UOERTGYZJHOB',\n  Request_Id: 699288,\n  User_Data_Id: 431553,\n  Request_Unique_Id: 'SRN-SFIDKSNB-MLLW-0FSC-A2G5-40CHFT5QAEMN',\n  PB_CRN: 1158085,\n  Client_Id: 2,\n  LM_Custom_Request: \n   { Plan_Code: '5',\n     Plan_Id: 445,\n     Plan_Name: 'Plan A1',\n     aadhar: '',\n     appointee_age: 0,\n     appointee_birth_date: '2024-08-06',\n     appointee_first_name: '',\n     appointee_last_name: '',\n     appointee_middle_name: '',\n     appointee_name: '',\n     appointee_relation: '',\n     birth_date: '1992-01-01',\n     city_id: 677,\n     communication_address_1: '',\n     communication_address_2: '',\n     communication_address_3: '',\n     communication_city: '',\n     communication_city_code: '',\n     communication_district_code: '',\n     communication_locality_code: '',\n     communication_pincode: '',\n     communication_state: '',\n     communication_state_code: '',\n     company_name: '',\n     current_date: '2024-08-06',\n     current_time: '09:08:92',\n     dbmaster_pb_city_id: 677,\n     dbmaster_pb_city_name: 'MUMBAI',\n     dbmaster_pb_pincode: 400001,\n     dbmaster_pb_state_id: 21,\n     dbmaster_pb_state_name: 'MAHARASHTRA',\n     email: 'policybosstesting@gmail.com',\n     final_premium: '',\n     first_name: 'NO',\n     gender: '',\n     gst_no: '',\n     gst_state: '',\n     insured_age: 32,\n     insurer_id: '',\n     insurer_integration_agent_code: 'Direct',\n     insurer_integration_location_code: '9202',\n     insurer_integration_pdf_url: '',\n     insurer_integration_service_password: 'c68ba59148d7012f352e7efdadffd06f',\n     insurer_integration_service_user: '53ab886c7c7e88d8e2f7a12872888b32',\n     insurer_vehicle_id: undefined,\n     is_posp: '',\n     is_reg_addr_comm_addr_same: '',\n     kyc_no: '',\n     kyc_ref_no: '',\n     last_name: 'NAME',\n     marital: '',\n     member_1_age: 23,\n     member_1_birth_date: '2001-08-06',\n     member_1_first_name: 'NO',\n     member_1_gender: 'M',\n     member_1_inc: 0,\n     member_1_last_name: 'NAME',\n     member_1_middle_name: '',\n     member_1_occupation: '',\n     member_1_passport: '',\n     member_1_ped: '',\n     member_1_relation: '',\n     member_1_salutation: '',\n     member_array_birth_date: '2024-08-06',\n     member_array_first_name: '',\n     member_array_gender: '',\n     member_array_last_name: '',\n     member_array_middle_name: '',\n     member_array_occupation: '',\n     member_array_passport: '',\n     member_array_ped: '',\n     member_array_relation: '',\n     member_array_salutation: '',\n     method_type: 'Premium',\n     middle_name: '',\n     mobile: '9999999999',\n     net_premium: '',\n     nominee_address: '',\n     nominee_age: 0,\n     nominee_birth_date: '2024-08-06',\n     nominee_city_name: '',\n     nominee_first_name: '',\n     nominee_last_name: '',\n     nominee_middle_name: '',\n     nominee_name: '',\n     nominee_pincode: '',\n     nominee_relation: '',\n     occupation: '',\n     pan: '',\n     permanent_address_1: '',\n     permanent_address_2: '',\n     permanent_address_3: '',\n     permanent_city: '',\n     permanent_city_code: '',\n     permanent_district_code: '',\n     permanent_locality_code: '',\n     permanent_pincode: '',\n     permanent_state: '',\n     permanent_state_code: '',\n     pg_reference_number_1: '',\n     pg_reference_number_2: '',\n     policy_end_date: '2024-08-10',\n     policy_number: '',\n     policy_start_date: '2024-08-07',\n     policy_tenure: '',\n     product_id: 4,\n     proposal_create_flag: '',\n     recon_reference_number: '',\n     salutation: '',\n     salutation_1: '',\n     tax: '',\n     travel_days: 4,\n     travel_insurance_si: '0',\n     travel_insurance_type: 'individual',\n     visiting_countries: '' },\n  Insurer_Request: '{\\n    \"selected_plan\": \"Gold\",\\n    \"selected_product\": \"Travel Guard\",\\n    \"application_date\": \"08/03/2024\",\\n    \"policy_type\": \"Without Sublimit\",\\n    \"departure_date\": \"08/04/2024\",\\n    \"return_date_single\": \"08/07/2024\",\\n    \"member_count\": \"1\",\\n        \\n    \"dob_1\": \"08/03/2001\",\\n    \"triptype\": \"Single Trip\",\\n    \"selected_zone\": \"Worldwide Including USA/Canada\",\\n    \"product_id\": \"M100000000003\",\\n    \"customer_pincode\": \"400086\",\\n    \"tripdays\": \"\",\\n    \"email\": \"policybosstesting@gmail.com\",\\n    \"mobile_no\": \"9999999999\",\\n    \"office_location\": \"DELHI\",\\n    \"visa_type\": \"Non Immigrant\",\\n    \"is_tata_employee\": \"\",\\n    \"employee_id\": \"\",\\n    \"tata_emp_email\": \"\"\\n}',\n  Insurer_Response: '',\n  Insurer_Response_Core: '',\n  Premium_Breakup: null,\n  LM_Response: '',\n  Insurer_Transaction_Identifier: '',\n  Health_Renewal_Proposal_Request_Core: null,\n  Status: 'pending',\n  Error_Code: '',\n  Is_Active: 1,\n  Created_On: 2024-08-06T03:51:56.565Z,\n  Product_Id: 4,\n  Insurer_Id: 26,\n  Plan_Id: 445,\n  Plan_Name: 'Plan A1',\n  Plan_Code: '5',\n  Allow_Renew: undefined,\n  Addon_Mode: 'ALACARTE',\n  Method_Type: 'Premium',\n  Call_Execution_Time: 0 }","timestamp":"9:21:56 AM"}
{"level":"error","message":"Dhananjay Health Renewal Before save_log  true","timestamp":"9:21:56 AM"}
{"level":"error","message":"Plan_execute_loop 1158085 26 ARN-SIWL3FS7-VYRC-M1EW-QFMM-UOERTGYZJHOB 445 Plan A1 445 Plan A1","timestamp":"9:21:56 AM"}
{"level":"error","message":"Dhananjay Health Renewal After save_log  true","timestamp":"9:21:56 AM"}
{"level":"error","message":"Niva Health Renew LINE5","timestamp":"9:21:56 AM"}
{"level":"error","message":"Health Renewal Jyoti  undefined","timestamp":"9:21:56 AM"}
{"level":"error","message":"Health Renewal Jyoti plan_list [ { Plan_Id: 501,\n    Plan_Name: 'Silver',\n    Plan_Code: '1',\n    Is_Active: true },\n  { Plan_Id: 503,\n    Plan_Name: 'Gold',\n    Plan_Code: '3',\n    Is_Active: true },\n  { Plan_Id: 504,\n    Plan_Name: 'Platinum',\n    Plan_Code: '4',\n    Is_Active: true },\n  { Plan_Id: 505,\n    Plan_Name: 'Titanium',\n    Plan_Code: '5',\n    Is_Active: true } ]","timestamp":"9:21:56 AM"}
{"level":"error","message":"Dhananjay Health Renewal docLog  { Service_Log_Id: '',\n  Service_Log_Unique_Id: 'ARN-6BYI766R-GEZZ-7K83-P1G7-X43KH53UBJ5M',\n  Request_Id: 699288,\n  User_Data_Id: 431553,\n  Request_Unique_Id: 'SRN-SFIDKSNB-MLLW-0FSC-A2G5-40CHFT5QAEMN',\n  PB_CRN: 1158085,\n  Client_Id: 2,\n  LM_Custom_Request: \n   { Plan_Code: '1',\n     Plan_Id: 501,\n     Plan_Name: 'Silver',\n     aadhar: '',\n     appointee_age: 0,\n     appointee_birth_date: '2024-08-06',\n     appointee_first_name: '',\n     appointee_last_name: '',\n     appointee_middle_name: '',\n     appointee_name: '',\n     appointee_relation: '',\n     birth_date: '1992-01-01',\n     city_id: 677,\n     communication_address_1: '',\n     communication_address_2: '',\n     communication_address_3: '',\n     communication_city: '',\n     communication_city_code: '',\n     communication_district_code: '',\n     communication_locality_code: '',\n     communication_pincode: '',\n     communication_state: '',\n     communication_state_code: '',\n     company_name: '',\n     current_date: '2024-08-06',\n     current_time: '09:08:92',\n     dbmaster_pb_city_id: 677,\n     dbmaster_pb_city_name: 'MUMBAI',\n     dbmaster_pb_pincode: 400001,\n     dbmaster_pb_state_id: 21,\n     dbmaster_pb_state_name: 'MAHARASHTRA',\n     email: 'policybosstesting@gmail.com',\n     final_premium: '',\n     first_name: 'NO',\n     gender: '',\n     gst_no: '',\n     gst_state: '',\n     insured_age: 32,\n     insurer_id: '',\n     insurer_integration_agent_code: 'TRC16741',\n     insurer_integration_pdf_url: '',\n     insurer_integration_service_password: 'rH33FlSFavPvYHc+Bu5Fqg==',\n     insurer_integration_service_user: 'LANDMARK',\n     insurer_vehicle_id: undefined,\n     is_posp: '',\n     is_reg_addr_comm_addr_same: '',\n     kyc_no: '',\n     kyc_ref_no: '',\n     last_name: 'NAME',\n     marital: '',\n     member_1_birth_date: '2001-08-06',\n     member_1_first_name: 'NO',\n     member_1_gender: 'M',\n     member_1_last_name: 'NAME',\n     member_1_middle_name: '',\n     member_1_occupation: '',\n     member_1_passport: '',\n     member_1_ped: '',\n     member_1_relation: '',\n     member_1_salutation: '',\n     member_array_birth_date: '2024-08-06',\n     member_array_first_name: '',\n     member_array_gender: '',\n     member_array_last_name: '',\n     member_array_middle_name: '',\n     member_array_occupation: '',\n     member_array_passport: '',\n     member_array_ped: '',\n     member_array_relation: '',\n     member_array_salutation: '',\n     method_type: 'Premium',\n     middle_name: '',\n     mobile: '9999999999',\n     net_premium: '',\n     nominee_address: '',\n     nominee_age: 0,\n     nominee_birth_date: '2024-08-06',\n     nominee_city_name: '',\n     nominee_first_name: '',\n     nominee_last_name: '',\n     nominee_middle_name: '',\n     nominee_name: '',\n     nominee_pincode: '',\n     nominee_relation: '',\n     occupation: '',\n     pan: '',\n     permanent_address_1: '',\n     permanent_address_2: '',\n     permanent_address_3: '',\n     permanent_city: '',\n     permanent_city_code: '',\n     permanent_district_code: '',\n     permanent_locality_code: '',\n     permanent_pincode: '',\n     permanent_state: '',\n     permanent_state_code: '',\n     pg_reference_number_1: '',\n     pg_reference_number_2: '',\n     policy_end_date: '2024-08-10',\n     policy_number: '',\n     policy_start_date: '2024-08-07',\n     policy_tenure: '',\n     product_id: 4,\n     proposal_create_flag: '',\n     recon_reference_number: '',\n     salutation: '',\n     salutation_1: '',\n     tax: '',\n     travel_insurance_si: '0',\n     travel_insurance_type: 'individual',\n     visiting_countries: '',\n     member_1_inc: 1,\n     member_1_age: 23,\n     travel_days: 4,\n     custom_txnID: 'SILVER1722916316',\n     family_plan_type: '' },\n  Insurer_Request: '\\n{\\n  \"ApplicationNumber\": null,\\n  \"TransactionID\": \"SILVER1722916316\",\\n  \"GoGreen\": false,\\n  \"Request_IP\": \"216.48.179.246\",\\n  \"Customer_Details\": null,\\n  \"Policy_Details\": {\\n    \"PolicyStartDate\": \"07/08/2024\",\\n    \"ProposalDate\": \"06/08/2024\"\\n  },\\n  \"Req_RetailTravel\": {\\n    \"PropRisks_PolicyType\": \"Single Trip\",\\n    \"PropRisks_PlanType\": \"Silver\",\\n    \"PropRisks_GeographicCoverage_Mandatary\": \"Inc USA / Canada  (Worldwide)\",\\n    \"PropRisks_PlacesofVisit\": \"Inc USA / Canada  (Worldwide)\",\\n    \"PropRisks_CountriesofVisit_Mandatary\": \"Inc USA / Canada  (Worldwide)\",\\n    \"PropRisks_FamilyPlan\": \"\",\\n    \"Insured_Details\": \\n    [{\"PropRisks_NameoftheInsured_Mandatary\":\"NO NAME\",\"PropRisks_DateOfBirth\":\"06/08/2001\",\"PropRisks_PassportNo_Mandatary\":\"D1234561\",\"PropRisks_Gender_Mandatary\":\"MALE\",\"PropRisks_Relationship_Mandatary\":\"Brother\",\"PropRisks_NomineeName_Mandatary\":\"FGHFH\",\"PropRisks_NomineeRelationship_Mandatary\":\"Brother\"}]\\n  }\\n}\\n\\n',\n  Insurer_Response: '',\n  Insurer_Response_Core: '',\n  Premium_Breakup: null,\n  LM_Response: '',\n  Insurer_Transaction_Identifier: '',\n  Health_Renewal_Proposal_Request_Core: null,\n  Status: 'pending',\n  Error_Code: '',\n  Is_Active: 1,\n  Created_On: 2024-08-06T03:51:56.851Z,\n  Product_Id: 4,\n  Insurer_Id: 5,\n  Plan_Id: 501,\n  Plan_Name: 'Silver',\n  Plan_Code: '1',\n  Allow_Renew: undefined,\n  Addon_Mode: 'ALACARTE',\n  Method_Type: 'Premium',\n  Call_Execution_Time: 0 }","timestamp":"9:21:56 AM"}
{"level":"error","message":"Dhananjay Health Renewal Before save_log  true","timestamp":"9:21:56 AM"}
{"level":"error","message":"Plan_execute_loop 1158085 5 ARN-6BYI766R-GEZZ-7K83-P1G7-X43KH53UBJ5M 501 Silver 501 Silver","timestamp":"9:21:56 AM"}
{"level":"error","message":"Dhananjay Health Renewal After save_log  true","timestamp":"9:21:56 AM"}
{"level":"warn","message":"Deprecation warning: value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.\nArguments: \n[0] _isAMomentObject: true, _isUTC: false, _useUTC: false, _l: undefined, _i: 01/01/1992, _f: undefined, _strict: undefined, _locale: [object Object]\nError\n    at Function.createFromInputFallback (D:\\Suyash Files\\SourceCode\\node_modules\\moment\\moment.js:320:94)\n    at configFromString (D:\\Suyash Files\\SourceCode\\node_modules\\moment\\moment.js:2178:11)\n    at configFromInput (D:\\Suyash Files\\SourceCode\\node_modules\\moment\\moment.js:2547:9)\n    at prepareConfig (D:\\Suyash Files\\SourceCode\\node_modules\\moment\\moment.js:2530:9)\n    at createFromConfig (D:\\Suyash Files\\SourceCode\\node_modules\\moment\\moment.js:2497:40)\n    at createLocalOrUTC (D:\\Suyash Files\\SourceCode\\node_modules\\moment\\moment.js:2584:12)\n    at createLocal (D:\\Suyash Files\\SourceCode\\node_modules\\moment\\moment.js:2588:12)\n    at hooks (D:\\Suyash Files\\SourceCode\\node_modules\\moment\\moment.js:16:25)\n    at HDFCErgoTravel.insurer_product_field_process_pre (D:\\Suyash Files\\SourceCode\\libs\\Travel\\HDFCErgoTravel.js:40:54)\n    at HDFCErgoTravel.Base.plan_process_all (D:\\Suyash Files\\SourceCode\\libs\\Base.js:4722:31)\n    at HDFCErgoTravel.Base.process_execute_plan (D:\\Suyash Files\\SourceCode\\libs\\Base.js:3537:27)\n    at HDFCErgoTravel.Base.master_motor_db_get_handler (D:\\Suyash Files\\SourceCode\\libs\\Base.js:3437:35)\n    at D:\\Suyash Files\\SourceCode\\libs\\Base.js:2762:43\n    at Query.<anonymous> (D:\\Suyash Files\\SourceCode\\node_modules\\mongoose\\lib\\model.js:3919:16)\n    at D:\\Suyash Files\\SourceCode\\node_modules\\mongoose\\node_modules\\kareem\\index.js:273:21\n    at D:\\Suyash Files\\SourceCode\\node_modules\\mongoose\\node_modules\\kareem\\index.js:131:16\n    at _combinedTickCallback (internal/process/next_tick.js:67:7)\n    at process._tickCallback (internal/process/next_tick.js:98:9)","timestamp":"9:21:56 AM"}
{"level":"error","message":"Dhananjay Health Renewal docLog  { Service_Log_Id: '',\n  Service_Log_Unique_Id: 'ARN-ZLCW6FGZ-ALUB-SZ9A-CJ7W-WIGFNLBYMZFS',\n  Request_Id: 699288,\n  User_Data_Id: 431553,\n  Request_Unique_Id: 'SRN-SFIDKSNB-MLLW-0FSC-A2G5-40CHFT5QAEMN',\n  PB_CRN: 1158085,\n  Client_Id: 2,\n  LM_Custom_Request: \n   { Plan_Code: '3',\n     Plan_Id: 503,\n     Plan_Name: 'Gold',\n     aadhar: '',\n     appointee_age: 0,\n     appointee_birth_date: '2024-08-06',\n     appointee_first_name: '',\n     appointee_last_name: '',\n     appointee_middle_name: '',\n     appointee_name: '',\n     appointee_relation: '',\n     birth_date: '1992-01-01',\n     city_id: 677,\n     communication_address_1: '',\n     communication_address_2: '',\n     communication_address_3: '',\n     communication_city: '',\n     communication_city_code: '',\n     communication_district_code: '',\n     communication_locality_code: '',\n     communication_pincode: '',\n     communication_state: '',\n     communication_state_code: '',\n     company_name: '',\n     current_date: '2024-08-06',\n     current_time: '09:08:92',\n     custom_txnID: 'GOLD1722916316',\n     dbmaster_pb_city_id: 677,\n     dbmaster_pb_city_name: 'MUMBAI',\n     dbmaster_pb_pincode: 400001,\n     dbmaster_pb_state_id: 21,\n     dbmaster_pb_state_name: 'MAHARASHTRA',\n     email: 'policybosstesting@gmail.com',\n     family_plan_type: '',\n     final_premium: '',\n     first_name: 'NO',\n     gender: '',\n     gst_no: '',\n     gst_state: '',\n     insured_age: 32,\n     insurer_id: '',\n     insurer_integration_agent_code: 'TRC16741',\n     insurer_integration_pdf_url: '',\n     insurer_integration_service_password: 'rH33FlSFavPvYHc+Bu5Fqg==',\n     insurer_integration_service_user: 'LANDMARK',\n     insurer_vehicle_id: undefined,\n     is_posp: '',\n     is_reg_addr_comm_addr_same: '',\n     kyc_no: '',\n     kyc_ref_no: '',\n     last_name: 'NAME',\n     marital: '',\n     member_1_age: 23,\n     member_1_birth_date: '2001-08-06',\n     member_1_first_name: 'NO',\n     member_1_gender: 'M',\n     member_1_inc: 1,\n     member_1_last_name: 'NAME',\n     member_1_middle_name: '',\n     member_1_occupation: '',\n     member_1_passport: '',\n     member_1_ped: '',\n     member_1_relation: '',\n     member_1_salutation: '',\n     member_array_birth_date: '2024-08-06',\n     member_array_first_name: '',\n     member_array_gender: '',\n     member_array_last_name: '',\n     member_array_middle_name: '',\n     member_array_occupation: '',\n     member_array_passport: '',\n     member_array_ped: '',\n     member_array_relation: '',\n     member_array_salutation: '',\n     method_type: 'Premium',\n     middle_name: '',\n     mobile: '9999999999',\n     net_premium: '',\n     nominee_address: '',\n     nominee_age: 0,\n     nominee_birth_date: '2024-08-06',\n     nominee_city_name: '',\n     nominee_first_name: '',\n     nominee_last_name: '',\n     nominee_middle_name: '',\n     nominee_name: '',\n     nominee_pincode: '',\n     nominee_relation: '',\n     occupation: '',\n     pan: '',\n     permanent_address_1: '',\n     permanent_address_2: '',\n     permanent_address_3: '',\n     permanent_city: '',\n     permanent_city_code: '',\n     permanent_district_code: '',\n     permanent_locality_code: '',\n     permanent_pincode: '',\n     permanent_state: '',\n     permanent_state_code: '',\n     pg_reference_number_1: '',\n     pg_reference_number_2: '',\n     policy_end_date: '2024-08-10',\n     policy_number: '',\n     policy_start_date: '2024-08-07',\n     policy_tenure: '',\n     product_id: 4,\n     proposal_create_flag: '',\n     recon_reference_number: '',\n     salutation: '',\n     salutation_1: '',\n     tax: '',\n     travel_days: 4,\n     travel_insurance_si: '0',\n     travel_insurance_type: 'individual',\n     visiting_countries: '' },\n  Insurer_Request: '\\n{\\n  \"ApplicationNumber\": null,\\n  \"TransactionID\": \"GOLD1722916316\",\\n  \"GoGreen\": false,\\n  \"Request_IP\": \"216.48.179.246\",\\n  \"Customer_Details\": null,\\n  \"Policy_Details\": {\\n    \"PolicyStartDate\": \"07/08/2024\",\\n    \"ProposalDate\": \"06/08/2024\"\\n  },\\n  \"Req_RetailTravel\": {\\n    \"PropRisks_PolicyType\": \"Single Trip\",\\n    \"PropRisks_PlanType\": \"Gold\",\\n    \"PropRisks_GeographicCoverage_Mandatary\": \"Inc USA / Canada  (Worldwide)\",\\n    \"PropRisks_PlacesofVisit\": \"Inc USA / Canada  (Worldwide)\",\\n    \"PropRisks_CountriesofVisit_Mandatary\": \"Inc USA / Canada  (Worldwide)\",\\n    \"PropRisks_FamilyPlan\": \"\",\\n    \"Insured_Details\": \\n    [{\"PropRisks_NameoftheInsured_Mandatary\":\"NO NAME\",\"PropRisks_DateOfBirth\":\"06/08/2001\",\"PropRisks_PassportNo_Mandatary\":\"D1234561\",\"PropRisks_Gender_Mandatary\":\"MALE\",\"PropRisks_Relationship_Mandatary\":\"Brother\",\"PropRisks_NomineeName_Mandatary\":\"FGHFH\",\"PropRisks_NomineeRelationship_Mandatary\":\"Brother\"}]\\n  }\\n}\\n\\n',\n  Insurer_Response: '',\n  Insurer_Response_Core: '',\n  Premium_Breakup: null,\n  LM_Response: '',\n  Insurer_Transaction_Identifier: '',\n  Health_Renewal_Proposal_Request_Core: null,\n  Status: 'pending',\n  Error_Code: '',\n  Is_Active: 1,\n  Created_On: 2024-08-06T03:51:56.913Z,\n  Product_Id: 4,\n  Insurer_Id: 5,\n  Plan_Id: 503,\n  Plan_Name: 'Gold',\n  Plan_Code: '3',\n  Allow_Renew: undefined,\n  Addon_Mode: 'ALACARTE',\n  Method_Type: 'Premium',\n  Call_Execution_Time: 0 }","timestamp":"9:21:56 AM"}
{"level":"error","message":"Dhananjay Health Renewal Before save_log  true","timestamp":"9:21:56 AM"}
{"level":"error","message":"Plan_execute_loop 1158085 5 ARN-ZLCW6FGZ-ALUB-SZ9A-CJ7W-WIGFNLBYMZFS 503 Gold 503 Gold","timestamp":"9:21:56 AM"}
{"level":"error","message":"Dhananjay Health Renewal After save_log  true","timestamp":"9:21:56 AM"}
{"level":"error","message":"Dhananjay Health Renewal docLog  { Service_Log_Id: '',\n  Service_Log_Unique_Id: 'ARN-WL6FLPHR-LJMI-QRJI-JQHJ-ZKIE2BNNZXZK',\n  Request_Id: 699288,\n  User_Data_Id: 431553,\n  Request_Unique_Id: 'SRN-SFIDKSNB-MLLW-0FSC-A2G5-40CHFT5QAEMN',\n  PB_CRN: 1158085,\n  Client_Id: 2,\n  LM_Custom_Request: \n   { Plan_Code: '4',\n     Plan_Id: 504,\n     Plan_Name: 'Platinum',\n     aadhar: '',\n     appointee_age: 0,\n     appointee_birth_date: '2024-08-06',\n     appointee_first_name: '',\n     appointee_last_name: '',\n     appointee_middle_name: '',\n     appointee_name: '',\n     appointee_relation: '',\n     birth_date: '1992-01-01',\n     city_id: 677,\n     communication_address_1: '',\n     communication_address_2: '',\n     communication_address_3: '',\n     communication_city: '',\n     communication_city_code: '',\n     communication_district_code: '',\n     communication_locality_code: '',\n     communication_pincode: '',\n     communication_state: '',\n     communication_state_code: '',\n     company_name: '',\n     current_date: '2024-08-06',\n     current_time: '09:08:92',\n     custom_txnID: 'PLATINUM1722916316',\n     dbmaster_pb_city_id: 677,\n     dbmaster_pb_city_name: 'MUMBAI',\n     dbmaster_pb_pincode: 400001,\n     dbmaster_pb_state_id: 21,\n     dbmaster_pb_state_name: 'MAHARASHTRA',\n     email: 'policybosstesting@gmail.com',\n     family_plan_type: '',\n     final_premium: '',\n     first_name: 'NO',\n     gender: '',\n     gst_no: '',\n     gst_state: '',\n     insured_age: 32,\n     insurer_id: '',\n     insurer_integration_agent_code: 'TRC16741',\n     insurer_integration_pdf_url: '',\n     insurer_integration_service_password: 'rH33FlSFavPvYHc+Bu5Fqg==',\n     insurer_integration_service_user: 'LANDMARK',\n     insurer_vehicle_id: undefined,\n     is_posp: '',\n     is_reg_addr_comm_addr_same: '',\n     kyc_no: '',\n     kyc_ref_no: '',\n     last_name: 'NAME',\n     marital: '',\n     member_1_age: 23,\n     member_1_birth_date: '2001-08-06',\n     member_1_first_name: 'NO',\n     member_1_gender: 'M',\n     member_1_inc: 1,\n     member_1_last_name: 'NAME',\n     member_1_middle_name: '',\n     member_1_occupation: '',\n     member_1_passport: '',\n     member_1_ped: '',\n     member_1_relation: '',\n     member_1_salutation: '',\n     member_array_birth_date: '2024-08-06',\n     member_array_first_name: '',\n     member_array_gender: '',\n     member_array_last_name: '',\n     member_array_middle_name: '',\n     member_array_occupation: '',\n     member_array_passport: '',\n     member_array_ped: '',\n     member_array_relation: '',\n     member_array_salutation: '',\n     method_type: 'Premium',\n     middle_name: '',\n     mobile: '9999999999',\n     net_premium: '',\n     nominee_address: '',\n     nominee_age: 0,\n     nominee_birth_date: '2024-08-06',\n     nominee_city_name: '',\n     nominee_first_name: '',\n     nominee_last_name: '',\n     nominee_middle_name: '',\n     nominee_name: '',\n     nominee_pincode: '',\n     nominee_relation: '',\n     occupation: '',\n     pan: '',\n     permanent_address_1: '',\n     permanent_address_2: '',\n     permanent_address_3: '',\n     permanent_city: '',\n     permanent_city_code: '',\n     permanent_district_code: '',\n     permanent_locality_code: '',\n     permanent_pincode: '',\n     permanent_state: '',\n     permanent_state_code: '',\n     pg_reference_number_1: '',\n     pg_reference_number_2: '',\n     policy_end_date: '2024-08-10',\n     policy_number: '',\n     policy_start_date: '2024-08-07',\n     policy_tenure: '',\n     product_id: 4,\n     proposal_create_flag: '',\n     recon_reference_number: '',\n     salutation: '',\n     salutation_1: '',\n     tax: '',\n     travel_days: 4,\n     travel_insurance_si: '0',\n     travel_insurance_type: 'individual',\n     visiting_countries: '' },\n  Insurer_Request: '\\n{\\n  \"ApplicationNumber\": null,\\n  \"TransactionID\": \"PLATINUM1722916316\",\\n  \"GoGreen\": false,\\n  \"Request_IP\": \"216.48.179.246\",\\n  \"Customer_Details\": null,\\n  \"Policy_Details\": {\\n    \"PolicyStartDate\": \"07/08/2024\",\\n    \"ProposalDate\": \"06/08/2024\"\\n  },\\n  \"Req_RetailTravel\": {\\n    \"PropRisks_PolicyType\": \"Single Trip\",\\n    \"PropRisks_PlanType\": \"Platinum\",\\n    \"PropRisks_GeographicCoverage_Mandatary\": \"Inc USA / Canada  (Worldwide)\",\\n    \"PropRisks_PlacesofVisit\": \"Inc USA / Canada  (Worldwide)\",\\n    \"PropRisks_CountriesofVisit_Mandatary\": \"Inc USA / Canada  (Worldwide)\",\\n    \"PropRisks_FamilyPlan\": \"\",\\n    \"Insured_Details\": \\n    [{\"PropRisks_NameoftheInsured_Mandatary\":\"NO NAME\",\"PropRisks_DateOfBirth\":\"06/08/2001\",\"PropRisks_PassportNo_Mandatary\":\"D1234561\",\"PropRisks_Gender_Mandatary\":\"MALE\",\"PropRisks_Relationship_Mandatary\":\"Brother\",\"PropRisks_NomineeName_Mandatary\":\"FGHFH\",\"PropRisks_NomineeRelationship_Mandatary\":\"Brother\"}]\\n  }\\n}\\n\\n',\n  Insurer_Response: '',\n  Insurer_Response_Core: '',\n  Premium_Breakup: null,\n  LM_Response: '',\n  Insurer_Transaction_Identifier: '',\n  Health_Renewal_Proposal_Request_Core: null,\n  Status: 'pending',\n  Error_Code: '',\n  Is_Active: 1,\n  Created_On: 2024-08-06T03:51:56.977Z,\n  Product_Id: 4,\n  Insurer_Id: 5,\n  Plan_Id: 504,\n  Plan_Name: 'Platinum',\n  Plan_Code: '4',\n  Allow_Renew: undefined,\n  Addon_Mode: 'ALACARTE',\n  Method_Type: 'Premium',\n  Call_Execution_Time: 0 }","timestamp":"9:21:57 AM"}
{"level":"error","message":"Dhananjay Health Renewal Before save_log  true","timestamp":"9:21:57 AM"}
{"level":"error","message":"Plan_execute_loop 1158085 5 ARN-WL6FLPHR-LJMI-QRJI-JQHJ-ZKIE2BNNZXZK 504 Platinum 504 Platinum","timestamp":"9:21:57 AM"}
{"level":"error","message":"Dhananjay Health Renewal After save_log  true","timestamp":"9:21:57 AM"}
{"level":"error","message":"Dhananjay Health Renewal docLog  { Service_Log_Id: '',\n  Service_Log_Unique_Id: 'ARN-KBVJENI3-15ZC-NM5Q-K6CN-JC3YYOYZO7KX',\n  Request_Id: 699288,\n  User_Data_Id: 431553,\n  Request_Unique_Id: 'SRN-SFIDKSNB-MLLW-0FSC-A2G5-40CHFT5QAEMN',\n  PB_CRN: 1158085,\n  Client_Id: 2,\n  LM_Custom_Request: \n   { Plan_Code: '5',\n     Plan_Id: 505,\n     Plan_Name: 'Titanium',\n     aadhar: '',\n     appointee_age: 0,\n     appointee_birth_date: '2024-08-06',\n     appointee_first_name: '',\n     appointee_last_name: '',\n     appointee_middle_name: '',\n     appointee_name: '',\n     appointee_relation: '',\n     birth_date: '1992-01-01',\n     city_id: 677,\n     communication_address_1: '',\n     communication_address_2: '',\n     communication_address_3: '',\n     communication_city: '',\n     communication_city_code: '',\n     communication_district_code: '',\n     communication_locality_code: '',\n     communication_pincode: '',\n     communication_state: '',\n     communication_state_code: '',\n     company_name: '',\n     current_date: '2024-08-06',\n     current_time: '09:08:92',\n     custom_txnID: 'TITANIUM1722916317',\n     dbmaster_pb_city_id: 677,\n     dbmaster_pb_city_name: 'MUMBAI',\n     dbmaster_pb_pincode: 400001,\n     dbmaster_pb_state_id: 21,\n     dbmaster_pb_state_name: 'MAHARASHTRA',\n     email: 'policybosstesting@gmail.com',\n     family_plan_type: '',\n     final_premium: '',\n     first_name: 'NO',\n     gender: '',\n     gst_no: '',\n     gst_state: '',\n     insured_age: 32,\n     insurer_id: '',\n     insurer_integration_agent_code: 'TRC16741',\n     insurer_integration_pdf_url: '',\n     insurer_integration_service_password: 'rH33FlSFavPvYHc+Bu5Fqg==',\n     insurer_integration_service_user: 'LANDMARK',\n     insurer_vehicle_id: undefined,\n     is_posp: '',\n     is_reg_addr_comm_addr_same: '',\n     kyc_no: '',\n     kyc_ref_no: '',\n     last_name: 'NAME',\n     marital: '',\n     member_1_age: 23,\n     member_1_birth_date: '2001-08-06',\n     member_1_first_name: 'NO',\n     member_1_gender: 'M',\n     member_1_inc: 1,\n     member_1_last_name: 'NAME',\n     member_1_middle_name: '',\n     member_1_occupation: '',\n     member_1_passport: '',\n     member_1_ped: '',\n     member_1_relation: '',\n     member_1_salutation: '',\n     member_array_birth_date: '2024-08-06',\n     member_array_first_name: '',\n     member_array_gender: '',\n     member_array_last_name: '',\n     member_array_middle_name: '',\n     member_array_occupation: '',\n     member_array_passport: '',\n     member_array_ped: '',\n     member_array_relation: '',\n     member_array_salutation: '',\n     method_type: 'Premium',\n     middle_name: '',\n     mobile: '9999999999',\n     net_premium: '',\n     nominee_address: '',\n     nominee_age: 0,\n     nominee_birth_date: '2024-08-06',\n     nominee_city_name: '',\n     nominee_first_name: '',\n     nominee_last_name: '',\n     nominee_middle_name: '',\n     nominee_name: '',\n     nominee_pincode: '',\n     nominee_relation: '',\n     occupation: '',\n     pan: '',\n     permanent_address_1: '',\n     permanent_address_2: '',\n     permanent_address_3: '',\n     permanent_city: '',\n     permanent_city_code: '',\n     permanent_district_code: '',\n     permanent_locality_code: '',\n     permanent_pincode: '',\n     permanent_state: '',\n     permanent_state_code: '',\n     pg_reference_number_1: '',\n     pg_reference_number_2: '',\n     policy_end_date: '2024-08-10',\n     policy_number: '',\n     policy_start_date: '2024-08-07',\n     policy_tenure: '',\n     product_id: 4,\n     proposal_create_flag: '',\n     recon_reference_number: '',\n     salutation: '',\n     salutation_1: '',\n     tax: '',\n     travel_days: 4,\n     travel_insurance_si: '0',\n     travel_insurance_type: 'individual',\n     visiting_countries: '' },\n  Insurer_Request: '\\n{\\n  \"ApplicationNumber\": null,\\n  \"TransactionID\": \"TITANIUM1722916317\",\\n  \"GoGreen\": false,\\n  \"Request_IP\": \"216.48.179.246\",\\n  \"Customer_Details\": null,\\n  \"Policy_Details\": {\\n    \"PolicyStartDate\": \"07/08/2024\",\\n    \"ProposalDate\": \"06/08/2024\"\\n  },\\n  \"Req_RetailTravel\": {\\n    \"PropRisks_PolicyType\": \"Single Trip\",\\n    \"PropRisks_PlanType\": \"Titanium\",\\n    \"PropRisks_GeographicCoverage_Mandatary\": \"Inc USA / Canada  (Worldwide)\",\\n    \"PropRisks_PlacesofVisit\": \"Inc USA / Canada  (Worldwide)\",\\n    \"PropRisks_CountriesofVisit_Mandatary\": \"Inc USA / Canada  (Worldwide)\",\\n    \"PropRisks_FamilyPlan\": \"\",\\n    \"Insured_Details\": \\n    [{\"PropRisks_NameoftheInsured_Mandatary\":\"NO NAME\",\"PropRisks_DateOfBirth\":\"06/08/2001\",\"PropRisks_PassportNo_Mandatary\":\"D1234561\",\"PropRisks_Gender_Mandatary\":\"MALE\",\"PropRisks_Relationship_Mandatary\":\"Brother\",\"PropRisks_NomineeName_Mandatary\":\"FGHFH\",\"PropRisks_NomineeRelationship_Mandatary\":\"Brother\"}]\\n  }\\n}\\n\\n',\n  Insurer_Response: '',\n  Insurer_Response_Core: '',\n  Premium_Breakup: null,\n  LM_Response: '',\n  Insurer_Transaction_Identifier: '',\n  Health_Renewal_Proposal_Request_Core: null,\n  Status: 'pending',\n  Error_Code: '',\n  Is_Active: 1,\n  Created_On: 2024-08-06T03:51:57.040Z,\n  Product_Id: 4,\n  Insurer_Id: 5,\n  Plan_Id: 505,\n  Plan_Name: 'Titanium',\n  Plan_Code: '5',\n  Allow_Renew: undefined,\n  Addon_Mode: 'ALACARTE',\n  Method_Type: 'Premium',\n  Call_Execution_Time: 0 }","timestamp":"9:21:57 AM"}
{"level":"error","message":"Dhananjay Health Renewal Before save_log  true","timestamp":"9:21:57 AM"}
{"level":"error","message":"Plan_execute_loop 1158085 5 ARN-KBVJENI3-15ZC-NM5Q-K6CN-JC3YYOYZO7KX 505 Titanium 505 Titanium","timestamp":"9:21:57 AM"}
{"level":"error","message":"Dhananjay Health Renewal After save_log  true","timestamp":"9:21:57 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:21:57 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:21:57 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:21:57 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:21:57 AM"}
{"level":"error","message":"Niva Health Renew LINE5","timestamp":"9:21:57 AM"}
{"level":"error","message":"Health Renewal Jyoti  undefined","timestamp":"9:21:57 AM"}
{"level":"error","message":"Health Renewal Jyoti plan_list [ { Plan_Id: 1101,\n    Plan_Name: 'Travel Guard Policy Gold',\n    Plan_Code: 'G',\n    Is_Active: true },\n  { Plan_Id: 1102,\n    Plan_Name: 'Travel Guard Policy Platinum',\n    Plan_Code: 'P',\n    Is_Active: true },\n  { Plan_Id: 1103,\n    Plan_Name: 'Travel Guard Policy Silver',\n    Plan_Code: 'S',\n    Is_Active: true },\n  { Plan_Id: 1105,\n    Plan_Name: 'Travel Guard Policy Silver Plus',\n    Plan_Code: 'SP',\n    Is_Active: true } ]","timestamp":"9:21:57 AM"}
{"level":"error","message":"Dhananjay Health Renewal docLog  { Service_Log_Id: '',\n  Service_Log_Unique_Id: 'ARN-1TFYUP8Z-EBUI-WREC-YB0B-RGKBV5LQPWTW',\n  Request_Id: 699288,\n  User_Data_Id: 431553,\n  Request_Unique_Id: 'SRN-SFIDKSNB-MLLW-0FSC-A2G5-40CHFT5QAEMN',\n  PB_CRN: 1158085,\n  Client_Id: 2,\n  LM_Custom_Request: \n   { Plan_Code: 'G',\n     Plan_Id: 1101,\n     Plan_Name: 'Travel Guard Policy Gold',\n     aadhar: '',\n     appointee_age: 0,\n     appointee_birth_date: '2024-08-06',\n     appointee_first_name: '',\n     appointee_last_name: '',\n     appointee_middle_name: '',\n     appointee_name: '',\n     appointee_relation: '',\n     birth_date: '1992-01-01',\n     city_id: 677,\n     communication_address_1: '',\n     communication_address_2: '',\n     communication_address_3: '',\n     communication_city: '',\n     communication_city_code: '',\n     communication_district_code: '',\n     communication_locality_code: '',\n     communication_pincode: '',\n     communication_state: '',\n     communication_state_code: '',\n     company_name: '',\n     current_date: '2024-08-06',\n     current_time: '09:08:92',\n     dbmaster_pb_city_id: 677,\n     dbmaster_pb_city_name: 'MUMBAI',\n     dbmaster_pb_pincode: 400001,\n     dbmaster_pb_state_id: 21,\n     dbmaster_pb_state_name: 'MAHARASHTRA',\n     email: 'policybosstesting@gmail.com',\n     final_premium: '',\n     first_name: 'NO',\n     gender: '',\n     gst_no: '',\n     gst_state: '',\n     insured_age: 32,\n     insurer_id: '',\n     insurer_integration_agent_code: '',\n     insurer_integration_location_code: '',\n     insurer_integration_pdf_url: '',\n     insurer_integration_service_password: '',\n     insurer_integration_service_user: '',\n     insurer_vehicle_id: undefined,\n     is_posp: '',\n     is_reg_addr_comm_addr_same: '',\n     kyc_no: '',\n     kyc_ref_no: '',\n     last_name: 'NAME',\n     marital: '',\n     member_1_birth_date: '2001-08-06',\n     member_1_first_name: 'NO',\n     member_1_gender: 'M',\n     member_1_last_name: 'NAME',\n     member_1_middle_name: '',\n     member_1_occupation: '',\n     member_1_passport: '',\n     member_1_ped: '',\n     member_1_relation: '',\n     member_1_salutation: '',\n     member_array_birth_date: '2024-08-06',\n     member_array_first_name: '',\n     member_array_gender: '',\n     member_array_last_name: '',\n     member_array_middle_name: '',\n     member_array_occupation: '',\n     member_array_passport: '',\n     member_array_ped: '',\n     member_array_relation: '',\n     member_array_salutation: '',\n     method_type: 'Premium',\n     middle_name: '',\n     mobile: '9999999999',\n     net_premium: '',\n     nominee_address: '',\n     nominee_age: 0,\n     nominee_birth_date: '2024-08-06',\n     nominee_city_name: '',\n     nominee_first_name: '',\n     nominee_last_name: '',\n     nominee_middle_name: '',\n     nominee_name: '',\n     nominee_pincode: '',\n     nominee_relation: '',\n     occupation: '',\n     pan: '',\n     permanent_address_1: '',\n     permanent_address_2: '',\n     permanent_address_3: '',\n     permanent_city: '',\n     permanent_city_code: '',\n     permanent_district_code: '',\n     permanent_locality_code: '',\n     permanent_pincode: '',\n     permanent_state: '',\n     permanent_state_code: '',\n     pg_reference_number_1: '',\n     pg_reference_number_2: '',\n     policy_end_date: '2024-08-10',\n     policy_number: '',\n     policy_start_date: '2024-08-07',\n     policy_tenure: '',\n     product_id: 4,\n     proposal_create_flag: '',\n     recon_reference_number: '',\n     salutation: '',\n     salutation_1: '',\n     tax: '',\n     travel_insurance_si: '0',\n     travel_insurance_type: 'individual',\n     visiting_countries: '',\n     member_1_inc: 1,\n     member_1_age: 23,\n     travel_days: 4,\n     ___member_count___: 1,\n     ___policy_end_date___: '08/10/2024',\n     ___trip_type___: 'Single Trip',\n     ___application_date___: '08/06/2024',\n     ___selected_zone___: 'Worldwide Including USA/Canada',\n     ___selected_product___: 'Travel Guard',\n     ___plan_code_txt___: 'Gold' },\n  Insurer_Request: '{\\r\\n    \"selected_plan\": \"Gold\",\\r\\n    \"selected_product\": \"Travel Guard\",\\r\\n    \"application_date\": \"08/06/2024\",\\r\\n    \"policy_type\": \"Without Sublimit\",\\r\\n    \"departure_date\": \"08/07/2024\",\\r\\n    \"return_date_single\": \"08/10/2024\",\\r\\n    \"member_count\": \"1\",\\r\\n        \\r\\n    \"dob_1\": \"08/06/2001\",\\r\\n    \"triptype\": \"Single Trip\",\\r\\n    \"selected_zone\": \"Worldwide Including USA/Canada\",\\r\\n    \"product_id\": \"M100000000003\",\\r\\n    \"customer_pincode\": \"400086\",\\r\\n    \"tripdays\": \"\",\\r\\n    \"email\": \"policybosstesting@gmail.com\",\\r\\n    \"mobile_no\": \"9999999999\",\\r\\n    \"office_location\": \"DELHI\",\\r\\n    \"visa_type\": \"Non Immigrant\",\\r\\n    \"is_tata_employee\": \"\",\\r\\n    \"employee_id\": \"\",\\r\\n    \"tata_emp_email\": \"\"\\r\\n}',\n  Insurer_Response: '',\n  Insurer_Response_Core: '',\n  Premium_Breakup: null,\n  LM_Response: '',\n  Insurer_Transaction_Identifier: '',\n  Health_Renewal_Proposal_Request_Core: null,\n  Status: 'pending',\n  Error_Code: '',\n  Is_Active: 1,\n  Created_On: 2024-08-06T03:51:57.174Z,\n  Product_Id: 4,\n  Insurer_Id: 11,\n  Plan_Id: 1101,\n  Plan_Name: 'Travel Guard Policy Gold',\n  Plan_Code: 'G',\n  Allow_Renew: undefined,\n  Addon_Mode: 'ALACARTE',\n  Method_Type: 'Premium',\n  Call_Execution_Time: 0 }","timestamp":"9:21:57 AM"}
{"level":"error","message":"Dhananjay Health Renewal Before save_log  true","timestamp":"9:21:57 AM"}
{"level":"error","message":"Plan_execute_loop 1158085 11 ARN-1TFYUP8Z-EBUI-WREC-YB0B-RGKBV5LQPWTW 1101 Travel Guard Policy Gold 1101 Travel Guard Policy Gold","timestamp":"9:21:57 AM"}
{"level":"error","message":"Dhananjay Health Renewal After save_log  true","timestamp":"9:21:57 AM"}
{"level":"error","message":"Dhananjay Health Renewal docLog  { Service_Log_Id: '',\n  Service_Log_Unique_Id: 'ARN-ERR24JTL-EAFH-O4W9-VRQF-PVWCMGVJXSKJ',\n  Request_Id: 699288,\n  User_Data_Id: 431553,\n  Request_Unique_Id: 'SRN-SFIDKSNB-MLLW-0FSC-A2G5-40CHFT5QAEMN',\n  PB_CRN: 1158085,\n  Client_Id: 2,\n  LM_Custom_Request: \n   { Plan_Code: 'P',\n     Plan_Id: 1102,\n     Plan_Name: 'Travel Guard Policy Platinum',\n     ___application_date___: '08/06/2024',\n     ___member_count___: 1,\n     ___plan_code_txt___: 'Platinum',\n     ___policy_end_date___: '08/10/2024',\n     ___selected_product___: 'Travel Guard',\n     ___selected_zone___: 'Worldwide Including USA/Canada',\n     ___trip_type___: 'Single Trip',\n     aadhar: '',\n     appointee_age: 0,\n     appointee_birth_date: '2024-08-06',\n     appointee_first_name: '',\n     appointee_last_name: '',\n     appointee_middle_name: '',\n     appointee_name: '',\n     appointee_relation: '',\n     birth_date: '1992-01-01',\n     city_id: 677,\n     communication_address_1: '',\n     communication_address_2: '',\n     communication_address_3: '',\n     communication_city: '',\n     communication_city_code: '',\n     communication_district_code: '',\n     communication_locality_code: '',\n     communication_pincode: '',\n     communication_state: '',\n     communication_state_code: '',\n     company_name: '',\n     current_date: '2024-08-06',\n     current_time: '09:08:92',\n     dbmaster_pb_city_id: 677,\n     dbmaster_pb_city_name: 'MUMBAI',\n     dbmaster_pb_pincode: 400001,\n     dbmaster_pb_state_id: 21,\n     dbmaster_pb_state_name: 'MAHARASHTRA',\n     email: 'policybosstesting@gmail.com',\n     final_premium: '',\n     first_name: 'NO',\n     gender: '',\n     gst_no: '',\n     gst_state: '',\n     insured_age: 32,\n     insurer_id: '',\n     insurer_integration_agent_code: '',\n     insurer_integration_location_code: '',\n     insurer_integration_pdf_url: '',\n     insurer_integration_service_password: '',\n     insurer_integration_service_user: '',\n     insurer_vehicle_id: undefined,\n     is_posp: '',\n     is_reg_addr_comm_addr_same: '',\n     kyc_no: '',\n     kyc_ref_no: '',\n     last_name: 'NAME',\n     marital: '',\n     member_1_age: 23,\n     member_1_birth_date: '2001-08-06',\n     member_1_first_name: 'NO',\n     member_1_gender: 'M',\n     member_1_inc: 1,\n     member_1_last_name: 'NAME',\n     member_1_middle_name: '',\n     member_1_occupation: '',\n     member_1_passport: '',\n     member_1_ped: '',\n     member_1_relation: '',\n     member_1_salutation: '',\n     member_array_birth_date: '2024-08-06',\n     member_array_first_name: '',\n     member_array_gender: '',\n     member_array_last_name: '',\n     member_array_middle_name: '',\n     member_array_occupation: '',\n     member_array_passport: '',\n     member_array_ped: '',\n     member_array_relation: '',\n     member_array_salutation: '',\n     method_type: 'Premium',\n     middle_name: '',\n     mobile: '9999999999',\n     net_premium: '',\n     nominee_address: '',\n     nominee_age: 0,\n     nominee_birth_date: '2024-08-06',\n     nominee_city_name: '',\n     nominee_first_name: '',\n     nominee_last_name: '',\n     nominee_middle_name: '',\n     nominee_name: '',\n     nominee_pincode: '',\n     nominee_relation: '',\n     occupation: '',\n     pan: '',\n     permanent_address_1: '',\n     permanent_address_2: '',\n     permanent_address_3: '',\n     permanent_city: '',\n     permanent_city_code: '',\n     permanent_district_code: '',\n     permanent_locality_code: '',\n     permanent_pincode: '',\n     permanent_state: '',\n     permanent_state_code: '',\n     pg_reference_number_1: '',\n     pg_reference_number_2: '',\n     policy_end_date: '2024-08-10',\n     policy_number: '',\n     policy_start_date: '2024-08-07',\n     policy_tenure: '',\n     product_id: 4,\n     proposal_create_flag: '',\n     recon_reference_number: '',\n     salutation: '',\n     salutation_1: '',\n     tax: '',\n     travel_days: 4,\n     travel_insurance_si: '0',\n     travel_insurance_type: 'individual',\n     visiting_countries: '' },\n  Insurer_Request: '{\\r\\n    \"selected_plan\": \"Platinum\",\\r\\n    \"selected_product\": \"Travel Guard\",\\r\\n    \"application_date\": \"08/06/2024\",\\r\\n    \"policy_type\": \"Without Sublimit\",\\r\\n    \"departure_date\": \"08/07/2024\",\\r\\n    \"return_date_single\": \"08/10/2024\",\\r\\n    \"member_count\": \"1\",\\r\\n        \\r\\n    \"dob_1\": \"08/06/2001\",\\r\\n    \"triptype\": \"Single Trip\",\\r\\n    \"selected_zone\": \"Worldwide Including USA/Canada\",\\r\\n    \"product_id\": \"M100000000003\",\\r\\n    \"customer_pincode\": \"400086\",\\r\\n    \"tripdays\": \"\",\\r\\n    \"email\": \"policybosstesting@gmail.com\",\\r\\n    \"mobile_no\": \"9999999999\",\\r\\n    \"office_location\": \"DELHI\",\\r\\n    \"visa_type\": \"Non Immigrant\",\\r\\n    \"is_tata_employee\": \"\",\\r\\n    \"employee_id\": \"\",\\r\\n    \"tata_emp_email\": \"\"\\r\\n}',\n  Insurer_Response: '',\n  Insurer_Response_Core: '',\n  Premium_Breakup: null,\n  LM_Response: '',\n  Insurer_Transaction_Identifier: '',\n  Health_Renewal_Proposal_Request_Core: null,\n  Status: 'pending',\n  Error_Code: '',\n  Is_Active: 1,\n  Created_On: 2024-08-06T03:51:57.201Z,\n  Product_Id: 4,\n  Insurer_Id: 11,\n  Plan_Id: 1102,\n  Plan_Name: 'Travel Guard Policy Platinum',\n  Plan_Code: 'P',\n  Allow_Renew: undefined,\n  Addon_Mode: 'ALACARTE',\n  Method_Type: 'Premium',\n  Call_Execution_Time: 0 }","timestamp":"9:21:57 AM"}
{"level":"error","message":"Dhananjay Health Renewal Before save_log  true","timestamp":"9:21:57 AM"}
{"level":"error","message":"Plan_execute_loop 1158085 11 ARN-ERR24JTL-EAFH-O4W9-VRQF-PVWCMGVJXSKJ 1102 Travel Guard Policy Platinum 1102 Travel Guard Policy Platinum","timestamp":"9:21:57 AM"}
{"level":"error","message":"Dhananjay Health Renewal After save_log  true","timestamp":"9:21:57 AM"}
{"level":"error","message":"Dhananjay Health Renewal docLog  { Service_Log_Id: '',\n  Service_Log_Unique_Id: 'ARN-MRXEZBAR-RP1I-2GIH-RLIL-OUHFLP4AWWVO',\n  Request_Id: 699288,\n  User_Data_Id: 431553,\n  Request_Unique_Id: 'SRN-SFIDKSNB-MLLW-0FSC-A2G5-40CHFT5QAEMN',\n  PB_CRN: 1158085,\n  Client_Id: 2,\n  LM_Custom_Request: \n   { Plan_Code: 'S',\n     Plan_Id: 1103,\n     Plan_Name: 'Travel Guard Policy Silver',\n     ___application_date___: '08/06/2024',\n     ___member_count___: 1,\n     ___plan_code_txt___: 'Silver',\n     ___policy_end_date___: '08/10/2024',\n     ___selected_product___: 'Travel Guard',\n     ___selected_zone___: 'Worldwide Including USA/Canada',\n     ___trip_type___: 'Single Trip',\n     aadhar: '',\n     appointee_age: 0,\n     appointee_birth_date: '2024-08-06',\n     appointee_first_name: '',\n     appointee_last_name: '',\n     appointee_middle_name: '',\n     appointee_name: '',\n     appointee_relation: '',\n     birth_date: '1992-01-01',\n     city_id: 677,\n     communication_address_1: '',\n     communication_address_2: '',\n     communication_address_3: '',\n     communication_city: '',\n     communication_city_code: '',\n     communication_district_code: '',\n     communication_locality_code: '',\n     communication_pincode: '',\n     communication_state: '',\n     communication_state_code: '',\n     company_name: '',\n     current_date: '2024-08-06',\n     current_time: '09:08:92',\n     dbmaster_pb_city_id: 677,\n     dbmaster_pb_city_name: 'MUMBAI',\n     dbmaster_pb_pincode: 400001,\n     dbmaster_pb_state_id: 21,\n     dbmaster_pb_state_name: 'MAHARASHTRA',\n     email: 'policybosstesting@gmail.com',\n     final_premium: '',\n     first_name: 'NO',\n     gender: '',\n     gst_no: '',\n     gst_state: '',\n     insured_age: 32,\n     insurer_id: '',\n     insurer_integration_agent_code: '',\n     insurer_integration_location_code: '',\n     insurer_integration_pdf_url: '',\n     insurer_integration_service_password: '',\n     insurer_integration_service_user: '',\n     insurer_vehicle_id: undefined,\n     is_posp: '',\n     is_reg_addr_comm_addr_same: '',\n     kyc_no: '',\n     kyc_ref_no: '',\n     last_name: 'NAME',\n     marital: '',\n     member_1_age: 23,\n     member_1_birth_date: '2001-08-06',\n     member_1_first_name: 'NO',\n     member_1_gender: 'M',\n     member_1_inc: 1,\n     member_1_last_name: 'NAME',\n     member_1_middle_name: '',\n     member_1_occupation: '',\n     member_1_passport: '',\n     member_1_ped: '',\n     member_1_relation: '',\n     member_1_salutation: '',\n     member_array_birth_date: '2024-08-06',\n     member_array_first_name: '',\n     member_array_gender: '',\n     member_array_last_name: '',\n     member_array_middle_name: '',\n     member_array_occupation: '',\n     member_array_passport: '',\n     member_array_ped: '',\n     member_array_relation: '',\n     member_array_salutation: '',\n     method_type: 'Premium',\n     middle_name: '',\n     mobile: '9999999999',\n     net_premium: '',\n     nominee_address: '',\n     nominee_age: 0,\n     nominee_birth_date: '2024-08-06',\n     nominee_city_name: '',\n     nominee_first_name: '',\n     nominee_last_name: '',\n     nominee_middle_name: '',\n     nominee_name: '',\n     nominee_pincode: '',\n     nominee_relation: '',\n     occupation: '',\n     pan: '',\n     permanent_address_1: '',\n     permanent_address_2: '',\n     permanent_address_3: '',\n     permanent_city: '',\n     permanent_city_code: '',\n     permanent_district_code: '',\n     permanent_locality_code: '',\n     permanent_pincode: '',\n     permanent_state: '',\n     permanent_state_code: '',\n     pg_reference_number_1: '',\n     pg_reference_number_2: '',\n     policy_end_date: '2024-08-10',\n     policy_number: '',\n     policy_start_date: '2024-08-07',\n     policy_tenure: '',\n     product_id: 4,\n     proposal_create_flag: '',\n     recon_reference_number: '',\n     salutation: '',\n     salutation_1: '',\n     tax: '',\n     travel_days: 4,\n     travel_insurance_si: '0',\n     travel_insurance_type: 'individual',\n     visiting_countries: '' },\n  Insurer_Request: '{\\r\\n    \"selected_plan\": \"Silver\",\\r\\n    \"selected_product\": \"Travel Guard\",\\r\\n    \"application_date\": \"08/06/2024\",\\r\\n    \"policy_type\": \"Without Sublimit\",\\r\\n    \"departure_date\": \"08/07/2024\",\\r\\n    \"return_date_single\": \"08/10/2024\",\\r\\n    \"member_count\": \"1\",\\r\\n        \\r\\n    \"dob_1\": \"08/06/2001\",\\r\\n    \"triptype\": \"Single Trip\",\\r\\n    \"selected_zone\": \"Worldwide Including USA/Canada\",\\r\\n    \"product_id\": \"M100000000003\",\\r\\n    \"customer_pincode\": \"400086\",\\r\\n    \"tripdays\": \"\",\\r\\n    \"email\": \"policybosstesting@gmail.com\",\\r\\n    \"mobile_no\": \"9999999999\",\\r\\n    \"office_location\": \"DELHI\",\\r\\n    \"visa_type\": \"Non Immigrant\",\\r\\n    \"is_tata_employee\": \"\",\\r\\n    \"employee_id\": \"\",\\r\\n    \"tata_emp_email\": \"\"\\r\\n}',\n  Insurer_Response: '',\n  Insurer_Response_Core: '',\n  Premium_Breakup: null,\n  LM_Response: '',\n  Insurer_Transaction_Identifier: '',\n  Health_Renewal_Proposal_Request_Core: null,\n  Status: 'pending',\n  Error_Code: '',\n  Is_Active: 1,\n  Created_On: 2024-08-06T03:51:57.266Z,\n  Product_Id: 4,\n  Insurer_Id: 11,\n  Plan_Id: 1103,\n  Plan_Name: 'Travel Guard Policy Silver',\n  Plan_Code: 'S',\n  Allow_Renew: undefined,\n  Addon_Mode: 'ALACARTE',\n  Method_Type: 'Premium',\n  Call_Execution_Time: 0 }","timestamp":"9:21:57 AM"}
{"level":"error","message":"Dhananjay Health Renewal Before save_log  true","timestamp":"9:21:57 AM"}
{"level":"error","message":"Plan_execute_loop 1158085 11 ARN-MRXEZBAR-RP1I-2GIH-RLIL-OUHFLP4AWWVO 1103 Travel Guard Policy Silver 1103 Travel Guard Policy Silver","timestamp":"9:21:57 AM"}
{"level":"error","message":"Dhananjay Health Renewal After save_log  true","timestamp":"9:21:57 AM"}
{"level":"error","message":"Dhananjay Health Renewal docLog  { Service_Log_Id: '',\n  Service_Log_Unique_Id: 'ARN-Z4BWWJZS-7O93-30OG-2VHW-CMIB0ESMJWIJ',\n  Request_Id: 699288,\n  User_Data_Id: 431553,\n  Request_Unique_Id: 'SRN-SFIDKSNB-MLLW-0FSC-A2G5-40CHFT5QAEMN',\n  PB_CRN: 1158085,\n  Client_Id: 2,\n  LM_Custom_Request: \n   { Plan_Code: 'SP',\n     Plan_Id: 1105,\n     Plan_Name: 'Travel Guard Policy Silver Plus',\n     ___application_date___: '08/06/2024',\n     ___member_count___: 1,\n     ___plan_code_txt___: 'Silver Plus',\n     ___policy_end_date___: '08/10/2024',\n     ___selected_product___: 'Travel Guard',\n     ___selected_zone___: 'Worldwide Including USA/Canada',\n     ___trip_type___: 'Single Trip',\n     aadhar: '',\n     appointee_age: 0,\n     appointee_birth_date: '2024-08-06',\n     appointee_first_name: '',\n     appointee_last_name: '',\n     appointee_middle_name: '',\n     appointee_name: '',\n     appointee_relation: '',\n     birth_date: '1992-01-01',\n     city_id: 677,\n     communication_address_1: '',\n     communication_address_2: '',\n     communication_address_3: '',\n     communication_city: '',\n     communication_city_code: '',\n     communication_district_code: '',\n     communication_locality_code: '',\n     communication_pincode: '',\n     communication_state: '',\n     communication_state_code: '',\n     company_name: '',\n     current_date: '2024-08-06',\n     current_time: '09:08:92',\n     dbmaster_pb_city_id: 677,\n     dbmaster_pb_city_name: 'MUMBAI',\n     dbmaster_pb_pincode: 400001,\n     dbmaster_pb_state_id: 21,\n     dbmaster_pb_state_name: 'MAHARASHTRA',\n     email: 'policybosstesting@gmail.com',\n     final_premium: '',\n     first_name: 'NO',\n     gender: '',\n     gst_no: '',\n     gst_state: '',\n     insured_age: 32,\n     insurer_id: '',\n     insurer_integration_agent_code: '',\n     insurer_integration_location_code: '',\n     insurer_integration_pdf_url: '',\n     insurer_integration_service_password: '',\n     insurer_integration_service_user: '',\n     insurer_vehicle_id: undefined,\n     is_posp: '',\n     is_reg_addr_comm_addr_same: '',\n     kyc_no: '',\n     kyc_ref_no: '',\n     last_name: 'NAME',\n     marital: '',\n     member_1_age: 23,\n     member_1_birth_date: '2001-08-06',\n     member_1_first_name: 'NO',\n     member_1_gender: 'M',\n     member_1_inc: 1,\n     member_1_last_name: 'NAME',\n     member_1_middle_name: '',\n     member_1_occupation: '',\n     member_1_passport: '',\n     member_1_ped: '',\n     member_1_relation: '',\n     member_1_salutation: '',\n     member_array_birth_date: '2024-08-06',\n     member_array_first_name: '',\n     member_array_gender: '',\n     member_array_last_name: '',\n     member_array_middle_name: '',\n     member_array_occupation: '',\n     member_array_passport: '',\n     member_array_ped: '',\n     member_array_relation: '',\n     member_array_salutation: '',\n     method_type: 'Premium',\n     middle_name: '',\n     mobile: '9999999999',\n     net_premium: '',\n     nominee_address: '',\n     nominee_age: 0,\n     nominee_birth_date: '2024-08-06',\n     nominee_city_name: '',\n     nominee_first_name: '',\n     nominee_last_name: '',\n     nominee_middle_name: '',\n     nominee_name: '',\n     nominee_pincode: '',\n     nominee_relation: '',\n     occupation: '',\n     pan: '',\n     permanent_address_1: '',\n     permanent_address_2: '',\n     permanent_address_3: '',\n     permanent_city: '',\n     permanent_city_code: '',\n     permanent_district_code: '',\n     permanent_locality_code: '',\n     permanent_pincode: '',\n     permanent_state: '',\n     permanent_state_code: '',\n     pg_reference_number_1: '',\n     pg_reference_number_2: '',\n     policy_end_date: '2024-08-10',\n     policy_number: '',\n     policy_start_date: '2024-08-07',\n     policy_tenure: '',\n     product_id: 4,\n     proposal_create_flag: '',\n     recon_reference_number: '',\n     salutation: '',\n     salutation_1: '',\n     tax: '',\n     travel_days: 4,\n     travel_insurance_si: '0',\n     travel_insurance_type: 'individual',\n     visiting_countries: '' },\n  Insurer_Request: '{\\r\\n    \"selected_plan\": \"Silver Plus\",\\r\\n    \"selected_product\": \"Travel Guard\",\\r\\n    \"application_date\": \"08/06/2024\",\\r\\n    \"policy_type\": \"Without Sublimit\",\\r\\n    \"departure_date\": \"08/07/2024\",\\r\\n    \"return_date_single\": \"08/10/2024\",\\r\\n    \"member_count\": \"1\",\\r\\n        \\r\\n    \"dob_1\": \"08/06/2001\",\\r\\n    \"triptype\": \"Single Trip\",\\r\\n    \"selected_zone\": \"Worldwide Including USA/Canada\",\\r\\n    \"product_id\": \"M100000000003\",\\r\\n    \"customer_pincode\": \"400086\",\\r\\n    \"tripdays\": \"\",\\r\\n    \"email\": \"policybosstesting@gmail.com\",\\r\\n    \"mobile_no\": \"9999999999\",\\r\\n    \"office_location\": \"DELHI\",\\r\\n    \"visa_type\": \"Non Immigrant\",\\r\\n    \"is_tata_employee\": \"\",\\r\\n    \"employee_id\": \"\",\\r\\n    \"tata_emp_email\": \"\"\\r\\n}',\n  Insurer_Response: '',\n  Insurer_Response_Core: '',\n  Premium_Breakup: null,\n  LM_Response: '',\n  Insurer_Transaction_Identifier: '',\n  Health_Renewal_Proposal_Request_Core: null,\n  Status: 'pending',\n  Error_Code: '',\n  Is_Active: 1,\n  Created_On: 2024-08-06T03:51:57.326Z,\n  Product_Id: 4,\n  Insurer_Id: 11,\n  Plan_Id: 1105,\n  Plan_Name: 'Travel Guard Policy Silver Plus',\n  Plan_Code: 'SP',\n  Allow_Renew: undefined,\n  Addon_Mode: 'ALACARTE',\n  Method_Type: 'Premium',\n  Call_Execution_Time: 0 }","timestamp":"9:21:57 AM"}
{"level":"error","message":"Dhananjay Health Renewal Before save_log  true","timestamp":"9:21:57 AM"}
{"level":"error","message":"Plan_execute_loop 1158085 11 ARN-Z4BWWJZS-7O93-30OG-2VHW-CMIB0ESMJWIJ 1105 Travel Guard Policy Silver Plus 1105 Travel Guard Policy Silver Plus","timestamp":"9:21:57 AM"}
{"level":"error","message":"Dhananjay Health Renewal After save_log  true","timestamp":"9:21:57 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:21:57 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:21:57 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:21:57 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:21:57 AM"}
{"level":"error","message":"LOG REFERER YTD undefined ::ffff:127.0.0.1 undefined","timestamp":"9:21:57 AM"}
{"level":"error","message":"Niva Health Renew LINE5","timestamp":"9:21:57 AM"}
{"level":"error","message":"Health Renewal Jyoti  undefined","timestamp":"9:21:57 AM"}
{"level":"error","message":"Health Renewal Jyoti plan_list [ { Plan_Id: 60887,\n    Plan_Code: 60887,\n    Plan_Name: 'PLATINUM W-50',\n    Is_Active: true },\n  { Plan_Id: 60888,\n    Plan_Code: 60888,\n    Plan_Name: 'PLATINUM W-100',\n    Is_Active: true },\n  { Plan_Id: 60890,\n    Plan_Code: 60890,\n    Plan_Name: 'PLATINUM W-250',\n    Is_Active: true },\n  { Plan_Id: 60891,\n    Plan_Code: 60891,\n    Plan_Name: 'PLATINUM W-500',\n    Is_Active: true },\n  { Plan_Id: 60892,\n    Plan_Code: 60892,\n    Plan_Name: 'GOLD W-50',\n    Is_Active: true },\n  { Plan_Id: 60894,\n    Plan_Code: 60894,\n    Plan_Name: 'GOLD W-250',\n    Is_Active: true },\n  { Plan_Id: 60895,\n    Plan_Code: 60895,\n    Plan_Name: 'GOLD W-500',\n    Is_Active: true },\n  { Plan_Id: 60896,\n    Plan_Code: 60896,\n    Plan_Name: 'ASIA 25',\n    Is_Active: true },\n  { Plan_Id: 60899,\n    Plan_Code: 60899,\n    Plan_Name: 'PLATINUM X-250',\n    Is_Active: true },\n  { Plan_Id: 60900,\n    Plan_Code: 60900,\n    Plan_Name: 'PLATINUM X-100',\n    Is_Active: true },\n  { Plan_Id: 60901,\n    Plan_Code: 60901,\n    Plan_Name: 'GOLD X-50',\n    Is_Active: true },\n  { Plan_Id: 60902,\n    Plan_Code: 60902,\n    Plan_Name: 'GOLD X-100',\n    Is_Active: true },\n  { Plan_Id: 60903,\n    Plan_Code: 60903,\n    Plan_Name: 'GOLD X-250',\n    Is_Active: true },\n  { Plan_Id: 60904,\n    Plan_Code: 60904,\n    Plan_Name: 'GOLD X-500',\n    Is_Active: true },\n  { Plan_Id: 61422,\n    Plan_Code: 61422,\n    Plan_Name: 'Gold W 50 RE',\n    Is_Active: true },\n  { Plan_Id: 61423,\n    Plan_Code: 61423,\n    Plan_Name: 'Gold W 100 RE',\n    Is_Active: true },\n  { Plan_Id: 61425,\n    Plan_Code: 61425,\n    Plan_Name: 'Gold W 500 RE',\n    Is_Active: true },\n  { Plan_Id: 61520,\n    Plan_Code: 61520,\n    Plan_Name: 'GOLD W 250',\n    Is_Active: true },\n  { Plan_Id: 61521,\n    Plan_Code: 61521,\n    Plan_Name: 'GOLD W 50',\n    Is_Active: true } ]","timestamp":"9:21:57 AM"}
{"level":"error","message":"Dhananjay Health Renewal docLog  { Service_Log_Id: '',\n  Service_Log_Unique_Id: 'ARN-SG6ALJGM-PNEA-80YH-AYWO-YN07MSTJIBIZ',\n  Request_Id: 699288,\n  User_Data_Id: 431553,\n  Request_Unique_Id: 'SRN-SFIDKSNB-MLLW-0FSC-A2G5-40CHFT5QAEMN',\n  PB_CRN: 1158085,\n  Client_Id: 2,\n  LM_Custom_Request: \n   { Plan_Code: 60887,\n     Plan_Id: 60887,\n     Plan_Name: 'PLATINUM W-50',\n     aadhar: '',\n     appointee_age: 0,\n     appointee_birth_date: '2024-08-06',\n     appointee_first_name: '',\n     appointee_last_name: '',\n     appointee_middle_name: '',\n     appointee_name: '',\n     appointee_relation: '',\n     birth_date: '1992-01-01',\n     city_id: 677,\n     communication_address_1: '',\n     communication_address_2: '',\n     communication_address_3: '',\n     communication_city: '',\n     communication_city_code: '',\n     communication_district_code: '',\n     communication_locality_code: '',\n     communication_pincode: '',\n     communication_state: '',\n     communication_state_code: '',\n     company_name: '',\n     current_date: '2024-08-06',\n     current_time: '09:08:92',\n     dbmaster_pb_city_id: 677,\n     dbmaster_pb_city_name: 'MUMBAI',\n     dbmaster_pb_pincode: 400001,\n     dbmaster_pb_state_id: 21,\n     dbmaster_pb_state_name: 'MAHARASHTRA',\n     email: 'policybosstesting@gmail.com',\n     final_premium: '',\n     first_name: 'NO',\n     gender: '',\n     gst_no: '',\n     gst_state: '',\n     insured_age: 32,\n     insurer_id: '',\n     insurer_integration_agent_code: 'DL-4129/1363694',\n     insurer_integration_pdf_url: '',\n     insurer_integration_service_password: '',\n     insurer_integration_service_user: '',\n     insurer_vehicle_id: undefined,\n     is_posp: '',\n     is_reg_addr_comm_addr_same: '',\n     kyc_no: '',\n     kyc_ref_no: '',\n     last_name: 'NAME',\n     marital: '',\n     member_1_birth_date: '2001-08-06',\n     member_1_first_name: 'NO',\n     member_1_gender: 'M',\n     member_1_last_name: 'NAME',\n     member_1_middle_name: '',\n     member_1_occupation: '',\n     member_1_passport: '',\n     member_1_ped: '',\n     member_1_relation: '',\n     member_1_salutation: '',\n     member_array_birth_date: '2024-08-06',\n     member_array_first_name: '',\n     member_array_gender: '',\n     member_array_last_name: '',\n     member_array_middle_name: '',\n     member_array_occupation: '',\n     member_array_passport: '',\n     member_array_ped: '',\n     member_array_relation: '',\n     member_array_salutation: '',\n     method_type: 'Premium',\n     middle_name: '',\n     mobile: '9999999999',\n     net_premium: '',\n     nominee_address: '',\n     nominee_age: 0,\n     nominee_birth_date: '2024-08-06',\n     nominee_city_name: '',\n     nominee_first_name: '',\n     nominee_last_name: '',\n     nominee_middle_name: '',\n     nominee_name: '',\n     nominee_pincode: '',\n     nominee_relation: '',\n     occupation: '',\n     pan: '',\n     permanent_address_1: '',\n     permanent_address_2: '',\n     permanent_address_3: '',\n     permanent_city: '',\n     permanent_city_code: '',\n     permanent_district_code: '',\n     permanent_locality_code: '',\n     permanent_pincode: '',\n     permanent_state: '',\n     permanent_state_code: '',\n     pg_reference_number_1: '',\n     pg_reference_number_2: '',\n     policy_end_date: '2024-08-10',\n     policy_number: '',\n     policy_start_date: '2024-08-07',\n     policy_tenure: '',\n     product_id: 4,\n     proposal_create_flag: '',\n     recon_reference_number: '',\n     salutation: '',\n     salutation_1: '',\n     tax: '',\n     travel_insurance_si: '0',\n     travel_insurance_type: 'individual',\n     visiting_countries: '',\n     member_1_inc: 1,\n     member_1_age: 23,\n     travel_days: 4,\n     correlationCode: 'e576dba8-5944-417e-9ff9-74bdefe52452',\n     travel_insurance_si_60887: '$50000' },\n  Insurer_Request: '{\\r\\n    \"CorrelationId\": \"e576dba8-5944-417e-9ff9-74bdefe52452\",\\r\\n    \"PlanType\": \"SINGLE\",\\r\\n    \"TripType\": \"SINGLE\",\\r\\n    \"NoOfDays\": \"0\",\\r\\n    \"TripDuration\": \"0\",\\r\\n    \"PlanCode\": \"60887\",\\r\\n    \"NoOfDays\": 0,\\r\\n    \"TripDuration\": 0,\\r\\n    \"InsuredDetails\": [\\r\\n        {\\r\\n            \"InsuredDOB\": \"2001-08-06\"\\r\\n        }\\r\\n    ],\\r\\n    \"PolicyStartDate\": \"2024-08-07\",\\r\\n    \"PolicyEndDate\": \"2024-08-10\",\\r\\n    \"PolicyDuration\": \"3\",\\r\\n    \"VisaType\": \"NON_IMMIGRANT\",\\r\\n    \"PartyStateName\": \"MAHARASHTRA\"\\r\\n}',\n  Insurer_Response: '',\n  Insurer_Response_Core: '',\n  Premium_Breakup: null,\n  LM_Response: '',\n  Insurer_Transaction_Identifier: '',\n  Health_Renewal_Proposal_Request_Core: null,\n  Status: 'pending',\n  Error_Code: '',\n  Is_Active: 1,\n  Created_On: 2024-08-06T03:51:57.619Z,\n  Product_Id: 4,\n  Insurer_Id: 6,\n  Plan_Id: 60887,\n  Plan_Name: 'PLATINUM W-50',\n  Plan_Code: 60887,\n  Allow_Renew: undefined,\n  Addon_Mode: 'ALACARTE',\n  Method_Type: 'Premium',\n  Call_Execution_Time: 0 }","timestamp":"9:21:57 AM"}
{"level":"error","message":"Dhananjay Health Renewal Before save_log  true","timestamp":"9:21:57 AM"}
{"level":"error","message":"Plan_execute_loop 1158085 6 ARN-SG6ALJGM-PNEA-80YH-AYWO-YN07MSTJIBIZ 60887 PLATINUM W-50 60887 PLATINUM W-50","timestamp":"9:21:57 AM"}
{"level":"error","message":"Dhananjay Health Renewal After save_log  true","timestamp":"9:21:57 AM"}
{"level":"error","message":"Dhananjay Health Renewal docLog  { Service_Log_Id: '',\n  Service_Log_Unique_Id: 'ARN-FDUHRCNK-EE99-YXBX-JWU4-IRILPKLYCBNR',\n  Request_Id: 699288,\n  User_Data_Id: 431553,\n  Request_Unique_Id: 'SRN-SFIDKSNB-MLLW-0FSC-A2G5-40CHFT5QAEMN',\n  PB_CRN: 1158085,\n  Client_Id: 2,\n  LM_Custom_Request: \n   { Plan_Code: 60888,\n     Plan_Id: 60888,\n     Plan_Name: 'PLATINUM W-100',\n     aadhar: '',\n     appointee_age: 0,\n     appointee_birth_date: '2024-08-06',\n     appointee_first_name: '',\n     appointee_last_name: '',\n     appointee_middle_name: '',\n     appointee_name: '',\n     appointee_relation: '',\n     birth_date: '1992-01-01',\n     city_id: 677,\n     communication_address_1: '',\n     communication_address_2: '',\n     communication_address_3: '',\n     communication_city: '',\n     communication_city_code: '',\n     communication_district_code: '',\n     communication_locality_code: '',\n     communication_pincode: '',\n     communication_state: '',\n     communication_state_code: '',\n     company_name: '',\n     correlationCode: 'e576dba8-5944-417e-9ff9-74bdefe52452',\n     current_date: '2024-08-06',\n     current_time: '09:08:92',\n     dbmaster_pb_city_id: 677,\n     dbmaster_pb_city_name: 'MUMBAI',\n     dbmaster_pb_pincode: 400001,\n     dbmaster_pb_state_id: 21,\n     dbmaster_pb_state_name: 'MAHARASHTRA',\n     email: 'policybosstesting@gmail.com',\n     final_premium: '',\n     first_name: 'NO',\n     gender: '',\n     gst_no: '',\n     gst_state: '',\n     insured_age: 32,\n     insurer_id: '',\n     insurer_integration_agent_code: 'DL-4129/1363694',\n     insurer_integration_pdf_url: '',\n     insurer_integration_service_password: '',\n     insurer_integration_service_user: '',\n     insurer_vehicle_id: undefined,\n     is_posp: '',\n     is_reg_addr_comm_addr_same: '',\n     kyc_no: '',\n     kyc_ref_no: '',\n     last_name: 'NAME',\n     marital: '',\n     member_1_age: 23,\n     member_1_birth_date: '2001-08-06',\n     member_1_first_name: 'NO',\n     member_1_gender: 'M',\n     member_1_inc: 1,\n     member_1_last_name: 'NAME',\n     member_1_middle_name: '',\n     member_1_occupation: '',\n     member_1_passport: '',\n     member_1_ped: '',\n     member_1_relation: '',\n     member_1_salutation: '',\n     member_array_birth_date: '2024-08-06',\n     member_array_first_name: '',\n     member_array_gender: '',\n     member_array_last_name: '',\n     member_array_middle_name: '',\n     member_array_occupation: '',\n     member_array_passport: '',\n     member_array_ped: '',\n     member_array_relation: '',\n     member_array_salutation: '',\n     method_type: 'Premium',\n     middle_name: '',\n     mobile: '9999999999',\n     net_premium: '',\n     nominee_address: '',\n     nominee_age: 0,\n     nominee_birth_date: '2024-08-06',\n     nominee_city_name: '',\n     nominee_first_name: '',\n     nominee_last_name: '',\n     nominee_middle_name: '',\n     nominee_name: '',\n     nominee_pincode: '',\n     nominee_relation: '',\n     occupation: '',\n     pan: '',\n     permanent_address_1: '',\n     permanent_address_2: '',\n     permanent_address_3: '',\n     permanent_city: '',\n     permanent_city_code: '',\n     permanent_district_code: '',\n     permanent_locality_code: '',\n     permanent_pincode: '',\n     permanent_state: '',\n     permanent_state_code: '',\n     pg_reference_number_1: '',\n     pg_reference_number_2: '',\n     policy_end_date: '2024-08-10',\n     policy_number: '',\n     policy_start_date: '2024-08-07',\n     policy_tenure: '',\n     product_id: 4,\n     proposal_create_flag: '',\n     recon_reference_number: '',\n     salutation: '',\n     salutation_1: '',\n     tax: '',\n     travel_days: 4,\n     travel_insurance_si: '0',\n     travel_insurance_si_60887: '$50000',\n     travel_insurance_type: 'individual',\n     visiting_countries: '',\n     travel_insurance_si_60888: '$100000' },\n  Insurer_Request: '{\\r\\n    \"CorrelationId\": \"e576dba8-5944-417e-9ff9-74bdefe52452\",\\r\\n    \"PlanType\": \"SINGLE\",\\r\\n    \"TripType\": \"SINGLE\",\\r\\n    \"NoOfDays\": \"0\",\\r\\n    \"TripDuration\": \"0\",\\r\\n    \"PlanCode\": \"60888\",\\r\\n    \"NoOfDays\": 0,\\r\\n    \"TripDuration\": 0,\\r\\n    \"InsuredDetails\": [\\r\\n        {\\r\\n            \"InsuredDOB\": \"2001-08-06\"\\r\\n        }\\r\\n    ],\\r\\n    \"PolicyStartDate\": \"2024-08-07\",\\r\\n    \"PolicyEndDate\": \"2024-08-10\",\\r\\n    \"PolicyDuration\": \"3\",\\r\\n    \"VisaType\": \"NON_IMMIGRANT\",\\r\\n    \"PartyStateName\": \"MAHARASHTRA\"\\r\\n}',\n  Insurer_Response: '',\n  Insurer_Response_Core: '',\n  Premium_Breakup: null,\n  LM_Response: '',\n  Insurer_Transaction_Identifier: '',\n  Health_Renewal_Proposal_Request_Core: null,\n  Status: 'pending',\n  Error_Code: '',\n  Is_Active: 1,\n  Created_On: 2024-08-06T03:51:57.659Z,\n  Product_Id: 4,\n  Insurer_Id: 6,\n  Plan_Id: 60888,\n  Plan_Name: 'PLATINUM W-100',\n  Plan_Code: 60888,\n  Allow_Renew: undefined,\n  Addon_Mode: 'ALACARTE',\n  Method_Type: 'Premium',\n  Call_Execution_Time: 0 }","timestamp":"9:21:57 AM"}
{"level":"error","message":"Dhananjay Health Renewal Before save_log  true","timestamp":"9:21:57 AM"}
{"level":"error","message":"Plan_execute_loop 1158085 6 ARN-FDUHRCNK-EE99-YXBX-JWU4-IRILPKLYCBNR 60888 PLATINUM W-100 60888 PLATINUM W-100","timestamp":"9:21:57 AM"}
{"level":"error","message":"Dhananjay Health Renewal After save_log  true","timestamp":"9:21:57 AM"}
{"level":"error","message":"Dhananjay Health Renewal docLog  { Service_Log_Id: '',\n  Service_Log_Unique_Id: 'ARN-STYR6M91-CZXU-5HID-2JBR-A0TKDPUYKSRN',\n  Request_Id: 699288,\n  User_Data_Id: 431553,\n  Request_Unique_Id: 'SRN-SFIDKSNB-MLLW-0FSC-A2G5-40CHFT5QAEMN',\n  PB_CRN: 1158085,\n  Client_Id: 2,\n  LM_Custom_Request: \n   { Plan_Code: 60890,\n     Plan_Id: 60890,\n     Plan_Name: 'PLATINUM W-250',\n     aadhar: '',\n     appointee_age: 0,\n     appointee_birth_date: '2024-08-06',\n     appointee_first_name: '',\n     appointee_last_name: '',\n     appointee_middle_name: '',\n     appointee_name: '',\n     appointee_relation: '',\n     birth_date: '1992-01-01',\n     city_id: 677,\n     communication_address_1: '',\n     communication_address_2: '',\n     communication_address_3: '',\n     communication_city: '',\n     communication_city_code: '',\n     communication_district_code: '',\n     communication_locality_code: '',\n     communication_pincode: '',\n     communication_state: '',\n     communication_state_code: '',\n     company_name: '',\n     correlationCode: 'e576dba8-5944-417e-9ff9-74bdefe52452',\n     current_date: '2024-08-06',\n     current_time: '09:08:92',\n     dbmaster_pb_city_id: 677,\n     dbmaster_pb_city_name: 'MUMBAI',\n     dbmaster_pb_pincode: 400001,\n     dbmaster_pb_state_id: 21,\n     dbmaster_pb_state_name: 'MAHARASHTRA',\n     email: 'policybosstesting@gmail.com',\n     final_premium: '',\n     first_name: 'NO',\n     gender: '',\n     gst_no: '',\n     gst_state: '',\n     insured_age: 32,\n     insurer_id: '',\n     insurer_integration_agent_code: 'DL-4129/1363694',\n     insurer_integration_pdf_url: '',\n     insurer_integration_service_password: '',\n     insurer_integration_service_user: '',\n     insurer_vehicle_id: undefined,\n     is_posp: '',\n     is_reg_addr_comm_addr_same: '',\n     kyc_no: '',\n     kyc_ref_no: '',\n     last_name: 'NAME',\n     marital: '',\n     member_1_age: 23,\n     member_1_birth_date: '2001-08-06',\n     member_1_first_name: 'NO',\n     member_1_gender: 'M',\n     member_1_inc: 1,\n     member_1_last_name: 'NAME',\n     member_1_middle_name: '',\n     member_1_occupation: '',\n     member_1_passport: '',\n     member_1_ped: '',\n     member_1_relation: '',\n     member_1_salutation: '',\n     member_array_birth_date: '2024-08-06',\n     member_array_first_name: '',\n     member_array_gender: '',\n     member_array_last_name: '',\n     member_array_middle_name: '',\n     member_array_occupation: '',\n     member_array_passport: '',\n     member_array_ped: '',\n     member_array_relation: '',\n     member_array_salutation: '',\n     method_type: 'Premium',\n     middle_name: '',\n     mobile: '9999999999',\n     net_premium: '',\n     nominee_address: '',\n     nominee_age: 0,\n     nominee_birth_date: '2024-08-06',\n     nominee_city_name: '',\n     nominee_first_name: '',\n     nominee_last_name: '',\n     nominee_middle_name: '',\n     nominee_name: '',\n     nominee_pincode: '',\n     nominee_relation: '',\n     occupation: '',\n     pan: '',\n     permanent_address_1: '',\n     permanent_address_2: '',\n     permanent_address_3: '',\n     permanent_city: '',\n     permanent_city_code: '',\n     permanent_district_code: '',\n     permanent_locality_code: '',\n     permanent_pincode: '',\n     permanent_state: '',\n     permanent_state_code: '',\n     pg_reference_number_1: '',\n     pg_reference_number_2: '',\n     policy_end_date: '2024-08-10',\n     policy_number: '',\n     policy_start_date: '2024-08-07',\n     policy_tenure: '',\n     product_id: 4,\n     proposal_create_flag: '',\n     recon_reference_number: '',\n     salutation: '',\n     salutation_1: '',\n     tax: '',\n     travel_days: 4,\n     travel_insurance_si: '0',\n     travel_insurance_si_60887: '$50000',\n     travel_insurance_si_60888: '$100000',\n     travel_insurance_type: 'individual',\n     visiting_countries: '',\n     travel_insurance_si_60890: '$250000' },\n  Insurer_Request: '{\\r\\n    \"CorrelationId\": \"e576dba8-5944-417e-9ff9-74bdefe52452\",\\r\\n    \"PlanType\": \"SINGLE\",\\r\\n    \"TripType\": \"SINGLE\",\\r\\n    \"NoOfDays\": \"0\",\\r\\n    \"TripDuration\": \"0\",\\r\\n    \"PlanCode\": \"60890\",\\r\\n    \"NoOfDays\": 0,\\r\\n    \"TripDuration\": 0,\\r\\n    \"InsuredDetails\": [\\r\\n        {\\r\\n            \"InsuredDOB\": \"2001-08-06\"\\r\\n        }\\r\\n    ],\\r\\n    \"PolicyStartDate\": \"2024-08-07\",\\r\\n    \"PolicyEndDate\": \"2024-08-10\",\\r\\n    \"PolicyDuration\": \"3\",\\r\\n    \"VisaType\": \"NON_IMMIGRANT\",\\r\\n    \"PartyStateName\": \"MAHARASHTRA\"\\r\\n}',\n  Insurer_Response: '',\n  Insurer_Response_Core: '',\n  Premium_Breakup: null,\n  LM_Response: '',\n  Insurer_Transaction_Identifier: '',\n  Health_Renewal_Proposal_Request_Core: null,\n  Status: 'pending',\n  Error_Code: '',\n  Is_Active: 1,\n  Created_On: 2024-08-06T03:51:57.720Z,\n  Product_Id: 4,\n  Insurer_Id: 6,\n  Plan_Id: 60890,\n  Plan_Name: 'PLATINUM W-250',\n  Plan_Code: 60890,\n  Allow_Renew: undefined,\n  Addon_Mode: 'ALACARTE',\n  Method_Type: 'Premium',\n  Call_Execution_Time: 0 }","timestamp":"9:21:57 AM"}
{"level":"error","message":"Dhananjay Health Renewal Before save_log  true","timestamp":"9:21:57 AM"}
{"level":"error","message":"Plan_execute_loop 1158085 6 ARN-STYR6M91-CZXU-5HID-2JBR-A0TKDPUYKSRN 60890 PLATINUM W-250 60890 PLATINUM W-250","timestamp":"9:21:57 AM"}
{"level":"error","message":"Dhananjay Health Renewal After save_log  true","timestamp":"9:21:57 AM"}
{"level":"error","message":"Dhananjay Health Renewal docLog  { Service_Log_Id: '',\n  Service_Log_Unique_Id: 'ARN-OHUUWNCG-35S0-YPQR-H9GO-BH78TTHB2FMY',\n  Request_Id: 699288,\n  User_Data_Id: 431553,\n  Request_Unique_Id: 'SRN-SFIDKSNB-MLLW-0FSC-A2G5-40CHFT5QAEMN',\n  PB_CRN: 1158085,\n  Client_Id: 2,\n  LM_Custom_Request: \n   { Plan_Code: 60891,\n     Plan_Id: 60891,\n     Plan_Name: 'PLATINUM W-500',\n     aadhar: '',\n     appointee_age: 0,\n     appointee_birth_date: '2024-08-06',\n     appointee_first_name: '',\n     appointee_last_name: '',\n     appointee_middle_name: '',\n     appointee_name: '',\n     appointee_relation: '',\n     birth_date: '1992-01-01',\n     city_id: 677,\n     communication_address_1: '',\n     communication_address_2: '',\n     communication_address_3: '',\n     communication_city: '',\n     communication_city_code: '',\n     communication_district_code: '',\n     communication_locality_code: '',\n     communication_pincode: '',\n     communication_state: '',\n     communication_state_code: '',\n     company_name: '',\n     correlationCode: 'e576dba8-5944-417e-9ff9-74bdefe52452',\n     current_date: '2024-08-06',\n     current_time: '09:08:92',\n     dbmaster_pb_city_id: 677,\n     dbmaster_pb_city_name: 'MUMBAI',\n     dbmaster_pb_pincode: 400001,\n     dbmaster_pb_state_id: 21,\n     dbmaster_pb_state_name: 'MAHARASHTRA',\n     email: 'policybosstesting@gmail.com',\n     final_premium: '',\n     first_name: 'NO',\n     gender: '',\n     gst_no: '',\n     gst_state: '',\n     insured_age: 32,\n     insurer_id: '',\n     insurer_integration_agent_code: 'DL-4129/1363694',\n     insurer_integration_pdf_url: '',\n     insurer_integration_service_password: '',\n     insurer_integration_service_user: '',\n     insurer_vehicle_id: undefined,\n     is_posp: '',\n     is_reg_addr_comm_addr_same: '',\n     kyc_no: '',\n     kyc_ref_no: '',\n     last_name: 'NAME',\n     marital: '',\n     member_1_age: 23,\n     member_1_birth_date: '2001-08-06',\n     member_1_first_name: 'NO',\n     member_1_gender: 'M',\n     member_1_inc: 1,\n     member_1_last_name: 'NAME',\n     member_1_middle_name: '',\n     member_1_occupation: '',\n     member_1_passport: '',\n     member_1_ped: '',\n     member_1_relation: '',\n     member_1_salutation: '',\n     member_array_birth_date: '2024-08-06',\n     member_array_first_name: '',\n     member_array_gender: '',\n     member_array_last_name: '',\n     member_array_middle_name: '',\n     member_array_occupation: '',\n     member_array_passport: '',\n     member_array_ped: '',\n     member_array_relation: '',\n     member_array_salutation: '',\n     method_type: 'Premium',\n     middle_name: '',\n     mobile: '9999999999',\n     net_premium: '',\n     nominee_address: '',\n     nominee_age: 0,\n     nominee_birth_date: '2024-08-06',\n     nominee_city_name: '',\n     nominee_first_name: '',\n     nominee_last_name: '',\n     nominee_middle_name: '',\n     nominee_name: '',\n     nominee_pincode: '',\n     nominee_relation: '',\n     occupation: '',\n     pan: '',\n     permanent_address_1: '',\n     permanent_address_2: '',\n     permanent_address_3: '',\n     permanent_city: '',\n     permanent_city_code: '',\n     permanent_district_code: '',\n     permanent_locality_code: '',\n     permanent_pincode: '',\n     permanent_state: '',\n     permanent_state_code: '',\n     pg_reference_number_1: '',\n     pg_reference_number_2: '',\n     policy_end_date: '2024-08-10',\n     policy_number: '',\n     policy_start_date: '2024-08-07',\n     policy_tenure: '',\n     product_id: 4,\n     proposal_create_flag: '',\n     recon_reference_number: '',\n     salutation: '',\n     salutation_1: '',\n     tax: '',\n     travel_days: 4,\n     travel_insurance_si: '0',\n     travel_insurance_si_60887: '$50000',\n     travel_insurance_si_60888: '$100000',\n     travel_insurance_si_60890: '$250000',\n     travel_insurance_type: 'individual',\n     visiting_countries: '',\n     travel_insurance_si_60891: '$500000' },\n  Insurer_Request: '{\\r\\n    \"CorrelationId\": \"e576dba8-5944-417e-9ff9-74bdefe52452\",\\r\\n    \"PlanType\": \"SINGLE\",\\r\\n    \"TripType\": \"SINGLE\",\\r\\n    \"NoOfDays\": \"0\",\\r\\n    \"TripDuration\": \"0\",\\r\\n    \"PlanCode\": \"60891\",\\r\\n    \"NoOfDays\": 0,\\r\\n    \"TripDuration\": 0,\\r\\n    \"InsuredDetails\": [\\r\\n        {\\r\\n            \"InsuredDOB\": \"2001-08-06\"\\r\\n        }\\r\\n    ],\\r\\n    \"PolicyStartDate\": \"2024-08-07\",\\r\\n    \"PolicyEndDate\": \"2024-08-10\",\\r\\n    \"PolicyDuration\": \"3\",\\r\\n    \"VisaType\": \"NON_IMMIGRANT\",\\r\\n    \"PartyStateName\": \"MAHARASHTRA\"\\r\\n}',\n  Insurer_Response: '',\n  Insurer_Response_Core: '',\n  Premium_Breakup: null,\n  LM_Response: '',\n  Insurer_Transaction_Identifier: '',\n  Health_Renewal_Proposal_Request_Core: null,\n  Status: 'pending',\n  Error_Code: '',\n  Is_Active: 1,\n  Created_On: 2024-08-06T03:51:57.758Z,\n  Product_Id: 4,\n  Insurer_Id: 6,\n  Plan_Id: 60891,\n  Plan_Name: 'PLATINUM W-500',\n  Plan_Code: 60891,\n  Allow_Renew: undefined,\n  Addon_Mode: 'ALACARTE',\n  Method_Type: 'Premium',\n  Call_Execution_Time: 0 }","timestamp":"9:21:57 AM"}
{"level":"error","message":"Dhananjay Health Renewal Before save_log  true","timestamp":"9:21:57 AM"}
{"level":"error","message":"Plan_execute_loop 1158085 6 ARN-OHUUWNCG-35S0-YPQR-H9GO-BH78TTHB2FMY 60891 PLATINUM W-500 60891 PLATINUM W-500","timestamp":"9:21:57 AM"}
{"level":"error","message":"Dhananjay Health Renewal After save_log  true","timestamp":"9:21:57 AM"}
{"level":"error","message":"Dhananjay Health Renewal docLog  { Service_Log_Id: '',\n  Service_Log_Unique_Id: 'ARN-LOQJQIMC-YGBB-LUYH-BDUT-PBIZNZAS6WL0',\n  Request_Id: 699288,\n  User_Data_Id: 431553,\n  Request_Unique_Id: 'SRN-SFIDKSNB-MLLW-0FSC-A2G5-40CHFT5QAEMN',\n  PB_CRN: 1158085,\n  Client_Id: 2,\n  LM_Custom_Request: \n   { Plan_Code: 60892,\n     Plan_Id: 60892,\n     Plan_Name: 'GOLD W-50',\n     aadhar: '',\n     appointee_age: 0,\n     appointee_birth_date: '2024-08-06',\n     appointee_first_name: '',\n     appointee_last_name: '',\n     appointee_middle_name: '',\n     appointee_name: '',\n     appointee_relation: '',\n     birth_date: '1992-01-01',\n     city_id: 677,\n     communication_address_1: '',\n     communication_address_2: '',\n     communication_address_3: '',\n     communication_city: '',\n     communication_city_code: '',\n     communication_district_code: '',\n     communication_locality_code: '',\n     communication_pincode: '',\n     communication_state: '',\n     communication_state_code: '',\n     company_name: '',\n     correlationCode: 'e576dba8-5944-417e-9ff9-74bdefe52452',\n     current_date: '2024-08-06',\n     current_time: '09:08:92',\n     dbmaster_pb_city_id: 677,\n     dbmaster_pb_city_name: 'MUMBAI',\n     dbmaster_pb_pincode: 400001,\n     dbmaster_pb_state_id: 21,\n     dbmaster_pb_state_name: 'MAHARASHTRA',\n     email: 'policybosstesting@gmail.com',\n     final_premium: '',\n     first_name: 'NO',\n     gender: '',\n     gst_no: '',\n     gst_state: '',\n     insured_age: 32,\n     insurer_id: '',\n     insurer_integration_agent_code: 'DL-4129/1363694',\n     insurer_integration_pdf_url: '',\n     insurer_integration_service_password: '',\n     insurer_integration_service_user: '',\n     insurer_vehicle_id: undefined,\n     is_posp: '',\n     is_reg_addr_comm_addr_same: '',\n     kyc_no: '',\n     kyc_ref_no: '',\n     last_name: 'NAME',\n     marital: '',\n     member_1_age: 23,\n     member_1_birth_date: '2001-08-06',\n     member_1_first_name: 'NO',\n     member_1_gender: 'M',\n     member_1_inc: 1,\n     member_1_last_name: 'NAME',\n     member_1_middle_name: '',\n     member_1_occupation: '',\n     member_1_passport: '',\n     member_1_ped: '',\n     member_1_relation: '',\n     member_1_salutation: '',\n     member_array_birth_date: '2024-08-06',\n     member_array_first_name: '',\n     member_array_gender: '',\n     member_array_last_name: '',\n     member_array_middle_name: '',\n     member_array_occupation: '',\n     member_array_passport: '',\n     member_array_ped: '',\n     member_array_relation: '',\n     member_array_salutation: '',\n     method_type: 'Premium',\n     middle_name: '',\n     mobile: '9999999999',\n     net_premium: '',\n     nominee_address: '',\n     nominee_age: 0,\n     nominee_birth_date: '2024-08-06',\n     nominee_city_name: '',\n     nominee_first_name: '',\n     nominee_last_name: '',\n     nominee_middle_name: '',\n     nominee_name: '',\n     nominee_pincode: '',\n     nominee_relation: '',\n     occupation: '',\n     pan: '',\n     permanent_address_1: '',\n     permanent_address_2: '',\n     permanent_address_3: '',\n     permanent_city: '',\n     permanent_city_code: '',\n     permanent_district_code: '',\n     permanent_locality_code: '',\n     permanent_pincode: '',\n     permanent_state: '',\n     permanent_state_code: '',\n     pg_reference_number_1: '',\n     pg_reference_number_2: '',\n     policy_end_date: '2024-08-10',\n     policy_number: '',\n     policy_start_date: '2024-08-07',\n     policy_tenure: '',\n     product_id: 4,\n     proposal_create_flag: '',\n     recon_reference_number: '',\n     salutation: '',\n     salutation_1: '',\n     tax: '',\n     travel_days: 4,\n     travel_insurance_si: '0',\n     travel_insurance_si_60887: '$50000',\n     travel_insurance_si_60888: '$100000',\n     travel_insurance_si_60890: '$250000',\n     travel_insurance_si_60891: '$500000',\n     travel_insurance_type: 'individual',\n     visiting_countries: '',\n     travel_insurance_si_60892: '$50000' },\n  Insurer_Request: '{\\r\\n    \"CorrelationId\": \"e576dba8-5944-417e-9ff9-74bdefe52452\",\\r\\n    \"PlanType\": \"SINGLE\",\\r\\n    \"TripType\": \"SINGLE\",\\r\\n    \"NoOfDays\": \"0\",\\r\\n    \"TripDuration\": \"0\",\\r\\n    \"PlanCode\": \"60892\",\\r\\n    \"NoOfDays\": 0,\\r\\n    \"TripDuration\": 0,\\r\\n    \"InsuredDetails\": [\\r\\n        {\\r\\n            \"InsuredDOB\": \"2001-08-06\"\\r\\n        }\\r\\n    ],\\r\\n    \"PolicyStartDate\": \"2024-08-07\",\\r\\n    \"PolicyEndDate\": \"2024-08-10\",\\r\\n    \"PolicyDuration\": \"3\",\\r\\n    \"VisaType\": \"NON_IMMIGRANT\",\\r\\n    \"PartyStateName\": \"MAHARASHTRA\"\\r\\n}',\n  Insurer_Response: '',\n  Insurer_Response_Core: '',\n  Premium_Breakup: null,\n  LM_Response: '',\n  Insurer_Transaction_Identifier: '',\n  Health_Renewal_Proposal_Request_Core: null,\n  Status: 'pending',\n  Error_Code: '',\n  Is_Active: 1,\n  Created_On: 2024-08-06T03:51:57.819Z,\n  Product_Id: 4,\n  Insurer_Id: 6,\n  Plan_Id: 60892,\n  Plan_Name: 'GOLD W-50',\n  Plan_Code: 60892,\n  Allow_Renew: undefined,\n  Addon_Mode: 'ALACARTE',\n  Method_Type: 'Premium',\n  Call_Execution_Time: 0 }","timestamp":"9:21:57 AM"}
{"level":"error","message":"Dhananjay Health Renewal Before save_log  true","timestamp":"9:21:57 AM"}
{"level":"error","message":"Plan_execute_loop 1158085 6 ARN-LOQJQIMC-YGBB-LUYH-BDUT-PBIZNZAS6WL0 60892 GOLD W-50 60892 GOLD W-50","timestamp":"9:21:57 AM"}
{"level":"error","message":"Dhananjay Health Renewal After save_log  true","timestamp":"9:21:57 AM"}
{"level":"error","message":"Dhananjay Health Renewal docLog  { Service_Log_Id: '',\n  Service_Log_Unique_Id: 'ARN-TWZYHPXC-9FXY-Q5J5-4BKH-HNXLHPFUIU2G',\n  Request_Id: 699288,\n  User_Data_Id: 431553,\n  Request_Unique_Id: 'SRN-SFIDKSNB-MLLW-0FSC-A2G5-40CHFT5QAEMN',\n  PB_CRN: 1158085,\n  Client_Id: 2,\n  LM_Custom_Request: \n   { Plan_Code: 60894,\n     Plan_Id: 60894,\n     Plan_Name: 'GOLD W-250',\n     aadhar: '',\n     appointee_age: 0,\n     appointee_birth_date: '2024-08-06',\n     appointee_first_name: '',\n     appointee_last_name: '',\n     appointee_middle_name: '',\n     appointee_name: '',\n     appointee_relation: '',\n     birth_date: '1992-01-01',\n     city_id: 677,\n     communication_address_1: '',\n     communication_address_2: '',\n     communication_address_3: '',\n     communication_city: '',\n     communication_city_code: '',\n     communication_district_code: '',\n     communication_locality_code: '',\n     communication_pincode: '',\n     communication_state: '',\n     communication_state_code: '',\n     company_name: '',\n     correlationCode: 'e576dba8-5944-417e-9ff9-74bdefe52452',\n     current_date: '2024-08-06',\n     current_time: '09:08:92',\n     dbmaster_pb_city_id: 677,\n     dbmaster_pb_city_name: 'MUMBAI',\n     dbmaster_pb_pincode: 400001,\n     dbmaster_pb_state_id: 21,\n     dbmaster_pb_state_name: 'MAHARASHTRA',\n     email: 'policybosstesting@gmail.com',\n     final_premium: '',\n     first_name: 'NO',\n     gender: '',\n     gst_no: '',\n     gst_state: '',\n     insured_age: 32,\n     insurer_id: '',\n     insurer_integration_agent_code: 'DL-4129/1363694',\n     insurer_integration_pdf_url: '',\n     insurer_integration_service_password: '',\n     insurer_integration_service_user: '',\n     insurer_vehicle_id: undefined,\n     is_posp: '',\n     is_reg_addr_comm_addr_same: '',\n     kyc_no: '',\n     kyc_ref_no: '',\n     last_name: 'NAME',\n     marital: '',\n     member_1_age: 23,\n     member_1_birth_date: '2001-08-06',\n     member_1_first_name: 'NO',\n     member_1_gender: 'M',\n     member_1_inc: 1,\n     member_1_last_name: 'NAME',\n     member_1_middle_name: '',\n     member_1_occupation: '',\n     member_1_passport: '',\n     member_1_ped: '',\n     member_1_relation: '',\n     member_1_salutation: '',\n     member_array_birth_date: '2024-08-06',\n     member_array_first_name: '',\n     member_array_gender: '',\n     member_array_last_name: '',\n     member_array_middle_name: '',\n     member_array_occupation: '',\n     member_array_passport: '',\n     member_array_ped: '',\n     member_array_relation: '',\n     member_array_salutation: '',\n     method_type: 'Premium',\n     middle_name: '',\n     mobile: '9999999999',\n     net_premium: '',\n     nominee_address: '',\n     nominee_age: 0,\n     nominee_birth_date: '2024-08-06',\n     nominee_city_name: '',\n     nominee_first_name: '',\n     nominee_last_name: '',\n     nominee_middle_name: '',\n     nominee_name: '',\n     nominee_pincode: '',\n     nominee_relation: '',\n     occupation: '',\n     pan: '',\n     permanent_address_1: '',\n     permanent_address_2: '',\n     permanent_address_3: '',\n     permanent_city: '',\n     permanent_city_code: '',\n     permanent_district_code: '',\n     permanent_locality_code: '',\n     permanent_pincode: '',\n     permanent_state: '',\n     permanent_state_code: '',\n     pg_reference_number_1: '',\n     pg_reference_number_2: '',\n     policy_end_date: '2024-08-10',\n     policy_number: '',\n     policy_start_date: '2024-08-07',\n     policy_tenure: '',\n     product_id: 4,\n     proposal_create_flag: '',\n     recon_reference_number: '',\n     salutation: '',\n     salutation_1: '',\n     tax: '',\n     travel_days: 4,\n     travel_insurance_si: '0',\n     travel_insurance_si_60887: '$50000',\n     travel_insurance_si_60888: '$100000',\n     travel_insurance_si_60890: '$250000',\n     travel_insurance_si_60891: '$500000',\n     travel_insurance_si_60892: '$50000',\n     travel_insurance_type: 'individual',\n     visiting_countries: '',\n     travel_insurance_si_60894: '$250000' },\n  Insurer_Request: '{\\r\\n    \"CorrelationId\": \"e576dba8-5944-417e-9ff9-74bdefe52452\",\\r\\n    \"PlanType\": \"SINGLE\",\\r\\n    \"TripType\": \"SINGLE\",\\r\\n    \"NoOfDays\": \"0\",\\r\\n    \"TripDuration\": \"0\",\\r\\n    \"PlanCode\": \"60894\",\\r\\n    \"NoOfDays\": 0,\\r\\n    \"TripDuration\": 0,\\r\\n    \"InsuredDetails\": [\\r\\n        {\\r\\n            \"InsuredDOB\": \"2001-08-06\"\\r\\n        }\\r\\n    ],\\r\\n    \"PolicyStartDate\": \"2024-08-07\",\\r\\n    \"PolicyEndDate\": \"2024-08-10\",\\r\\n    \"PolicyDuration\": \"3\",\\r\\n    \"VisaType\": \"NON_IMMIGRANT\",\\r\\n    \"PartyStateName\": \"MAHARASHTRA\"\\r\\n}',\n  Insurer_Response: '',\n  Insurer_Response_Core: '',\n  Premium_Breakup: null,\n  LM_Response: '',\n  Insurer_Transaction_Identifier: '',\n  Health_Renewal_Proposal_Request_Core: null,\n  Status: 'pending',\n  Error_Code: '',\n  Is_Active: 1,\n  Created_On: 2024-08-06T03:51:57.887Z,\n  Product_Id: 4,\n  Insurer_Id: 6,\n  Plan_Id: 60894,\n  Plan_Name: 'GOLD W-250',\n  Plan_Code: 60894,\n  Allow_Renew: undefined,\n  Addon_Mode: 'ALACARTE',\n  Method_Type: 'Premium',\n  Call_Execution_Time: 0 }","timestamp":"9:21:57 AM"}
{"level":"error","message":"Dhananjay Health Renewal Before save_log  true","timestamp":"9:21:57 AM"}
{"level":"error","message":"Plan_execute_loop 1158085 6 ARN-TWZYHPXC-9FXY-Q5J5-4BKH-HNXLHPFUIU2G 60894 GOLD W-250 60894 GOLD W-250","timestamp":"9:21:57 AM"}
{"level":"error","message":"Dhananjay Health Renewal After save_log  true","timestamp":"9:21:57 AM"}
{"level":"error","message":"Dhananjay Health Renewal docLog  { Service_Log_Id: '',\n  Service_Log_Unique_Id: 'ARN-GFPOETEY-ZCHA-URER-PFIF-Z2CRORQZO3EJ',\n  Request_Id: 699288,\n  User_Data_Id: 431553,\n  Request_Unique_Id: 'SRN-SFIDKSNB-MLLW-0FSC-A2G5-40CHFT5QAEMN',\n  PB_CRN: 1158085,\n  Client_Id: 2,\n  LM_Custom_Request: \n   { Plan_Code: 60895,\n     Plan_Id: 60895,\n     Plan_Name: 'GOLD W-500',\n     aadhar: '',\n     appointee_age: 0,\n     appointee_birth_date: '2024-08-06',\n     appointee_first_name: '',\n     appointee_last_name: '',\n     appointee_middle_name: '',\n     appointee_name: '',\n     appointee_relation: '',\n     birth_date: '1992-01-01',\n     city_id: 677,\n     communication_address_1: '',\n     communication_address_2: '',\n     communication_address_3: '',\n     communication_city: '',\n     communication_city_code: '',\n     communication_district_code: '',\n     communication_locality_code: '',\n     communication_pincode: '',\n     communication_state: '',\n     communication_state_code: '',\n     company_name: '',\n     correlationCode: 'e576dba8-5944-417e-9ff9-74bdefe52452',\n     current_date: '2024-08-06',\n     current_time: '09:08:92',\n     dbmaster_pb_city_id: 677,\n     dbmaster_pb_city_name: 'MUMBAI',\n     dbmaster_pb_pincode: 400001,\n     dbmaster_pb_state_id: 21,\n     dbmaster_pb_state_name: 'MAHARASHTRA',\n     email: 'policybosstesting@gmail.com',\n     final_premium: '',\n     first_name: 'NO',\n     gender: '',\n     gst_no: '',\n     gst_state: '',\n     insured_age: 32,\n     insurer_id: '',\n     insurer_integration_agent_code: 'DL-4129/1363694',\n     insurer_integration_pdf_url: '',\n     insurer_integration_service_password: '',\n     insurer_integration_service_user: '',\n     insurer_vehicle_id: undefined,\n     is_posp: '',\n     is_reg_addr_comm_addr_same: '',\n     kyc_no: '',\n     kyc_ref_no: '',\n     last_name: 'NAME',\n     marital: '',\n     member_1_age: 23,\n     member_1_birth_date: '2001-08-06',\n     member_1_first_name: 'NO',\n     member_1_gender: 'M',\n     member_1_inc: 1,\n     member_1_last_name: 'NAME',\n     member_1_middle_name: '',\n     member_1_occupation: '',\n     member_1_passport: '',\n     member_1_ped: '',\n     member_1_relation: '',\n     member_1_salutation: '',\n     member_array_birth_date: '2024-08-06',\n     member_array_first_name: '',\n     member_array_gender: '',\n     member_array_last_name: '',\n     member_array_middle_name: '',\n     member_array_occupation: '',\n     member_array_passport: '',\n     member_array_ped: '',\n     member_array_relation: '',\n     member_array_salutation: '',\n     method_type: 'Premium',\n     middle_name: '',\n     mobile: '9999999999',\n     net_premium: '',\n     nominee_address: '',\n     nominee_age: 0,\n     nominee_birth_date: '2024-08-06',\n     nominee_city_name: '',\n     nominee_first_name: '',\n     nominee_last_name: '',\n     nominee_middle_name: '',\n     nominee_name: '',\n     nominee_pincode: '',\n     nominee_relation: '',\n     occupation: '',\n     pan: '',\n     permanent_address_1: '',\n     permanent_address_2: '',\n     permanent_address_3: '',\n     permanent_city: '',\n     permanent_city_code: '',\n     permanent_district_code: '',\n     permanent_locality_code: '',\n     permanent_pincode: '',\n     permanent_state: '',\n     permanent_state_code: '',\n     pg_reference_number_1: '',\n     pg_reference_number_2: '',\n     policy_end_date: '2024-08-10',\n     policy_number: '',\n     policy_start_date: '2024-08-07',\n     policy_tenure: '',\n     product_id: 4,\n     proposal_create_flag: '',\n     recon_reference_number: '',\n     salutation: '',\n     salutation_1: '',\n     tax: '',\n     travel_days: 4,\n     travel_insurance_si: '0',\n     travel_insurance_si_60887: '$50000',\n     travel_insurance_si_60888: '$100000',\n     travel_insurance_si_60890: '$250000',\n     travel_insurance_si_60891: '$500000',\n     travel_insurance_si_60892: '$50000',\n     travel_insurance_si_60894: '$250000',\n     travel_insurance_type: 'individual',\n     visiting_countries: '',\n     travel_insurance_si_60895: '$500000' },\n  Insurer_Request: '{\\r\\n    \"CorrelationId\": \"e576dba8-5944-417e-9ff9-74bdefe52452\",\\r\\n    \"PlanType\": \"SINGLE\",\\r\\n    \"TripType\": \"SINGLE\",\\r\\n    \"NoOfDays\": \"0\",\\r\\n    \"TripDuration\": \"0\",\\r\\n    \"PlanCode\": \"60895\",\\r\\n    \"NoOfDays\": 0,\\r\\n    \"TripDuration\": 0,\\r\\n    \"InsuredDetails\": [\\r\\n        {\\r\\n            \"InsuredDOB\": \"2001-08-06\"\\r\\n        }\\r\\n    ],\\r\\n    \"PolicyStartDate\": \"2024-08-07\",\\r\\n    \"PolicyEndDate\": \"2024-08-10\",\\r\\n    \"PolicyDuration\": \"3\",\\r\\n    \"VisaType\": \"NON_IMMIGRANT\",\\r\\n    \"PartyStateName\": \"MAHARASHTRA\"\\r\\n}',\n  Insurer_Response: '',\n  Insurer_Response_Core: '',\n  Premium_Breakup: null,\n  LM_Response: '',\n  Insurer_Transaction_Identifier: '',\n  Health_Renewal_Proposal_Request_Core: null,\n  Status: 'pending',\n  Error_Code: '',\n  Is_Active: 1,\n  Created_On: 2024-08-06T03:51:57.943Z,\n  Product_Id: 4,\n  Insurer_Id: 6,\n  Plan_Id: 60895,\n  Plan_Name: 'GOLD W-500',\n  Plan_Code: 60895,\n  Allow_Renew: undefined,\n  Addon_Mode: 'ALACARTE',\n  Method_Type: 'Premium',\n  Call_Execution_Time: 0 }","timestamp":"9:21:58 AM"}
{"level":"error","message":"Dhananjay Health Renewal Before save_log  true","timestamp":"9:21:58 AM"}
{"level":"error","message":"Plan_execute_loop 1158085 6 ARN-GFPOETEY-ZCHA-URER-PFIF-Z2CRORQZO3EJ 60895 GOLD W-500 60895 GOLD W-500","timestamp":"9:21:58 AM"}
{"level":"error","message":"Dhananjay Health Renewal After save_log  true","timestamp":"9:21:58 AM"}
{"level":"error","message":"Dhananjay Health Renewal docLog  { Service_Log_Id: '',\n  Service_Log_Unique_Id: 'ARN-AILOEDMO-TNWE-UT3D-L6EP-GY4M4P4KHXW2',\n  Request_Id: 699288,\n  User_Data_Id: 431553,\n  Request_Unique_Id: 'SRN-SFIDKSNB-MLLW-0FSC-A2G5-40CHFT5QAEMN',\n  PB_CRN: 1158085,\n  Client_Id: 2,\n  LM_Custom_Request: \n   { Plan_Code: 60896,\n     Plan_Id: 60896,\n     Plan_Name: 'ASIA 25',\n     aadhar: '',\n     appointee_age: 0,\n     appointee_birth_date: '2024-08-06',\n     appointee_first_name: '',\n     appointee_last_name: '',\n     appointee_middle_name: '',\n     appointee_name: '',\n     appointee_relation: '',\n     birth_date: '1992-01-01',\n     city_id: 677,\n     communication_address_1: '',\n     communication_address_2: '',\n     communication_address_3: '',\n     communication_city: '',\n     communication_city_code: '',\n     communication_district_code: '',\n     communication_locality_code: '',\n     communication_pincode: '',\n     communication_state: '',\n     communication_state_code: '',\n     company_name: '',\n     correlationCode: 'e576dba8-5944-417e-9ff9-74bdefe52452',\n     current_date: '2024-08-06',\n     current_time: '09:08:92',\n     dbmaster_pb_city_id: 677,\n     dbmaster_pb_city_name: 'MUMBAI',\n     dbmaster_pb_pincode: 400001,\n     dbmaster_pb_state_id: 21,\n     dbmaster_pb_state_name: 'MAHARASHTRA',\n     email: 'policybosstesting@gmail.com',\n     final_premium: '',\n     first_name: 'NO',\n     gender: '',\n     gst_no: '',\n     gst_state: '',\n     insured_age: 32,\n     insurer_id: '',\n     insurer_integration_agent_code: 'DL-4129/1363694',\n     insurer_integration_pdf_url: '',\n     insurer_integration_service_password: '',\n     insurer_integration_service_user: '',\n     insurer_vehicle_id: undefined,\n     is_posp: '',\n     is_reg_addr_comm_addr_same: '',\n     kyc_no: '',\n     kyc_ref_no: '',\n     last_name: 'NAME',\n     marital: '',\n     member_1_age: 23,\n     member_1_birth_date: '2001-08-06',\n     member_1_first_name: 'NO',\n     member_1_gender: 'M',\n     member_1_inc: 1,\n     member_1_last_name: 'NAME',\n     member_1_middle_name: '',\n     member_1_occupation: '',\n     member_1_passport: '',\n     member_1_ped: '',\n     member_1_relation: '',\n     member_1_salutation: '',\n     member_array_birth_date: '2024-08-06',\n     member_array_first_name: '',\n     member_array_gender: '',\n     member_array_last_name: '',\n     member_array_middle_name: '',\n     member_array_occupation: '',\n     member_array_passport: '',\n     member_array_ped: '',\n     member_array_relation: '',\n     member_array_salutation: '',\n     method_type: 'Premium',\n     middle_name: '',\n     mobile: '9999999999',\n     net_premium: '',\n     nominee_address: '',\n     nominee_age: 0,\n     nominee_birth_date: '2024-08-06',\n     nominee_city_name: '',\n     nominee_first_name: '',\n     nominee_last_name: '',\n     nominee_middle_name: '',\n     nominee_name: '',\n     nominee_pincode: '',\n     nominee_relation: '',\n     occupation: '',\n     pan: '',\n     permanent_address_1: '',\n     permanent_address_2: '',\n     permanent_address_3: '',\n     permanent_city: '',\n     permanent_city_code: '',\n     permanent_district_code: '',\n     permanent_locality_code: '',\n     permanent_pincode: '',\n     permanent_state: '',\n     permanent_state_code: '',\n     pg_reference_number_1: '',\n     pg_reference_number_2: '',\n     policy_end_date: '2024-08-10',\n     policy_number: '',\n     policy_start_date: '2024-08-07',\n     policy_tenure: '',\n     product_id: 4,\n     proposal_create_flag: '',\n     recon_reference_number: '',\n     salutation: '',\n     salutation_1: '',\n     tax: '',\n     travel_days: 4,\n     travel_insurance_si: '0',\n     travel_insurance_si_60887: '$50000',\n     travel_insurance_si_60888: '$100000',\n     travel_insurance_si_60890: '$250000',\n     travel_insurance_si_60891: '$500000',\n     travel_insurance_si_60892: '$50000',\n     travel_insurance_si_60894: '$250000',\n     travel_insurance_si_60895: '$500000',\n     travel_insurance_type: 'individual',\n     visiting_countries: '',\n     travel_insurance_si_60896: '$25000' },\n  Insurer_Request: '{\\r\\n    \"CorrelationId\": \"e576dba8-5944-417e-9ff9-74bdefe52452\",\\r\\n    \"PlanType\": \"SINGLE\",\\r\\n    \"TripType\": \"SINGLE\",\\r\\n    \"NoOfDays\": \"0\",\\r\\n    \"TripDuration\": \"0\",\\r\\n    \"PlanCode\": \"60896\",\\r\\n    \"NoOfDays\": 0,\\r\\n    \"TripDuration\": 0,\\r\\n    \"InsuredDetails\": [\\r\\n        {\\r\\n            \"InsuredDOB\": \"2001-08-06\"\\r\\n        }\\r\\n    ],\\r\\n    \"PolicyStartDate\": \"2024-08-07\",\\r\\n    \"PolicyEndDate\": \"2024-08-10\",\\r\\n    \"PolicyDuration\": \"3\",\\r\\n    \"VisaType\": \"NON_IMMIGRANT\",\\r\\n    \"PartyStateName\": \"MAHARASHTRA\"\\r\\n}',\n  Insurer_Response: '',\n  Insurer_Response_Core: '',\n  Premium_Breakup: null,\n  LM_Response: '',\n  Insurer_Transaction_Identifier: '',\n  Health_Renewal_Proposal_Request_Core: null,\n  Status: 'pending',\n  Error_Code: '',\n  Is_Active: 1,\n  Created_On: 2024-08-06T03:51:58.008Z,\n  Product_Id: 4,\n  Insurer_Id: 6,\n  Plan_Id: 60896,\n  Plan_Name: 'ASIA 25',\n  Plan_Code: 60896,\n  Allow_Renew: undefined,\n  Addon_Mode: 'ALACARTE',\n  Method_Type: 'Premium',\n  Call_Execution_Time: 0 }","timestamp":"9:21:58 AM"}
{"level":"error","message":"Dhananjay Health Renewal Before save_log  true","timestamp":"9:21:58 AM"}
{"level":"error","message":"Plan_execute_loop 1158085 6 ARN-AILOEDMO-TNWE-UT3D-L6EP-GY4M4P4KHXW2 60896 ASIA 25 60896 ASIA 25","timestamp":"9:21:58 AM"}
{"level":"error","message":"Dhananjay Health Renewal After save_log  true","timestamp":"9:21:58 AM"}
{"level":"error","message":"Dhananjay Health Renewal docLog  { Service_Log_Id: '',\n  Service_Log_Unique_Id: 'ARN-AGZMWAFQ-ZSW9-TVYT-TYDM-9MGRQRJHR5TT',\n  Request_Id: 699288,\n  User_Data_Id: 431553,\n  Request_Unique_Id: 'SRN-SFIDKSNB-MLLW-0FSC-A2G5-40CHFT5QAEMN',\n  PB_CRN: 1158085,\n  Client_Id: 2,\n  LM_Custom_Request: \n   { Plan_Code: 60899,\n     Plan_Id: 60899,\n     Plan_Name: 'PLATINUM X-250',\n     aadhar: '',\n     appointee_age: 0,\n     appointee_birth_date: '2024-08-06',\n     appointee_first_name: '',\n     appointee_last_name: '',\n     appointee_middle_name: '',\n     appointee_name: '',\n     appointee_relation: '',\n     birth_date: '1992-01-01',\n     city_id: 677,\n     communication_address_1: '',\n     communication_address_2: '',\n     communication_address_3: '',\n     communication_city: '',\n     communication_city_code: '',\n     communication_district_code: '',\n     communication_locality_code: '',\n     communication_pincode: '',\n     communication_state: '',\n     communication_state_code: '',\n     company_name: '',\n     correlationCode: 'e576dba8-5944-417e-9ff9-74bdefe52452',\n     current_date: '2024-08-06',\n     current_time: '09:08:92',\n     dbmaster_pb_city_id: 677,\n     dbmaster_pb_city_name: 'MUMBAI',\n     dbmaster_pb_pincode: 400001,\n     dbmaster_pb_state_id: 21,\n     dbmaster_pb_state_name: 'MAHARASHTRA',\n     email: 'policybosstesting@gmail.com',\n     final_premium: '',\n     first_name: 'NO',\n     gender: '',\n     gst_no: '',\n     gst_state: '',\n     insured_age: 32,\n     insurer_id: '',\n     insurer_integration_agent_code: 'DL-4129/1363694',\n     insurer_integration_pdf_url: '',\n     insurer_integration_service_password: '',\n     insurer_integration_service_user: '',\n     insurer_vehicle_id: undefined,\n     is_posp: '',\n     is_reg_addr_comm_addr_same: '',\n     kyc_no: '',\n     kyc_ref_no: '',\n     last_name: 'NAME',\n     marital: '',\n     member_1_age: 23,\n     member_1_birth_date: '2001-08-06',\n     member_1_first_name: 'NO',\n     member_1_gender: 'M',\n     member_1_inc: 1,\n     member_1_last_name: 'NAME',\n     member_1_middle_name: '',\n     member_1_occupation: '',\n     member_1_passport: '',\n     member_1_ped: '',\n     member_1_relation: '',\n     member_1_salutation: '',\n     member_array_birth_date: '2024-08-06',\n     member_array_first_name: '',\n     member_array_gender: '',\n     member_array_last_name: '',\n     member_array_middle_name: '',\n     member_array_occupation: '',\n     member_array_passport: '',\n     member_array_ped: '',\n     member_array_relation: '',\n     member_array_salutation: '',\n     method_type: 'Premium',\n     middle_name: '',\n     mobile: '9999999999',\n     net_premium: '',\n     nominee_address: '',\n     nominee_age: 0,\n     nominee_birth_date: '2024-08-06',\n     nominee_city_name: '',\n     nominee_first_name: '',\n     nominee_last_name: '',\n     nominee_middle_name: '',\n     nominee_name: '',\n     nominee_pincode: '',\n     nominee_relation: '',\n     occupation: '',\n     pan: '',\n     permanent_address_1: '',\n     permanent_address_2: '',\n     permanent_address_3: '',\n     permanent_city: '',\n     permanent_city_code: '',\n     permanent_district_code: '',\n     permanent_locality_code: '',\n     permanent_pincode: '',\n     permanent_state: '',\n     permanent_state_code: '',\n     pg_reference_number_1: '',\n     pg_reference_number_2: '',\n     policy_end_date: '2024-08-10',\n     policy_number: '',\n     policy_start_date: '2024-08-07',\n     policy_tenure: '',\n     product_id: 4,\n     proposal_create_flag: '',\n     recon_reference_number: '',\n     salutation: '',\n     salutation_1: '',\n     tax: '',\n     travel_days: 4,\n     travel_insurance_si: '0',\n     travel_insurance_si_60887: '$50000',\n     travel_insurance_si_60888: '$100000',\n     travel_insurance_si_60890: '$250000',\n     travel_insurance_si_60891: '$500000',\n     travel_insurance_si_60892: '$50000',\n     travel_insurance_si_60894: '$250000',\n     travel_insurance_si_60895: '$500000',\n     travel_insurance_si_60896: '$25000',\n     travel_insurance_type: 'individual',\n     visiting_countries: '',\n     travel_insurance_si_60899: '$250000' },\n  Insurer_Request: '{\\r\\n    \"CorrelationId\": \"e576dba8-5944-417e-9ff9-74bdefe52452\",\\r\\n    \"PlanType\": \"SINGLE\",\\r\\n    \"TripType\": \"SINGLE\",\\r\\n    \"NoOfDays\": \"0\",\\r\\n    \"TripDuration\": \"0\",\\r\\n    \"PlanCode\": \"60899\",\\r\\n    \"NoOfDays\": 0,\\r\\n    \"TripDuration\": 0,\\r\\n    \"InsuredDetails\": [\\r\\n        {\\r\\n            \"InsuredDOB\": \"2001-08-06\"\\r\\n        }\\r\\n    ],\\r\\n    \"PolicyStartDate\": \"2024-08-07\",\\r\\n    \"PolicyEndDate\": \"2024-08-10\",\\r\\n    \"PolicyDuration\": \"3\",\\r\\n    \"VisaType\": \"NON_IMMIGRANT\",\\r\\n    \"PartyStateName\": \"MAHARASHTRA\"\\r\\n}',\n  Insurer_Response: '',\n  Insurer_Response_Core: '',\n  Premium_Breakup: null,\n  LM_Response: '',\n  Insurer_Transaction_Identifier: '',\n  Health_Renewal_Proposal_Request_Core: null,\n  Status: 'pending',\n  Error_Code: '',\n  Is_Active: 1,\n  Created_On: 2024-08-06T03:51:58.070Z,\n  Product_Id: 4,\n  Insurer_Id: 6,\n  Plan_Id: 60899,\n  Plan_Name: 'PLATINUM X-250',\n  Plan_Code: 60899,\n  Allow_Renew: undefined,\n  Addon_Mode: 'ALACARTE',\n  Method_Type: 'Premium',\n  Call_Execution_Time: 0 }","timestamp":"9:21:58 AM"}
{"level":"error","message":"Dhananjay Health Renewal Before save_log  true","timestamp":"9:21:58 AM"}
{"level":"error","message":"Plan_execute_loop 1158085 6 ARN-AGZMWAFQ-ZSW9-TVYT-TYDM-9MGRQRJHR5TT 60899 PLATINUM X-250 60899 PLATINUM X-250","timestamp":"9:21:58 AM"}
{"level":"error","message":"Dhananjay Health Renewal After save_log  true","timestamp":"9:21:58 AM"}
{"level":"error","message":"Dhananjay Health Renewal docLog  { Service_Log_Id: '',\n  Service_Log_Unique_Id: 'ARN-LWLYVGPN-ENBX-UAIT-919X-5J0HALBAQJPQ',\n  Request_Id: 699288,\n  User_Data_Id: 431553,\n  Request_Unique_Id: 'SRN-SFIDKSNB-MLLW-0FSC-A2G5-40CHFT5QAEMN',\n  PB_CRN: 1158085,\n  Client_Id: 2,\n  LM_Custom_Request: \n   { Plan_Code: 60900,\n     Plan_Id: 60900,\n     Plan_Name: 'PLATINUM X-100',\n     aadhar: '',\n     appointee_age: 0,\n     appointee_birth_date: '2024-08-06',\n     appointee_first_name: '',\n     appointee_last_name: '',\n     appointee_middle_name: '',\n     appointee_name: '',\n     appointee_relation: '',\n     birth_date: '1992-01-01',\n     city_id: 677,\n     communication_address_1: '',\n     communication_address_2: '',\n     communication_address_3: '',\n     communication_city: '',\n     communication_city_code: '',\n     communication_district_code: '',\n     communication_locality_code: '',\n     communication_pincode: '',\n     communication_state: '',\n     communication_state_code: '',\n     company_name: '',\n     correlationCode: 'e576dba8-5944-417e-9ff9-74bdefe52452',\n     current_date: '2024-08-06',\n     current_time: '09:08:92',\n     dbmaster_pb_city_id: 677,\n     dbmaster_pb_city_name: 'MUMBAI',\n     dbmaster_pb_pincode: 400001,\n     dbmaster_pb_state_id: 21,\n     dbmaster_pb_state_name: 'MAHARASHTRA',\n     email: 'policybosstesting@gmail.com',\n     final_premium: '',\n     first_name: 'NO',\n     gender: '',\n     gst_no: '',\n     gst_state: '',\n     insured_age: 32,\n     insurer_id: '',\n     insurer_integration_agent_code: 'DL-4129/1363694',\n     insurer_integration_pdf_url: '',\n     insurer_integration_service_password: '',\n     insurer_integration_service_user: '',\n     insurer_vehicle_id: undefined,\n     is_posp: '',\n     is_reg_addr_comm_addr_same: '',\n     kyc_no: '',\n     kyc_ref_no: '',\n     last_name: 'NAME',\n     marital: '',\n     member_1_age: 23,\n     member_1_birth_date: '2001-08-06',\n     member_1_first_name: 'NO',\n     member_1_gender: 'M',\n     member_1_inc: 1,\n     member_1_last_name: 'NAME',\n     member_1_middle_name: '',\n     member_1_occupation: '',\n     member_1_passport: '',\n     member_1_ped: '',\n     member_1_relation: '',\n     member_1_salutation: '',\n     member_array_birth_date: '2024-08-06',\n     member_array_first_name: '',\n     member_array_gender: '',\n     member_array_last_name: '',\n     member_array_middle_name: '',\n     member_array_occupation: '',\n     member_array_passport: '',\n     member_array_ped: '',\n     member_array_relation: '',\n     member_array_salutation: '',\n     method_type: 'Premium',\n     middle_name: '',\n     mobile: '9999999999',\n     net_premium: '',\n     nominee_address: '',\n     nominee_age: 0,\n     nominee_birth_date: '2024-08-06',\n     nominee_city_name: '',\n     nominee_first_name: '',\n     nominee_last_name: '',\n     nominee_middle_name: '',\n     nominee_name: '',\n     nominee_pincode: '',\n     nominee_relation: '',\n     occupation: '',\n     pan: '',\n     permanent_address_1: '',\n     permanent_address_2: '',\n     permanent_address_3: '',\n     permanent_city: '',\n     permanent_city_code: '',\n     permanent_district_code: '',\n     permanent_locality_code: '',\n     permanent_pincode: '',\n     permanent_state: '',\n     permanent_state_code: '',\n     pg_reference_number_1: '',\n     pg_reference_number_2: '',\n     policy_end_date: '2024-08-10',\n     policy_number: '',\n     policy_start_date: '2024-08-07',\n     policy_tenure: '',\n     product_id: 4,\n     proposal_create_flag: '',\n     recon_reference_number: '',\n     salutation: '',\n     salutation_1: '',\n     tax: '',\n     travel_days: 4,\n     travel_insurance_si: '0',\n     travel_insurance_si_60887: '$50000',\n     travel_insurance_si_60888: '$100000',\n     travel_insurance_si_60890: '$250000',\n     travel_insurance_si_60891: '$500000',\n     travel_insurance_si_60892: '$50000',\n     travel_insurance_si_60894: '$250000',\n     travel_insurance_si_60895: '$500000',\n     travel_insurance_si_60896: '$25000',\n     travel_insurance_si_60899: '$250000',\n     travel_insurance_type: 'individual',\n     visiting_countries: '',\n     travel_insurance_si_60900: '$100000' },\n  Insurer_Request: '{\\r\\n    \"CorrelationId\": \"e576dba8-5944-417e-9ff9-74bdefe52452\",\\r\\n    \"PlanType\": \"SINGLE\",\\r\\n    \"TripType\": \"SINGLE\",\\r\\n    \"NoOfDays\": \"0\",\\r\\n    \"TripDuration\": \"0\",\\r\\n    \"PlanCode\": \"60900\",\\r\\n    \"NoOfDays\": 0,\\r\\n    \"TripDuration\": 0,\\r\\n    \"InsuredDetails\": [\\r\\n        {\\r\\n            \"InsuredDOB\": \"2001-08-06\"\\r\\n        }\\r\\n    ],\\r\\n    \"PolicyStartDate\": \"2024-08-07\",\\r\\n    \"PolicyEndDate\": \"2024-08-10\",\\r\\n    \"PolicyDuration\": \"3\",\\r\\n    \"VisaType\": \"NON_IMMIGRANT\",\\r\\n    \"PartyStateName\": \"MAHARASHTRA\"\\r\\n}',\n  Insurer_Response: '',\n  Insurer_Response_Core: '',\n  Premium_Breakup: null,\n  LM_Response: '',\n  Insurer_Transaction_Identifier: '',\n  Health_Renewal_Proposal_Request_Core: null,\n  Status: 'pending',\n  Error_Code: '',\n  Is_Active: 1,\n  Created_On: 2024-08-06T03:51:58.137Z,\n  Product_Id: 4,\n  Insurer_Id: 6,\n  Plan_Id: 60900,\n  Plan_Name: 'PLATINUM X-100',\n  Plan_Code: 60900,\n  Allow_Renew: undefined,\n  Addon_Mode: 'ALACARTE',\n  Method_Type: 'Premium',\n  Call_Execution_Time: 0 }","timestamp":"9:21:58 AM"}
{"level":"error","message":"Dhananjay Health Renewal Before save_log  true","timestamp":"9:21:58 AM"}
{"level":"error","message":"Plan_execute_loop 1158085 6 ARN-LWLYVGPN-ENBX-UAIT-919X-5J0HALBAQJPQ 60900 PLATINUM X-100 60900 PLATINUM X-100","timestamp":"9:21:58 AM"}
{"level":"error","message":"Dhananjay Health Renewal After save_log  true","timestamp":"9:21:58 AM"}
{"level":"error","message":"Dhananjay Health Renewal docLog  { Service_Log_Id: '',\n  Service_Log_Unique_Id: 'ARN-TGPLE4U3-9XHC-MAM5-EMAL-UF63AESB8095',\n  Request_Id: 699288,\n  User_Data_Id: 431553,\n  Request_Unique_Id: 'SRN-SFIDKSNB-MLLW-0FSC-A2G5-40CHFT5QAEMN',\n  PB_CRN: 1158085,\n  Client_Id: 2,\n  LM_Custom_Request: \n   { Plan_Code: 60901,\n     Plan_Id: 60901,\n     Plan_Name: 'GOLD X-50',\n     aadhar: '',\n     appointee_age: 0,\n     appointee_birth_date: '2024-08-06',\n     appointee_first_name: '',\n     appointee_last_name: '',\n     appointee_middle_name: '',\n     appointee_name: '',\n     appointee_relation: '',\n     birth_date: '1992-01-01',\n     city_id: 677,\n     communication_address_1: '',\n     communication_address_2: '',\n     communication_address_3: '',\n     communication_city: '',\n     communication_city_code: '',\n     communication_district_code: '',\n     communication_locality_code: '',\n     communication_pincode: '',\n     communication_state: '',\n     communication_state_code: '',\n     company_name: '',\n     correlationCode: 'e576dba8-5944-417e-9ff9-74bdefe52452',\n     current_date: '2024-08-06',\n     current_time: '09:08:92',\n     dbmaster_pb_city_id: 677,\n     dbmaster_pb_city_name: 'MUMBAI',\n     dbmaster_pb_pincode: 400001,\n     dbmaster_pb_state_id: 21,\n     dbmaster_pb_state_name: 'MAHARASHTRA',\n     email: 'policybosstesting@gmail.com',\n     final_premium: '',\n     first_name: 'NO',\n     gender: '',\n     gst_no: '',\n     gst_state: '',\n     insured_age: 32,\n     insurer_id: '',\n     insurer_integration_agent_code: 'DL-4129/1363694',\n     insurer_integration_pdf_url: '',\n     insurer_integration_service_password: '',\n     insurer_integration_service_user: '',\n     insurer_vehicle_id: undefined,\n     is_posp: '',\n     is_reg_addr_comm_addr_same: '',\n     kyc_no: '',\n     kyc_ref_no: '',\n     last_name: 'NAME',\n     marital: '',\n     member_1_age: 23,\n     member_1_birth_date: '2001-08-06',\n     member_1_first_name: 'NO',\n     member_1_gender: 'M',\n     member_1_inc: 1,\n     member_1_last_name: 'NAME',\n     member_1_middle_name: '',\n     member_1_occupation: '',\n     member_1_passport: '',\n     member_1_ped: '',\n     member_1_relation: '',\n     member_1_salutation: '',\n     member_array_birth_date: '2024-08-06',\n     member_array_first_name: '',\n     member_array_gender: '',\n     member_array_last_name: '',\n     member_array_middle_name: '',\n     member_array_occupation: '',\n     member_array_passport: '',\n     member_array_ped: '',\n     member_array_relation: '',\n     member_array_salutation: '',\n     method_type: 'Premium',\n     middle_name: '',\n     mobile: '9999999999',\n     net_premium: '',\n     nominee_address: '',\n     nominee_age: 0,\n     nominee_birth_date: '2024-08-06',\n     nominee_city_name: '',\n     nominee_first_name: '',\n     nominee_last_name: '',\n     nominee_middle_name: '',\n     nominee_name: '',\n     nominee_pincode: '',\n     nominee_relation: '',\n     occupation: '',\n     pan: '',\n     permanent_address_1: '',\n     permanent_address_2: '',\n     permanent_address_3: '',\n     permanent_city: '',\n     permanent_city_code: '',\n     permanent_district_code: '',\n     permanent_locality_code: '',\n     permanent_pincode: '',\n     permanent_state: '',\n     permanent_state_code: '',\n     pg_reference_number_1: '',\n     pg_reference_number_2: '',\n     policy_end_date: '2024-08-10',\n     policy_number: '',\n     policy_start_date: '2024-08-07',\n     policy_tenure: '',\n     product_id: 4,\n     proposal_create_flag: '',\n     recon_reference_number: '',\n     salutation: '',\n     salutation_1: '',\n     tax: '',\n     travel_days: 4,\n     travel_insurance_si: '0',\n     travel_insurance_si_60887: '$50000',\n     travel_insurance_si_60888: '$100000',\n     travel_insurance_si_60890: '$250000',\n     travel_insurance_si_60891: '$500000',\n     travel_insurance_si_60892: '$50000',\n     travel_insurance_si_60894: '$250000',\n     travel_insurance_si_60895: '$500000',\n     travel_insurance_si_60896: '$25000',\n     travel_insurance_si_60899: '$250000',\n     travel_insurance_si_60900: '$100000',\n     travel_insurance_type: 'individual',\n     visiting_countries: '',\n     travel_insurance_si_60901: '$50000' },\n  Insurer_Request: '{\\r\\n    \"CorrelationId\": \"e576dba8-5944-417e-9ff9-74bdefe52452\",\\r\\n    \"PlanType\": \"SINGLE\",\\r\\n    \"TripType\": \"SINGLE\",\\r\\n    \"NoOfDays\": \"0\",\\r\\n    \"TripDuration\": \"0\",\\r\\n    \"PlanCode\": \"60901\",\\r\\n    \"NoOfDays\": 0,\\r\\n    \"TripDuration\": 0,\\r\\n    \"InsuredDetails\": [\\r\\n        {\\r\\n            \"InsuredDOB\": \"2001-08-06\"\\r\\n        }\\r\\n    ],\\r\\n    \"PolicyStartDate\": \"2024-08-07\",\\r\\n    \"PolicyEndDate\": \"2024-08-10\",\\r\\n    \"PolicyDuration\": \"3\",\\r\\n    \"VisaType\": \"NON_IMMIGRANT\",\\r\\n    \"PartyStateName\": \"MAHARASHTRA\"\\r\\n}',\n  Insurer_Response: '',\n  Insurer_Response_Core: '',\n  Premium_Breakup: null,\n  LM_Response: '',\n  Insurer_Transaction_Identifier: '',\n  Health_Renewal_Proposal_Request_Core: null,\n  Status: 'pending',\n  Error_Code: '',\n  Is_Active: 1,\n  Created_On: 2024-08-06T03:51:58.195Z,\n  Product_Id: 4,\n  Insurer_Id: 6,\n  Plan_Id: 60901,\n  Plan_Name: 'GOLD X-50',\n  Plan_Code: 60901,\n  Allow_Renew: undefined,\n  Addon_Mode: 'ALACARTE',\n  Method_Type: 'Premium',\n  Call_Execution_Time: 0 }","timestamp":"9:21:58 AM"}
{"level":"error","message":"Dhananjay Health Renewal Before save_log  true","timestamp":"9:21:58 AM"}
{"level":"error","message":"Plan_execute_loop 1158085 6 ARN-TGPLE4U3-9XHC-MAM5-EMAL-UF63AESB8095 60901 GOLD X-50 60901 GOLD X-50","timestamp":"9:21:58 AM"}
{"level":"error","message":"Dhananjay Health Renewal After save_log  true","timestamp":"9:21:58 AM"}
{"level":"error","message":"Dhananjay Health Renewal docLog  { Service_Log_Id: '',\n  Service_Log_Unique_Id: 'ARN-S8VSSH4O-G4DO-0YRE-7PJM-HLKICLIZJFPR',\n  Request_Id: 699288,\n  User_Data_Id: 431553,\n  Request_Unique_Id: 'SRN-SFIDKSNB-MLLW-0FSC-A2G5-40CHFT5QAEMN',\n  PB_CRN: 1158085,\n  Client_Id: 2,\n  LM_Custom_Request: \n   { Plan_Code: 60902,\n     Plan_Id: 60902,\n     Plan_Name: 'GOLD X-100',\n     aadhar: '',\n     appointee_age: 0,\n     appointee_birth_date: '2024-08-06',\n     appointee_first_name: '',\n     appointee_last_name: '',\n     appointee_middle_name: '',\n     appointee_name: '',\n     appointee_relation: '',\n     birth_date: '1992-01-01',\n     city_id: 677,\n     communication_address_1: '',\n     communication_address_2: '',\n     communication_address_3: '',\n     communication_city: '',\n     communication_city_code: '',\n     communication_district_code: '',\n     communication_locality_code: '',\n     communication_pincode: '',\n     communication_state: '',\n     communication_state_code: '',\n     company_name: '',\n     correlationCode: 'e576dba8-5944-417e-9ff9-74bdefe52452',\n     current_date: '2024-08-06',\n     current_time: '09:08:92',\n     dbmaster_pb_city_id: 677,\n     dbmaster_pb_city_name: 'MUMBAI',\n     dbmaster_pb_pincode: 400001,\n     dbmaster_pb_state_id: 21,\n     dbmaster_pb_state_name: 'MAHARASHTRA',\n     email: 'policybosstesting@gmail.com',\n     final_premium: '',\n     first_name: 'NO',\n     gender: '',\n     gst_no: '',\n     gst_state: '',\n     insured_age: 32,\n     insurer_id: '',\n     insurer_integration_agent_code: 'DL-4129/1363694',\n     insurer_integration_pdf_url: '',\n     insurer_integration_service_password: '',\n     insurer_integration_service_user: '',\n     insurer_vehicle_id: undefined,\n     is_posp: '',\n     is_reg_addr_comm_addr_same: '',\n     kyc_no: '',\n     kyc_ref_no: '',\n     last_name: 'NAME',\n     marital: '',\n     member_1_age: 23,\n     member_1_birth_date: '2001-08-06',\n     member_1_first_name: 'NO',\n     member_1_gender: 'M',\n     member_1_inc: 1,\n     member_1_last_name: 'NAME',\n     member_1_middle_name: '',\n     member_1_occupation: '',\n     member_1_passport: '',\n     member_1_ped: '',\n     member_1_relation: '',\n     member_1_salutation: '',\n     member_array_birth_date: '2024-08-06',\n     member_array_first_name: '',\n     member_array_gender: '',\n     member_array_last_name: '',\n     member_array_middle_name: '',\n     member_array_occupation: '',\n     member_array_passport: '',\n     member_array_ped: '',\n     member_array_relation: '',\n     member_array_salutation: '',\n     method_type: 'Premium',\n     middle_name: '',\n     mobile: '9999999999',\n     net_premium: '',\n     nominee_address: '',\n     nominee_age: 0,\n     nominee_birth_date: '2024-08-06',\n     nominee_city_name: '',\n     nominee_first_name: '',\n     nominee_last_name: '',\n     nominee_middle_name: '',\n     nominee_name: '',\n     nominee_pincode: '',\n     nominee_relation: '',\n     occupation: '',\n     pan: '',\n     permanent_address_1: '',\n     permanent_address_2: '',\n     permanent_address_3: '',\n     permanent_city: '',\n     permanent_city_code: '',\n     permanent_district_code: '',\n     permanent_locality_code: '',\n     permanent_pincode: '',\n     permanent_state: '',\n     permanent_state_code: '',\n     pg_reference_number_1: '',\n     pg_reference_number_2: '',\n     policy_end_date: '2024-08-10',\n     policy_number: '',\n     policy_start_date: '2024-08-07',\n     policy_tenure: '',\n     product_id: 4,\n     proposal_create_flag: '',\n     recon_reference_number: '',\n     salutation: '',\n     salutation_1: '',\n     tax: '',\n     travel_days: 4,\n     travel_insurance_si: '0',\n     travel_insurance_si_60887: '$50000',\n     travel_insurance_si_60888: '$100000',\n     travel_insurance_si_60890: '$250000',\n     travel_insurance_si_60891: '$500000',\n     travel_insurance_si_60892: '$50000',\n     travel_insurance_si_60894: '$250000',\n     travel_insurance_si_60895: '$500000',\n     travel_insurance_si_60896: '$25000',\n     travel_insurance_si_60899: '$250000',\n     travel_insurance_si_60900: '$100000',\n     travel_insurance_si_60901: '$50000',\n     travel_insurance_type: 'individual',\n     visiting_countries: '',\n     travel_insurance_si_60902: '$100000' },\n  Insurer_Request: '{\\r\\n    \"CorrelationId\": \"e576dba8-5944-417e-9ff9-74bdefe52452\",\\r\\n    \"PlanType\": \"SINGLE\",\\r\\n    \"TripType\": \"SINGLE\",\\r\\n    \"NoOfDays\": \"0\",\\r\\n    \"TripDuration\": \"0\",\\r\\n    \"PlanCode\": \"60902\",\\r\\n    \"NoOfDays\": 0,\\r\\n    \"TripDuration\": 0,\\r\\n    \"InsuredDetails\": [\\r\\n        {\\r\\n            \"InsuredDOB\": \"2001-08-06\"\\r\\n        }\\r\\n    ],\\r\\n    \"PolicyStartDate\": \"2024-08-07\",\\r\\n    \"PolicyEndDate\": \"2024-08-10\",\\r\\n    \"PolicyDuration\": \"3\",\\r\\n    \"VisaType\": \"NON_IMMIGRANT\",\\r\\n    \"PartyStateName\": \"MAHARASHTRA\"\\r\\n}',\n  Insurer_Response: '',\n  Insurer_Response_Core: '',\n  Premium_Breakup: null,\n  LM_Response: '',\n  Insurer_Transaction_Identifier: '',\n  Health_Renewal_Proposal_Request_Core: null,\n  Status: 'pending',\n  Error_Code: '',\n  Is_Active: 1,\n  Created_On: 2024-08-06T03:51:58.258Z,\n  Product_Id: 4,\n  Insurer_Id: 6,\n  Plan_Id: 60902,\n  Plan_Name: 'GOLD X-100',\n  Plan_Code: 60902,\n  Allow_Renew: undefined,\n  Addon_Mode: 'ALACARTE',\n  Method_Type: 'Premium',\n  Call_Execution_Time: 0 }","timestamp":"9:21:58 AM"}
{"level":"error","message":"Dhananjay Health Renewal Before save_log  true","timestamp":"9:21:58 AM"}
{"level":"error","message":"Plan_execute_loop 1158085 6 ARN-S8VSSH4O-G4DO-0YRE-7PJM-HLKICLIZJFPR 60902 GOLD X-100 60902 GOLD X-100","timestamp":"9:21:58 AM"}
{"level":"error","message":"Dhananjay Health Renewal After save_log  true","timestamp":"9:21:58 AM"}
{"level":"error","message":"Dhananjay Health Renewal docLog  { Service_Log_Id: '',\n  Service_Log_Unique_Id: 'ARN-HW5JABWD-NRIG-SPCY-DGQO-AHA5E5EH2WH2',\n  Request_Id: 699288,\n  User_Data_Id: 431553,\n  Request_Unique_Id: 'SRN-SFIDKSNB-MLLW-0FSC-A2G5-40CHFT5QAEMN',\n  PB_CRN: 1158085,\n  Client_Id: 2,\n  LM_Custom_Request: \n   { Plan_Code: 60903,\n     Plan_Id: 60903,\n     Plan_Name: 'GOLD X-250',\n     aadhar: '',\n     appointee_age: 0,\n     appointee_birth_date: '2024-08-06',\n     appointee_first_name: '',\n     appointee_last_name: '',\n     appointee_middle_name: '',\n     appointee_name: '',\n     appointee_relation: '',\n     birth_date: '1992-01-01',\n     city_id: 677,\n     communication_address_1: '',\n     communication_address_2: '',\n     communication_address_3: '',\n     communication_city: '',\n     communication_city_code: '',\n     communication_district_code: '',\n     communication_locality_code: '',\n     communication_pincode: '',\n     communication_state: '',\n     communication_state_code: '',\n     company_name: '',\n     correlationCode: 'e576dba8-5944-417e-9ff9-74bdefe52452',\n     current_date: '2024-08-06',\n     current_time: '09:08:92',\n     dbmaster_pb_city_id: 677,\n     dbmaster_pb_city_name: 'MUMBAI',\n     dbmaster_pb_pincode: 400001,\n     dbmaster_pb_state_id: 21,\n     dbmaster_pb_state_name: 'MAHARASHTRA',\n     email: 'policybosstesting@gmail.com',\n     final_premium: '',\n     first_name: 'NO',\n     gender: '',\n     gst_no: '',\n     gst_state: '',\n     insured_age: 32,\n     insurer_id: '',\n     insurer_integration_agent_code: 'DL-4129/1363694',\n     insurer_integration_pdf_url: '',\n     insurer_integration_service_password: '',\n     insurer_integration_service_user: '',\n     insurer_vehicle_id: undefined,\n     is_posp: '',\n     is_reg_addr_comm_addr_same: '',\n     kyc_no: '',\n     kyc_ref_no: '',\n     last_name: 'NAME',\n     marital: '',\n     member_1_age: 23,\n     member_1_birth_date: '2001-08-06',\n     member_1_first_name: 'NO',\n     member_1_gender: 'M',\n     member_1_inc: 1,\n     member_1_last_name: 'NAME',\n     member_1_middle_name: '',\n     member_1_occupation: '',\n     member_1_passport: '',\n     member_1_ped: '',\n     member_1_relation: '',\n     member_1_salutation: '',\n     member_array_birth_date: '2024-08-06',\n     member_array_first_name: '',\n     member_array_gender: '',\n     member_array_last_name: '',\n     member_array_middle_name: '',\n     member_array_occupation: '',\n     member_array_passport: '',\n     member_array_ped: '',\n     member_array_relation: '',\n     member_array_salutation: '',\n     method_type: 'Premium',\n     middle_name: '',\n     mobile: '9999999999',\n     net_premium: '',\n     nominee_address: '',\n     nominee_age: 0,\n     nominee_birth_date: '2024-08-06',\n     nominee_city_name: '',\n     nominee_first_name: '',\n     nominee_last_name: '',\n     nominee_middle_name: '',\n     nominee_name: '',\n     nominee_pincode: '',\n     nominee_relation: '',\n     occupation: '',\n     pan: '',\n     permanent_address_1: '',\n     permanent_address_2: '',\n     permanent_address_3: '',\n     permanent_city: '',\n     permanent_city_code: '',\n     permanent_district_code: '',\n     permanent_locality_code: '',\n     permanent_pincode: '',\n     permanent_state: '',\n     permanent_state_code: '',\n     pg_reference_number_1: '',\n     pg_reference_number_2: '',\n     policy_end_date: '2024-08-10',\n     policy_number: '',\n     policy_start_date: '2024-08-07',\n     policy_tenure: '',\n     product_id: 4,\n     proposal_create_flag: '',\n     recon_reference_number: '',\n     salutation: '',\n     salutation_1: '',\n     tax: '',\n     travel_days: 4,\n     travel_insurance_si: '0',\n     travel_insurance_si_60887: '$50000',\n     travel_insurance_si_60888: '$100000',\n     travel_insurance_si_60890: '$250000',\n     travel_insurance_si_60891: '$500000',\n     travel_insurance_si_60892: '$50000',\n     travel_insurance_si_60894: '$250000',\n     travel_insurance_si_60895: '$500000',\n     travel_insurance_si_60896: '$25000',\n     travel_insurance_si_60899: '$250000',\n     travel_insurance_si_60900: '$100000',\n     travel_insurance_si_60901: '$50000',\n     travel_insurance_si_60902: '$100000',\n     travel_insurance_type: 'individual',\n     visiting_countries: '',\n     travel_insurance_si_60903: '$250000' },\n  Insurer_Request: '{\\r\\n    \"CorrelationId\": \"e576dba8-5944-417e-9ff9-74bdefe52452\",\\r\\n    \"PlanType\": \"SINGLE\",\\r\\n    \"TripType\": \"SINGLE\",\\r\\n    \"NoOfDays\": \"0\",\\r\\n    \"TripDuration\": \"0\",\\r\\n    \"PlanCode\": \"60903\",\\r\\n    \"NoOfDays\": 0,\\r\\n    \"TripDuration\": 0,\\r\\n    \"InsuredDetails\": [\\r\\n        {\\r\\n            \"InsuredDOB\": \"2001-08-06\"\\r\\n        }\\r\\n    ],\\r\\n    \"PolicyStartDate\": \"2024-08-07\",\\r\\n    \"PolicyEndDate\": \"2024-08-10\",\\r\\n    \"PolicyDuration\": \"3\",\\r\\n    \"VisaType\": \"NON_IMMIGRANT\",\\r\\n    \"PartyStateName\": \"MAHARASHTRA\"\\r\\n}',\n  Insurer_Response: '',\n  Insurer_Response_Core: '',\n  Premium_Breakup: null,\n  LM_Response: '',\n  Insurer_Transaction_Identifier: '',\n  Health_Renewal_Proposal_Request_Core: null,\n  Status: 'pending',\n  Error_Code: '',\n  Is_Active: 1,\n  Created_On: 2024-08-06T03:51:58.321Z,\n  Product_Id: 4,\n  Insurer_Id: 6,\n  Plan_Id: 60903,\n  Plan_Name: 'GOLD X-250',\n  Plan_Code: 60903,\n  Allow_Renew: undefined,\n  Addon_Mode: 'ALACARTE',\n  Method_Type: 'Premium',\n  Call_Execution_Time: 0 }","timestamp":"9:21:58 AM"}
{"level":"error","message":"Dhananjay Health Renewal Before save_log  true","timestamp":"9:21:58 AM"}
{"level":"error","message":"Plan_execute_loop 1158085 6 ARN-HW5JABWD-NRIG-SPCY-DGQO-AHA5E5EH2WH2 60903 GOLD X-250 60903 GOLD X-250","timestamp":"9:21:58 AM"}
{"level":"error","message":"Dhananjay Health Renewal After save_log  true","timestamp":"9:21:58 AM"}
{"level":"error","message":"Dhananjay Health Renewal docLog  { Service_Log_Id: '',\n  Service_Log_Unique_Id: 'ARN-BBJW1VKK-Z7KT-4RJE-SEML-VWASXGX8BNSE',\n  Request_Id: 699288,\n  User_Data_Id: 431553,\n  Request_Unique_Id: 'SRN-SFIDKSNB-MLLW-0FSC-A2G5-40CHFT5QAEMN',\n  PB_CRN: 1158085,\n  Client_Id: 2,\n  LM_Custom_Request: \n   { Plan_Code: 60904,\n     Plan_Id: 60904,\n     Plan_Name: 'GOLD X-500',\n     aadhar: '',\n     appointee_age: 0,\n     appointee_birth_date: '2024-08-06',\n     appointee_first_name: '',\n     appointee_last_name: '',\n     appointee_middle_name: '',\n     appointee_name: '',\n     appointee_relation: '',\n     birth_date: '1992-01-01',\n     city_id: 677,\n     communication_address_1: '',\n     communication_address_2: '',\n     communication_address_3: '',\n     communication_city: '',\n     communication_city_code: '',\n     communication_district_code: '',\n     communication_locality_code: '',\n     communication_pincode: '',\n     communication_state: '',\n     communication_state_code: '',\n     company_name: '',\n     correlationCode: 'e576dba8-5944-417e-9ff9-74bdefe52452',\n     current_date: '2024-08-06',\n     current_time: '09:08:92',\n     dbmaster_pb_city_id: 677,\n     dbmaster_pb_city_name: 'MUMBAI',\n     dbmaster_pb_pincode: 400001,\n     dbmaster_pb_state_id: 21,\n     dbmaster_pb_state_name: 'MAHARASHTRA',\n     email: 'policybosstesting@gmail.com',\n     final_premium: '',\n     first_name: 'NO',\n     gender: '',\n     gst_no: '',\n     gst_state: '',\n     insured_age: 32,\n     insurer_id: '',\n     insurer_integration_agent_code: 'DL-4129/1363694',\n     insurer_integration_pdf_url: '',\n     insurer_integration_service_password: '',\n     insurer_integration_service_user: '',\n     insurer_vehicle_id: undefined,\n     is_posp: '',\n     is_reg_addr_comm_addr_same: '',\n     kyc_no: '',\n     kyc_ref_no: '',\n     last_name: 'NAME',\n     marital: '',\n     member_1_age: 23,\n     member_1_birth_date: '2001-08-06',\n     member_1_first_name: 'NO',\n     member_1_gender: 'M',\n     member_1_inc: 1,\n     member_1_last_name: 'NAME',\n     member_1_middle_name: '',\n     member_1_occupation: '',\n     member_1_passport: '',\n     member_1_ped: '',\n     member_1_relation: '',\n     member_1_salutation: '',\n     member_array_birth_date: '2024-08-06',\n     member_array_first_name: '',\n     member_array_gender: '',\n     member_array_last_name: '',\n     member_array_middle_name: '',\n     member_array_occupation: '',\n     member_array_passport: '',\n     member_array_ped: '',\n     member_array_relation: '',\n     member_array_salutation: '',\n     method_type: 'Premium',\n     middle_name: '',\n     mobile: '9999999999',\n     net_premium: '',\n     nominee_address: '',\n     nominee_age: 0,\n     nominee_birth_date: '2024-08-06',\n     nominee_city_name: '',\n     nominee_first_name: '',\n     nominee_last_name: '',\n     nominee_middle_name: '',\n     nominee_name: '',\n     nominee_pincode: '',\n     nominee_relation: '',\n     occupation: '',\n     pan: '',\n     permanent_address_1: '',\n     permanent_address_2: '',\n     permanent_address_3: '',\n     permanent_city: '',\n     permanent_city_code: '',\n     permanent_district_code: '',\n     permanent_locality_code: '',\n     permanent_pincode: '',\n     permanent_state: '',\n     permanent_state_code: '',\n     pg_reference_number_1: '',\n     pg_reference_number_2: '',\n     policy_end_date: '2024-08-10',\n     policy_number: '',\n     policy_start_date: '2024-08-07',\n     policy_tenure: '',\n     product_id: 4,\n     proposal_create_flag: '',\n     recon_reference_number: '',\n     salutation: '',\n     salutation_1: '',\n     tax: '',\n     travel_days: 4,\n     travel_insurance_si: '0',\n     travel_insurance_si_60887: '$50000',\n     travel_insurance_si_60888: '$100000',\n     travel_insurance_si_60890: '$250000',\n     travel_insurance_si_60891: '$500000',\n     travel_insurance_si_60892: '$50000',\n     travel_insurance_si_60894: '$250000',\n     travel_insurance_si_60895: '$500000',\n     travel_insurance_si_60896: '$25000',\n     travel_insurance_si_60899: '$250000',\n     travel_insurance_si_60900: '$100000',\n     travel_insurance_si_60901: '$50000',\n     travel_insurance_si_60902: '$100000',\n     travel_insurance_si_60903: '$250000',\n     travel_insurance_type: 'individual',\n     visiting_countries: '',\n     travel_insurance_si_60904: '$500000' },\n  Insurer_Request: '{\\r\\n    \"CorrelationId\": \"e576dba8-5944-417e-9ff9-74bdefe52452\",\\r\\n    \"PlanType\": \"SINGLE\",\\r\\n    \"TripType\": \"SINGLE\",\\r\\n    \"NoOfDays\": \"0\",\\r\\n    \"TripDuration\": \"0\",\\r\\n    \"PlanCode\": \"60904\",\\r\\n    \"NoOfDays\": 0,\\r\\n    \"TripDuration\": 0,\\r\\n    \"InsuredDetails\": [\\r\\n        {\\r\\n            \"InsuredDOB\": \"2001-08-06\"\\r\\n        }\\r\\n    ],\\r\\n    \"PolicyStartDate\": \"2024-08-07\",\\r\\n    \"PolicyEndDate\": \"2024-08-10\",\\r\\n    \"PolicyDuration\": \"3\",\\r\\n    \"VisaType\": \"NON_IMMIGRANT\",\\r\\n    \"PartyStateName\": \"MAHARASHTRA\"\\r\\n}',\n  Insurer_Response: '',\n  Insurer_Response_Core: '',\n  Premium_Breakup: null,\n  LM_Response: '',\n  Insurer_Transaction_Identifier: '',\n  Health_Renewal_Proposal_Request_Core: null,\n  Status: 'pending',\n  Error_Code: '',\n  Is_Active: 1,\n  Created_On: 2024-08-06T03:51:58.383Z,\n  Product_Id: 4,\n  Insurer_Id: 6,\n  Plan_Id: 60904,\n  Plan_Name: 'GOLD X-500',\n  Plan_Code: 60904,\n  Allow_Renew: undefined,\n  Addon_Mode: 'ALACARTE',\n  Method_Type: 'Premium',\n  Call_Execution_Time: 0 }","timestamp":"9:21:58 AM"}
{"level":"error","message":"Dhananjay Health Renewal Before save_log  true","timestamp":"9:21:58 AM"}
{"level":"error","message":"Plan_execute_loop 1158085 6 ARN-BBJW1VKK-Z7KT-4RJE-SEML-VWASXGX8BNSE 60904 GOLD X-500 60904 GOLD X-500","timestamp":"9:21:58 AM"}
{"level":"error","message":"Dhananjay Health Renewal After save_log  true","timestamp":"9:21:58 AM"}
{"level":"error","message":"Dhananjay Health Renewal docLog  { Service_Log_Id: '',\n  Service_Log_Unique_Id: 'ARN-OUZDJWQ8-6IAA-P0X7-T2AQ-OJFVQQTKR5FN',\n  Request_Id: 699288,\n  User_Data_Id: 431553,\n  Request_Unique_Id: 'SRN-SFIDKSNB-MLLW-0FSC-A2G5-40CHFT5QAEMN',\n  PB_CRN: 1158085,\n  Client_Id: 2,\n  LM_Custom_Request: \n   { Plan_Code: 61422,\n     Plan_Id: 61422,\n     Plan_Name: 'Gold W 50 RE',\n     aadhar: '',\n     appointee_age: 0,\n     appointee_birth_date: '2024-08-06',\n     appointee_first_name: '',\n     appointee_last_name: '',\n     appointee_middle_name: '',\n     appointee_name: '',\n     appointee_relation: '',\n     birth_date: '1992-01-01',\n     city_id: 677,\n     communication_address_1: '',\n     communication_address_2: '',\n     communication_address_3: '',\n     communication_city: '',\n     communication_city_code: '',\n     communication_district_code: '',\n     communication_locality_code: '',\n     communication_pincode: '',\n     communication_state: '',\n     communication_state_code: '',\n     company_name: '',\n     correlationCode: 'e576dba8-5944-417e-9ff9-74bdefe52452',\n     current_date: '2024-08-06',\n     current_time: '09:08:92',\n     dbmaster_pb_city_id: 677,\n     dbmaster_pb_city_name: 'MUMBAI',\n     dbmaster_pb_pincode: 400001,\n     dbmaster_pb_state_id: 21,\n     dbmaster_pb_state_name: 'MAHARASHTRA',\n     email: 'policybosstesting@gmail.com',\n     final_premium: '',\n     first_name: 'NO',\n     gender: '',\n     gst_no: '',\n     gst_state: '',\n     insured_age: 32,\n     insurer_id: '',\n     insurer_integration_agent_code: 'DL-4129/1363694',\n     insurer_integration_pdf_url: '',\n     insurer_integration_service_password: '',\n     insurer_integration_service_user: '',\n     insurer_vehicle_id: undefined,\n     is_posp: '',\n     is_reg_addr_comm_addr_same: '',\n     kyc_no: '',\n     kyc_ref_no: '',\n     last_name: 'NAME',\n     marital: '',\n     member_1_age: 23,\n     member_1_birth_date: '2001-08-06',\n     member_1_first_name: 'NO',\n     member_1_gender: 'M',\n     member_1_inc: 1,\n     member_1_last_name: 'NAME',\n     member_1_middle_name: '',\n     member_1_occupation: '',\n     member_1_passport: '',\n     member_1_ped: '',\n     member_1_relation: '',\n     member_1_salutation: '',\n     member_array_birth_date: '2024-08-06',\n     member_array_first_name: '',\n     member_array_gender: '',\n     member_array_last_name: '',\n     member_array_middle_name: '',\n     member_array_occupation: '',\n     member_array_passport: '',\n     member_array_ped: '',\n     member_array_relation: '',\n     member_array_salutation: '',\n     method_type: 'Premium',\n     middle_name: '',\n     mobile: '9999999999',\n     net_premium: '',\n     nominee_address: '',\n     nominee_age: 0,\n     nominee_birth_date: '2024-08-06',\n     nominee_city_name: '',\n     nominee_first_name: '',\n     nominee_last_name: '',\n     nominee_middle_name: '',\n     nominee_name: '',\n     nominee_pincode: '',\n     nominee_relation: '',\n     occupation: '',\n     pan: '',\n     permanent_address_1: '',\n     permanent_address_2: '',\n     permanent_address_3: '',\n     permanent_city: '',\n     permanent_city_code: '',\n     permanent_district_code: '',\n     permanent_locality_code: '',\n     permanent_pincode: '',\n     permanent_state: '',\n     permanent_state_code: '',\n     pg_reference_number_1: '',\n     pg_reference_number_2: '',\n     policy_end_date: '2024-08-10',\n     policy_number: '',\n     policy_start_date: '2024-08-07',\n     policy_tenure: '',\n     product_id: 4,\n     proposal_create_flag: '',\n     recon_reference_number: '',\n     salutation: '',\n     salutation_1: '',\n     tax: '',\n     travel_days: 4,\n     travel_insurance_si: '0',\n     travel_insurance_si_60887: '$50000',\n     travel_insurance_si_60888: '$100000',\n     travel_insurance_si_60890: '$250000',\n     travel_insurance_si_60891: '$500000',\n     travel_insurance_si_60892: '$50000',\n     travel_insurance_si_60894: '$250000',\n     travel_insurance_si_60895: '$500000',\n     travel_insurance_si_60896: '$25000',\n     travel_insurance_si_60899: '$250000',\n     travel_insurance_si_60900: '$100000',\n     travel_insurance_si_60901: '$50000',\n     travel_insurance_si_60902: '$100000',\n     travel_insurance_si_60903: '$250000',\n     travel_insurance_si_60904: '$500000',\n     travel_insurance_type: 'individual',\n     visiting_countries: '',\n     travel_insurance_si_61422: '$50000' },\n  Insurer_Request: '{\\r\\n    \"CorrelationId\": \"e576dba8-5944-417e-9ff9-74bdefe52452\",\\r\\n    \"PlanType\": \"SINGLE\",\\r\\n    \"TripType\": \"SINGLE\",\\r\\n    \"NoOfDays\": \"0\",\\r\\n    \"TripDuration\": \"0\",\\r\\n    \"PlanCode\": \"61422\",\\r\\n    \"NoOfDays\": 0,\\r\\n    \"TripDuration\": 0,\\r\\n    \"InsuredDetails\": [\\r\\n        {\\r\\n            \"InsuredDOB\": \"2001-08-06\"\\r\\n        }\\r\\n    ],\\r\\n    \"PolicyStartDate\": \"2024-08-07\",\\r\\n    \"PolicyEndDate\": \"2024-08-10\",\\r\\n    \"PolicyDuration\": \"3\",\\r\\n    \"VisaType\": \"NON_IMMIGRANT\",\\r\\n    \"PartyStateName\": \"MAHARASHTRA\"\\r\\n}',\n  Insurer_Response: '',\n  Insurer_Response_Core: '',\n  Premium_Breakup: null,\n  LM_Response: '',\n  Insurer_Transaction_Identifier: '',\n  Health_Renewal_Proposal_Request_Core: null,\n  Status: 'pending',\n  Error_Code: '',\n  Is_Active: 1,\n  Created_On: 2024-08-06T03:51:58.445Z,\n  Product_Id: 4,\n  Insurer_Id: 6,\n  Plan_Id: 61422,\n  Plan_Name: 'Gold W 50 RE',\n  Plan_Code: 61422,\n  Allow_Renew: undefined,\n  Addon_Mode: 'ALACARTE',\n  Method_Type: 'Premium',\n  Call_Execution_Time: 0 }","timestamp":"9:21:58 AM"}
{"level":"error","message":"Dhananjay Health Renewal Before save_log  true","timestamp":"9:21:58 AM"}
{"level":"error","message":"Plan_execute_loop 1158085 6 ARN-OUZDJWQ8-6IAA-P0X7-T2AQ-OJFVQQTKR5FN 61422 Gold W 50 RE 61422 Gold W 50 RE","timestamp":"9:21:58 AM"}
{"level":"error","message":"Dhananjay Health Renewal After save_log  true","timestamp":"9:21:58 AM"}
{"level":"error","message":"Dhananjay Health Renewal docLog  { Service_Log_Id: '',\n  Service_Log_Unique_Id: 'ARN-ZMTRNRPC-HVTR-YU0T-8EHY-4GSVJ4EWCC8K',\n  Request_Id: 699288,\n  User_Data_Id: 431553,\n  Request_Unique_Id: 'SRN-SFIDKSNB-MLLW-0FSC-A2G5-40CHFT5QAEMN',\n  PB_CRN: 1158085,\n  Client_Id: 2,\n  LM_Custom_Request: \n   { Plan_Code: 61423,\n     Plan_Id: 61423,\n     Plan_Name: 'Gold W 100 RE',\n     aadhar: '',\n     appointee_age: 0,\n     appointee_birth_date: '2024-08-06',\n     appointee_first_name: '',\n     appointee_last_name: '',\n     appointee_middle_name: '',\n     appointee_name: '',\n     appointee_relation: '',\n     birth_date: '1992-01-01',\n     city_id: 677,\n     communication_address_1: '',\n     communication_address_2: '',\n     communication_address_3: '',\n     communication_city: '',\n     communication_city_code: '',\n     communication_district_code: '',\n     communication_locality_code: '',\n     communication_pincode: '',\n     communication_state: '',\n     communication_state_code: '',\n     company_name: '',\n     correlationCode: 'e576dba8-5944-417e-9ff9-74bdefe52452',\n     current_date: '2024-08-06',\n     current_time: '09:08:92',\n     dbmaster_pb_city_id: 677,\n     dbmaster_pb_city_name: 'MUMBAI',\n     dbmaster_pb_pincode: 400001,\n     dbmaster_pb_state_id: 21,\n     dbmaster_pb_state_name: 'MAHARASHTRA',\n     email: 'policybosstesting@gmail.com',\n     final_premium: '',\n     first_name: 'NO',\n     gender: '',\n     gst_no: '',\n     gst_state: '',\n     insured_age: 32,\n     insurer_id: '',\n     insurer_integration_agent_code: 'DL-4129/1363694',\n     insurer_integration_pdf_url: '',\n     insurer_integration_service_password: '',\n     insurer_integration_service_user: '',\n     insurer_vehicle_id: undefined,\n     is_posp: '',\n     is_reg_addr_comm_addr_same: '',\n     kyc_no: '',\n     kyc_ref_no: '',\n     last_name: 'NAME',\n     marital: '',\n     member_1_age: 23,\n     member_1_birth_date: '2001-08-06',\n     member_1_first_name: 'NO',\n     member_1_gender: 'M',\n     member_1_inc: 1,\n     member_1_last_name: 'NAME',\n     member_1_middle_name: '',\n     member_1_occupation: '',\n     member_1_passport: '',\n     member_1_ped: '',\n     member_1_relation: '',\n     member_1_salutation: '',\n     member_array_birth_date: '2024-08-06',\n     member_array_first_name: '',\n     member_array_gender: '',\n     member_array_last_name: '',\n     member_array_middle_name: '',\n     member_array_occupation: '',\n     member_array_passport: '',\n     member_array_ped: '',\n     member_array_relation: '',\n     member_array_salutation: '',\n     method_type: 'Premium',\n     middle_name: '',\n     mobile: '9999999999',\n     net_premium: '',\n     nominee_address: '',\n     nominee_age: 0,\n     nominee_birth_date: '2024-08-06',\n     nominee_city_name: '',\n     nominee_first_name: '',\n     nominee_last_name: '',\n     nominee_middle_name: '',\n     nominee_name: '',\n     nominee_pincode: '',\n     nominee_relation: '',\n     occupation: '',\n     pan: '',\n     permanent_address_1: '',\n     permanent_address_2: '',\n     permanent_address_3: '',\n     permanent_city: '',\n     permanent_city_code: '',\n     permanent_district_code: '',\n     permanent_locality_code: '',\n     permanent_pincode: '',\n     permanent_state: '',\n     permanent_state_code: '',\n     pg_reference_number_1: '',\n     pg_reference_number_2: '',\n     policy_end_date: '2024-08-10',\n     policy_number: '',\n     policy_start_date: '2024-08-07',\n     policy_tenure: '',\n     product_id: 4,\n     proposal_create_flag: '',\n     recon_reference_number: '',\n     salutation: '',\n     salutation_1: '',\n     tax: '',\n     travel_days: 4,\n     travel_insurance_si: '0',\n     travel_insurance_si_60887: '$50000',\n     travel_insurance_si_60888: '$100000',\n     travel_insurance_si_60890: '$250000',\n     travel_insurance_si_60891: '$500000',\n     travel_insurance_si_60892: '$50000',\n     travel_insurance_si_60894: '$250000',\n     travel_insurance_si_60895: '$500000',\n     travel_insurance_si_60896: '$25000',\n     travel_insurance_si_60899: '$250000',\n     travel_insurance_si_60900: '$100000',\n     travel_insurance_si_60901: '$50000',\n     travel_insurance_si_60902: '$100000',\n     travel_insurance_si_60903: '$250000',\n     travel_insurance_si_60904: '$500000',\n     travel_insurance_si_61422: '$50000',\n     travel_insurance_type: 'individual',\n     visiting_countries: '',\n     travel_insurance_si_61423: '$100000' },\n  Insurer_Request: '{\\r\\n    \"CorrelationId\": \"e576dba8-5944-417e-9ff9-74bdefe52452\",\\r\\n    \"PlanType\": \"SINGLE\",\\r\\n    \"TripType\": \"SINGLE\",\\r\\n    \"NoOfDays\": \"0\",\\r\\n    \"TripDuration\": \"0\",\\r\\n    \"PlanCode\": \"61423\",\\r\\n    \"NoOfDays\": 0,\\r\\n    \"TripDuration\": 0,\\r\\n    \"InsuredDetails\": [\\r\\n        {\\r\\n            \"InsuredDOB\": \"2001-08-06\"\\r\\n        }\\r\\n    ],\\r\\n    \"PolicyStartDate\": \"2024-08-07\",\\r\\n    \"PolicyEndDate\": \"2024-08-10\",\\r\\n    \"PolicyDuration\": \"3\",\\r\\n    \"VisaType\": \"NON_IMMIGRANT\",\\r\\n    \"PartyStateName\": \"MAHARASHTRA\"\\r\\n}',\n  Insurer_Response: '',\n  Insurer_Response_Core: '',\n  Premium_Breakup: null,\n  LM_Response: '',\n  Insurer_Transaction_Identifier: '',\n  Health_Renewal_Proposal_Request_Core: null,\n  Status: 'pending',\n  Error_Code: '',\n  Is_Active: 1,\n  Created_On: 2024-08-06T03:51:58.511Z,\n  Product_Id: 4,\n  Insurer_Id: 6,\n  Plan_Id: 61423,\n  Plan_Name: 'Gold W 100 RE',\n  Plan_Code: 61423,\n  Allow_Renew: undefined,\n  Addon_Mode: 'ALACARTE',\n  Method_Type: 'Premium',\n  Call_Execution_Time: 0 }","timestamp":"9:21:58 AM"}
{"level":"error","message":"Dhananjay Health Renewal Before save_log  true","timestamp":"9:21:58 AM"}
{"level":"error","message":"Plan_execute_loop 1158085 6 ARN-ZMTRNRPC-HVTR-YU0T-8EHY-4GSVJ4EWCC8K 61423 Gold W 100 RE 61423 Gold W 100 RE","timestamp":"9:21:58 AM"}
{"level":"error","message":"Dhananjay Health Renewal After save_log  true","timestamp":"9:21:58 AM"}
{"level":"error","message":"Dhananjay Health Renewal docLog  { Service_Log_Id: '',\n  Service_Log_Unique_Id: 'ARN-U8Q67WON-ZKBB-WLJF-7HLY-IZJWHSFJAKX8',\n  Request_Id: 699288,\n  User_Data_Id: 431553,\n  Request_Unique_Id: 'SRN-SFIDKSNB-MLLW-0FSC-A2G5-40CHFT5QAEMN',\n  PB_CRN: 1158085,\n  Client_Id: 2,\n  LM_Custom_Request: \n   { Plan_Code: 61425,\n     Plan_Id: 61425,\n     Plan_Name: 'Gold W 500 RE',\n     aadhar: '',\n     appointee_age: 0,\n     appointee_birth_date: '2024-08-06',\n     appointee_first_name: '',\n     appointee_last_name: '',\n     appointee_middle_name: '',\n     appointee_name: '',\n     appointee_relation: '',\n     birth_date: '1992-01-01',\n     city_id: 677,\n     communication_address_1: '',\n     communication_address_2: '',\n     communication_address_3: '',\n     communication_city: '',\n     communication_city_code: '',\n     communication_district_code: '',\n     communication_locality_code: '',\n     communication_pincode: '',\n     communication_state: '',\n     communication_state_code: '',\n     company_name: '',\n     correlationCode: 'e576dba8-5944-417e-9ff9-74bdefe52452',\n     current_date: '2024-08-06',\n     current_time: '09:08:92',\n     dbmaster_pb_city_id: 677,\n     dbmaster_pb_city_name: 'MUMBAI',\n     dbmaster_pb_pincode: 400001,\n     dbmaster_pb_state_id: 21,\n     dbmaster_pb_state_name: 'MAHARASHTRA',\n     email: 'policybosstesting@gmail.com',\n     final_premium: '',\n     first_name: 'NO',\n     gender: '',\n     gst_no: '',\n     gst_state: '',\n     insured_age: 32,\n     insurer_id: '',\n     insurer_integration_agent_code: 'DL-4129/1363694',\n     insurer_integration_pdf_url: '',\n     insurer_integration_service_password: '',\n     insurer_integration_service_user: '',\n     insurer_vehicle_id: undefined,\n     is_posp: '',\n     is_reg_addr_comm_addr_same: '',\n     kyc_no: '',\n     kyc_ref_no: '',\n     last_name: 'NAME',\n     marital: '',\n     member_1_age: 23,\n     member_1_birth_date: '2001-08-06',\n     member_1_first_name: 'NO',\n     member_1_gender: 'M',\n     member_1_inc: 1,\n     member_1_last_name: 'NAME',\n     member_1_middle_name: '',\n     member_1_occupation: '',\n     member_1_passport: '',\n     member_1_ped: '',\n     member_1_relation: '',\n     member_1_salutation: '',\n     member_array_birth_date: '2024-08-06',\n     member_array_first_name: '',\n     member_array_gender: '',\n     member_array_last_name: '',\n     member_array_middle_name: '',\n     member_array_occupation: '',\n     member_array_passport: '',\n     member_array_ped: '',\n     member_array_relation: '',\n     member_array_salutation: '',\n     method_type: 'Premium',\n     middle_name: '',\n     mobile: '9999999999',\n     net_premium: '',\n     nominee_address: '',\n     nominee_age: 0,\n     nominee_birth_date: '2024-08-06',\n     nominee_city_name: '',\n     nominee_first_name: '',\n     nominee_last_name: '',\n     nominee_middle_name: '',\n     nominee_name: '',\n     nominee_pincode: '',\n     nominee_relation: '',\n     occupation: '',\n     pan: '',\n     permanent_address_1: '',\n     permanent_address_2: '',\n     permanent_address_3: '',\n     permanent_city: '',\n     permanent_city_code: '',\n     permanent_district_code: '',\n     permanent_locality_code: '',\n     permanent_pincode: '',\n     permanent_state: '',\n     permanent_state_code: '',\n     pg_reference_number_1: '',\n     pg_reference_number_2: '',\n     policy_end_date: '2024-08-10',\n     policy_number: '',\n     policy_start_date: '2024-08-07',\n     policy_tenure: '',\n     product_id: 4,\n     proposal_create_flag: '',\n     recon_reference_number: '',\n     salutation: '',\n     salutation_1: '',\n     tax: '',\n     travel_days: 4,\n     travel_insurance_si: '0',\n     travel_insurance_si_60887: '$50000',\n     travel_insurance_si_60888: '$100000',\n     travel_insurance_si_60890: '$250000',\n     travel_insurance_si_60891: '$500000',\n     travel_insurance_si_60892: '$50000',\n     travel_insurance_si_60894: '$250000',\n     travel_insurance_si_60895: '$500000',\n     travel_insurance_si_60896: '$25000',\n     travel_insurance_si_60899: '$250000',\n     travel_insurance_si_60900: '$100000',\n     travel_insurance_si_60901: '$50000',\n     travel_insurance_si_60902: '$100000',\n     travel_insurance_si_60903: '$250000',\n     travel_insurance_si_60904: '$500000',\n     travel_insurance_si_61422: '$50000',\n     travel_insurance_si_61423: '$100000',\n     travel_insurance_type: 'individual',\n     visiting_countries: '',\n     travel_insurance_si_61425: '$500000' },\n  Insurer_Request: '{\\r\\n    \"CorrelationId\": \"e576dba8-5944-417e-9ff9-74bdefe52452\",\\r\\n    \"PlanType\": \"SINGLE\",\\r\\n    \"TripType\": \"SINGLE\",\\r\\n    \"NoOfDays\": \"0\",\\r\\n    \"TripDuration\": \"0\",\\r\\n    \"PlanCode\": \"61425\",\\r\\n    \"NoOfDays\": 0,\\r\\n    \"TripDuration\": 0,\\r\\n    \"InsuredDetails\": [\\r\\n        {\\r\\n            \"InsuredDOB\": \"2001-08-06\"\\r\\n        }\\r\\n    ],\\r\\n    \"PolicyStartDate\": \"2024-08-07\",\\r\\n    \"PolicyEndDate\": \"2024-08-10\",\\r\\n    \"PolicyDuration\": \"3\",\\r\\n    \"VisaType\": \"NON_IMMIGRANT\",\\r\\n    \"PartyStateName\": \"MAHARASHTRA\"\\r\\n}',\n  Insurer_Response: '',\n  Insurer_Response_Core: '',\n  Premium_Breakup: null,\n  LM_Response: '',\n  Insurer_Transaction_Identifier: '',\n  Health_Renewal_Proposal_Request_Core: null,\n  Status: 'pending',\n  Error_Code: '',\n  Is_Active: 1,\n  Created_On: 2024-08-06T03:51:58.570Z,\n  Product_Id: 4,\n  Insurer_Id: 6,\n  Plan_Id: 61425,\n  Plan_Name: 'Gold W 500 RE',\n  Plan_Code: 61425,\n  Allow_Renew: undefined,\n  Addon_Mode: 'ALACARTE',\n  Method_Type: 'Premium',\n  Call_Execution_Time: 0 }","timestamp":"9:21:58 AM"}
{"level":"error","message":"Dhananjay Health Renewal Before save_log  true","timestamp":"9:21:58 AM"}
{"level":"error","message":"Plan_execute_loop 1158085 6 ARN-U8Q67WON-ZKBB-WLJF-7HLY-IZJWHSFJAKX8 61425 Gold W 500 RE 61425 Gold W 500 RE","timestamp":"9:21:58 AM"}
{"level":"error","message":"Dhananjay Health Renewal After save_log  true","timestamp":"9:21:58 AM"}
{"level":"error","message":"Dhananjay Health Renewal docLog  { Service_Log_Id: '',\n  Service_Log_Unique_Id: 'ARN-Z4OL9JSB-1IF0-WAXS-IW32-SN0EAXPCHGFS',\n  Request_Id: 699288,\n  User_Data_Id: 431553,\n  Request_Unique_Id: 'SRN-SFIDKSNB-MLLW-0FSC-A2G5-40CHFT5QAEMN',\n  PB_CRN: 1158085,\n  Client_Id: 2,\n  LM_Custom_Request: \n   { Plan_Code: 61520,\n     Plan_Id: 61520,\n     Plan_Name: 'GOLD W 250',\n     aadhar: '',\n     appointee_age: 0,\n     appointee_birth_date: '2024-08-06',\n     appointee_first_name: '',\n     appointee_last_name: '',\n     appointee_middle_name: '',\n     appointee_name: '',\n     appointee_relation: '',\n     birth_date: '1992-01-01',\n     city_id: 677,\n     communication_address_1: '',\n     communication_address_2: '',\n     communication_address_3: '',\n     communication_city: '',\n     communication_city_code: '',\n     communication_district_code: '',\n     communication_locality_code: '',\n     communication_pincode: '',\n     communication_state: '',\n     communication_state_code: '',\n     company_name: '',\n     correlationCode: 'e576dba8-5944-417e-9ff9-74bdefe52452',\n     current_date: '2024-08-06',\n     current_time: '09:08:92',\n     dbmaster_pb_city_id: 677,\n     dbmaster_pb_city_name: 'MUMBAI',\n     dbmaster_pb_pincode: 400001,\n     dbmaster_pb_state_id: 21,\n     dbmaster_pb_state_name: 'MAHARASHTRA',\n     email: 'policybosstesting@gmail.com',\n     final_premium: '',\n     first_name: 'NO',\n     gender: '',\n     gst_no: '',\n     gst_state: '',\n     insured_age: 32,\n     insurer_id: '',\n     insurer_integration_agent_code: 'DL-4129/1363694',\n     insurer_integration_pdf_url: '',\n     insurer_integration_service_password: '',\n     insurer_integration_service_user: '',\n     insurer_vehicle_id: undefined,\n     is_posp: '',\n     is_reg_addr_comm_addr_same: '',\n     kyc_no: '',\n     kyc_ref_no: '',\n     last_name: 'NAME',\n     marital: '',\n     member_1_age: 23,\n     member_1_birth_date: '2001-08-06',\n     member_1_first_name: 'NO',\n     member_1_gender: 'M',\n     member_1_inc: 1,\n     member_1_last_name: 'NAME',\n     member_1_middle_name: '',\n     member_1_occupation: '',\n     member_1_passport: '',\n     member_1_ped: '',\n     member_1_relation: '',\n     member_1_salutation: '',\n     member_array_birth_date: '2024-08-06',\n     member_array_first_name: '',\n     member_array_gender: '',\n     member_array_last_name: '',\n     member_array_middle_name: '',\n     member_array_occupation: '',\n     member_array_passport: '',\n     member_array_ped: '',\n     member_array_relation: '',\n     member_array_salutation: '',\n     method_type: 'Premium',\n     middle_name: '',\n     mobile: '9999999999',\n     net_premium: '',\n     nominee_address: '',\n     nominee_age: 0,\n     nominee_birth_date: '2024-08-06',\n     nominee_city_name: '',\n     nominee_first_name: '',\n     nominee_last_name: '',\n     nominee_middle_name: '',\n     nominee_name: '',\n     nominee_pincode: '',\n     nominee_relation: '',\n     occupation: '',\n     pan: '',\n     permanent_address_1: '',\n     permanent_address_2: '',\n     permanent_address_3: '',\n     permanent_city: '',\n     permanent_city_code: '',\n     permanent_district_code: '',\n     permanent_locality_code: '',\n     permanent_pincode: '',\n     permanent_state: '',\n     permanent_state_code: '',\n     pg_reference_number_1: '',\n     pg_reference_number_2: '',\n     policy_end_date: '2024-08-10',\n     policy_number: '',\n     policy_start_date: '2024-08-07',\n     policy_tenure: '',\n     product_id: 4,\n     proposal_create_flag: '',\n     recon_reference_number: '',\n     salutation: '',\n     salutation_1: '',\n     tax: '',\n     travel_days: 4,\n     travel_insurance_si: '0',\n     travel_insurance_si_60887: '$50000',\n     travel_insurance_si_60888: '$100000',\n     travel_insurance_si_60890: '$250000',\n     travel_insurance_si_60891: '$500000',\n     travel_insurance_si_60892: '$50000',\n     travel_insurance_si_60894: '$250000',\n     travel_insurance_si_60895: '$500000',\n     travel_insurance_si_60896: '$25000',\n     travel_insurance_si_60899: '$250000',\n     travel_insurance_si_60900: '$100000',\n     travel_insurance_si_60901: '$50000',\n     travel_insurance_si_60902: '$100000',\n     travel_insurance_si_60903: '$250000',\n     travel_insurance_si_60904: '$500000',\n     travel_insurance_si_61422: '$50000',\n     travel_insurance_si_61423: '$100000',\n     travel_insurance_si_61425: '$500000',\n     travel_insurance_type: 'individual',\n     visiting_countries: '',\n     travel_insurance_si_61520: '$250000' },\n  Insurer_Request: '{\\r\\n    \"CorrelationId\": \"e576dba8-5944-417e-9ff9-74bdefe52452\",\\r\\n    \"PlanType\": \"SINGLE\",\\r\\n    \"TripType\": \"SINGLE\",\\r\\n    \"NoOfDays\": \"0\",\\r\\n    \"TripDuration\": \"0\",\\r\\n    \"PlanCode\": \"61520\",\\r\\n    \"NoOfDays\": 0,\\r\\n    \"TripDuration\": 0,\\r\\n    \"InsuredDetails\": [\\r\\n        {\\r\\n            \"InsuredDOB\": \"2001-08-06\"\\r\\n        }\\r\\n    ],\\r\\n    \"PolicyStartDate\": \"2024-08-07\",\\r\\n    \"PolicyEndDate\": \"2024-08-10\",\\r\\n    \"PolicyDuration\": \"3\",\\r\\n    \"VisaType\": \"NON_IMMIGRANT\",\\r\\n    \"PartyStateName\": \"MAHARASHTRA\"\\r\\n}',\n  Insurer_Response: '',\n  Insurer_Response_Core: '',\n  Premium_Breakup: null,\n  LM_Response: '',\n  Insurer_Transaction_Identifier: '',\n  Health_Renewal_Proposal_Request_Core: null,\n  Status: 'pending',\n  Error_Code: '',\n  Is_Active: 1,\n  Created_On: 2024-08-06T03:51:58.632Z,\n  Product_Id: 4,\n  Insurer_Id: 6,\n  Plan_Id: 61520,\n  Plan_Name: 'GOLD W 250',\n  Plan_Code: 61520,\n  Allow_Renew: undefined,\n  Addon_Mode: 'ALACARTE',\n  Method_Type: 'Premium',\n  Call_Execution_Time: 0 }","timestamp":"9:21:58 AM"}
{"level":"error","message":"Dhananjay Health Renewal Before save_log  true","timestamp":"9:21:58 AM"}
{"level":"error","message":"Plan_execute_loop 1158085 6 ARN-Z4OL9JSB-1IF0-WAXS-IW32-SN0EAXPCHGFS 61520 GOLD W 250 61520 GOLD W 250","timestamp":"9:21:58 AM"}
{"level":"error","message":"Dhananjay Health Renewal After save_log  true","timestamp":"9:21:58 AM"}
{"level":"error","message":"Dhananjay Health Renewal docLog  { Service_Log_Id: '',\n  Service_Log_Unique_Id: 'ARN-7QRJWIGM-XOUG-IOGJ-81KZ-V9TWV0DUSX7I',\n  Request_Id: 699288,\n  User_Data_Id: 431553,\n  Request_Unique_Id: 'SRN-SFIDKSNB-MLLW-0FSC-A2G5-40CHFT5QAEMN',\n  PB_CRN: 1158085,\n  Client_Id: 2,\n  LM_Custom_Request: \n   { Plan_Code: 61521,\n     Plan_Id: 61521,\n     Plan_Name: 'GOLD W 50',\n     aadhar: '',\n     appointee_age: 0,\n     appointee_birth_date: '2024-08-06',\n     appointee_first_name: '',\n     appointee_last_name: '',\n     appointee_middle_name: '',\n     appointee_name: '',\n     appointee_relation: '',\n     birth_date: '1992-01-01',\n     city_id: 677,\n     communication_address_1: '',\n     communication_address_2: '',\n     communication_address_3: '',\n     communication_city: '',\n     communication_city_code: '',\n     communication_district_code: '',\n     communication_locality_code: '',\n     communication_pincode: '',\n     communication_state: '',\n     communication_state_code: '',\n     company_name: '',\n     correlationCode: 'e576dba8-5944-417e-9ff9-74bdefe52452',\n     current_date: '2024-08-06',\n     current_time: '09:08:92',\n     dbmaster_pb_city_id: 677,\n     dbmaster_pb_city_name: 'MUMBAI',\n     dbmaster_pb_pincode: 400001,\n     dbmaster_pb_state_id: 21,\n     dbmaster_pb_state_name: 'MAHARASHTRA',\n     email: 'policybosstesting@gmail.com',\n     final_premium: '',\n     first_name: 'NO',\n     gender: '',\n     gst_no: '',\n     gst_state: '',\n     insured_age: 32,\n     insurer_id: '',\n     insurer_integration_agent_code: 'DL-4129/1363694',\n     insurer_integration_pdf_url: '',\n     insurer_integration_service_password: '',\n     insurer_integration_service_user: '',\n     insurer_vehicle_id: undefined,\n     is_posp: '',\n     is_reg_addr_comm_addr_same: '',\n     kyc_no: '',\n     kyc_ref_no: '',\n     last_name: 'NAME',\n     marital: '',\n     member_1_age: 23,\n     member_1_birth_date: '2001-08-06',\n     member_1_first_name: 'NO',\n     member_1_gender: 'M',\n     member_1_inc: 1,\n     member_1_last_name: 'NAME',\n     member_1_middle_name: '',\n     member_1_occupation: '',\n     member_1_passport: '',\n     member_1_ped: '',\n     member_1_relation: '',\n     member_1_salutation: '',\n     member_array_birth_date: '2024-08-06',\n     member_array_first_name: '',\n     member_array_gender: '',\n     member_array_last_name: '',\n     member_array_middle_name: '',\n     member_array_occupation: '',\n     member_array_passport: '',\n     member_array_ped: '',\n     member_array_relation: '',\n     member_array_salutation: '',\n     method_type: 'Premium',\n     middle_name: '',\n     mobile: '9999999999',\n     net_premium: '',\n     nominee_address: '',\n     nominee_age: 0,\n     nominee_birth_date: '2024-08-06',\n     nominee_city_name: '',\n     nominee_first_name: '',\n     nominee_last_name: '',\n     nominee_middle_name: '',\n     nominee_name: '',\n     nominee_pincode: '',\n     nominee_relation: '',\n     occupation: '',\n     pan: '',\n     permanent_address_1: '',\n     permanent_address_2: '',\n     permanent_address_3: '',\n     permanent_city: '',\n     permanent_city_code: '',\n     permanent_district_code: '',\n     permanent_locality_code: '',\n     permanent_pincode: '',\n     permanent_state: '',\n     permanent_state_code: '',\n     pg_reference_number_1: '',\n     pg_reference_number_2: '',\n     policy_end_date: '2024-08-10',\n     policy_number: '',\n     policy_start_date: '2024-08-07',\n     policy_tenure: '',\n     product_id: 4,\n     proposal_create_flag: '',\n     recon_reference_number: '',\n     salutation: '',\n     salutation_1: '',\n     tax: '',\n     travel_days: 4,\n     travel_insurance_si: '0',\n     travel_insurance_si_60887: '$50000',\n     travel_insurance_si_60888: '$100000',\n     travel_insurance_si_60890: '$250000',\n     travel_insurance_si_60891: '$500000',\n     travel_insurance_si_60892: '$50000',\n     travel_insurance_si_60894: '$250000',\n     travel_insurance_si_60895: '$500000',\n     travel_insurance_si_60896: '$25000',\n     travel_insurance_si_60899: '$250000',\n     travel_insurance_si_60900: '$100000',\n     travel_insurance_si_60901: '$50000',\n     travel_insurance_si_60902: '$100000',\n     travel_insurance_si_60903: '$250000',\n     travel_insurance_si_60904: '$500000',\n     travel_insurance_si_61422: '$50000',\n     travel_insurance_si_61423: '$100000',\n     travel_insurance_si_61425: '$500000',\n     travel_insurance_si_61520: '$250000',\n     travel_insurance_type: 'individual',\n     visiting_countries: '',\n     travel_insurance_si_61521: '$50000' },\n  Insurer_Request: '{\\r\\n    \"CorrelationId\": \"e576dba8-5944-417e-9ff9-74bdefe52452\",\\r\\n    \"PlanType\": \"SINGLE\",\\r\\n    \"TripType\": \"SINGLE\",\\r\\n    \"NoOfDays\": \"0\",\\r\\n    \"TripDuration\": \"0\",\\r\\n    \"PlanCode\": \"61521\",\\r\\n    \"NoOfDays\": 0,\\r\\n    \"TripDuration\": 0,\\r\\n    \"InsuredDetails\": [\\r\\n        {\\r\\n            \"InsuredDOB\": \"2001-08-06\"\\r\\n        }\\r\\n    ],\\r\\n    \"PolicyStartDate\": \"2024-08-07\",\\r\\n    \"PolicyEndDate\": \"2024-08-10\",\\r\\n    \"PolicyDuration\": \"3\",\\r\\n    \"VisaType\": \"NON_IMMIGRANT\",\\r\\n    \"PartyStateName\": \"MAHARASHTRA\"\\r\\n}',\n  Insurer_Response: '',\n  Insurer_Response_Core: '',\n  Premium_Breakup: null,\n  LM_Response: '',\n  Insurer_Transaction_Identifier: '',\n  Health_Renewal_Proposal_Request_Core: null,\n  Status: 'pending',\n  Error_Code: '',\n  Is_Active: 1,\n  Created_On: 2024-08-06T03:51:58.697Z,\n  Product_Id: 4,\n  Insurer_Id: 6,\n  Plan_Id: 61521,\n  Plan_Name: 'GOLD W 50',\n  Plan_Code: 61521,\n  Allow_Renew: undefined,\n  Addon_Mode: 'ALACARTE',\n  Method_Type: 'Premium',\n  Call_Execution_Time: 0 }","timestamp":"9:21:58 AM"}
{"level":"error","message":"Dhananjay Health Renewal Before save_log  true","timestamp":"9:21:58 AM"}
{"level":"error","message":"Plan_execute_loop 1158085 6 ARN-7QRJWIGM-XOUG-IOGJ-81KZ-V9TWV0DUSX7I 61521 GOLD W 50 61521 GOLD W 50","timestamp":"9:21:58 AM"}
{"level":"error","message":"Dhananjay Health Renewal After save_log  true","timestamp":"9:21:58 AM"}
{"level":"error","message":"(node:9832) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 7): MongoError: E11000 duplicate key error collection: lm-api-qa.identitycounters index: field_1_groupingField_1_model_1 dup key: { : \"Email_Event_Id\", : null, : \"Email_Event\" }","timestamp":"9:21:59 AM"}
{"level":"error","message":"LOG REFERER YTD undefined ::ffff:127.0.0.1 undefined","timestamp":"9:21:59 AM"}
{"level":"error","message":"LOG REFERER YTD undefined ::ffff:127.0.0.1 undefined","timestamp":"9:21:59 AM"}
{"level":"error","message":"LOG REFERER YTD undefined ::ffff:127.0.0.1 undefined","timestamp":"9:21:59 AM"}
{"level":"error","message":"LOG REFERER YTD undefined ::ffff:127.0.0.1 undefined","timestamp":"9:21:59 AM"}
{"level":"error","message":"LOG REFERER YTD undefined ::ffff:127.0.0.1 undefined","timestamp":"9:21:59 AM"}
{"level":"error","message":"LOG REFERER YTD undefined ::ffff:127.0.0.1 undefined","timestamp":"9:21:59 AM"}
{"level":"error","message":"token eyJhbGciOiJSUzI1NiIsImtpZCI6IjZCN0FDQzUyMDMwNUJGREI0RjcyNTJEQUVCMjE3N0NDMDkxRkFBRTEiLCJ0eXAiOiJKV1QiLCJ4NXQiOiJhM3JNVWdNRnY5dFBjbExhNnlGM3pBa2ZxdUUifQ.eyJuYmYiOjE2NTAzNDUzNTEsImV4cCI6MTY1MDM0ODk1MSwiaXNzIjoiaHR0cHM6Ly9pbGVzYjAxLmluc3VyYW5jZWFydGljbGV6LmNvbS9jZXJiZXJ1cyIsImF1ZCI6WyJodHRwczovL2lsZXNiMDEuaW5zdXJhbmNlYXJ0aWNsZXouY29tL2NlcmJlcnVzL3Jlc291cmNlcyIsImVzYmludGVybmF0aW9uYWx0cmF2ZWwiXSwiY2xpZW50X2lkIjoicm8ucG9saWN5Ym9zcyIsInN1YiI6IjQyYzlkNjQwLTZlNDYtNDA3ZC1iZmM2LTI5YmFkNTBiZTQwMiIsImF1dGhfdGltZSI6MTY1MDM0NTM1MSwiaWRwIjoibG9jYWwiLCJzY29wZSI6WyJlc2JpbnRlcm5hdGlvbmFsdHJhdmVsIl0sImFtciI6WyJjdXN0b20iXX0.Jvir0ncCuHlOgkj50QPkdlR99QKSNw_bZpLmMIGbcqvO3BCDwohS3noc1lsxtmiZXPy_QcWgBCnNYLGWpTAOYmwRVkiXf8s31dX6oxQucYiMxE9UVHcbTqOLsZ_IL_GTeNecVQ03jAupQJj62tmEv5V-vgIhMTOYhmgXMUcJhLPlMxKf9tdXd6ORrJl20wLbP6Ik-Az9Uy5kT6ezaZ6o6nMdYknWWe2aneFrLpqfMus2bKBGakBhaFWqJdSh2cNqet5f_xizoSEMH_LLevERSYd6Le-i4mGBhkkpJ8IdW2ztinPYXyBpST9bli6BdpjwaIexjw2OL36uWdug5Xh-OQ","timestamp":"9:21:59 AM"}
{"level":"error","message":"token eyJhbGciOiJSUzI1NiIsImtpZCI6IjZCN0FDQzUyMDMwNUJGREI0RjcyNTJEQUVCMjE3N0NDMDkxRkFBRTEiLCJ0eXAiOiJKV1QiLCJ4NXQiOiJhM3JNVWdNRnY5dFBjbExhNnlGM3pBa2ZxdUUifQ.eyJuYmYiOjE2NTAzNDUzNTEsImV4cCI6MTY1MDM0ODk1MSwiaXNzIjoiaHR0cHM6Ly9pbGVzYjAxLmluc3VyYW5jZWFydGljbGV6LmNvbS9jZXJiZXJ1cyIsImF1ZCI6WyJodHRwczovL2lsZXNiMDEuaW5zdXJhbmNlYXJ0aWNsZXouY29tL2NlcmJlcnVzL3Jlc291cmNlcyIsImVzYmludGVybmF0aW9uYWx0cmF2ZWwiXSwiY2xpZW50X2lkIjoicm8ucG9saWN5Ym9zcyIsInN1YiI6IjQyYzlkNjQwLTZlNDYtNDA3ZC1iZmM2LTI5YmFkNTBiZTQwMiIsImF1dGhfdGltZSI6MTY1MDM0NTM1MSwiaWRwIjoibG9jYWwiLCJzY29wZSI6WyJlc2JpbnRlcm5hdGlvbmFsdHJhdmVsIl0sImFtciI6WyJjdXN0b20iXX0.Jvir0ncCuHlOgkj50QPkdlR99QKSNw_bZpLmMIGbcqvO3BCDwohS3noc1lsxtmiZXPy_QcWgBCnNYLGWpTAOYmwRVkiXf8s31dX6oxQucYiMxE9UVHcbTqOLsZ_IL_GTeNecVQ03jAupQJj62tmEv5V-vgIhMTOYhmgXMUcJhLPlMxKf9tdXd6ORrJl20wLbP6Ik-Az9Uy5kT6ezaZ6o6nMdYknWWe2aneFrLpqfMus2bKBGakBhaFWqJdSh2cNqet5f_xizoSEMH_LLevERSYd6Le-i4mGBhkkpJ8IdW2ztinPYXyBpST9bli6BdpjwaIexjw2OL36uWdug5Xh-OQ","timestamp":"9:21:59 AM"}
{"level":"error","message":"token eyJhbGciOiJSUzI1NiIsImtpZCI6IjZCN0FDQzUyMDMwNUJGREI0RjcyNTJEQUVCMjE3N0NDMDkxRkFBRTEiLCJ0eXAiOiJKV1QiLCJ4NXQiOiJhM3JNVWdNRnY5dFBjbExhNnlGM3pBa2ZxdUUifQ.eyJuYmYiOjE2NTAzNDUzNTEsImV4cCI6MTY1MDM0ODk1MSwiaXNzIjoiaHR0cHM6Ly9pbGVzYjAxLmluc3VyYW5jZWFydGljbGV6LmNvbS9jZXJiZXJ1cyIsImF1ZCI6WyJodHRwczovL2lsZXNiMDEuaW5zdXJhbmNlYXJ0aWNsZXouY29tL2NlcmJlcnVzL3Jlc291cmNlcyIsImVzYmludGVybmF0aW9uYWx0cmF2ZWwiXSwiY2xpZW50X2lkIjoicm8ucG9saWN5Ym9zcyIsInN1YiI6IjQyYzlkNjQwLTZlNDYtNDA3ZC1iZmM2LTI5YmFkNTBiZTQwMiIsImF1dGhfdGltZSI6MTY1MDM0NTM1MSwiaWRwIjoibG9jYWwiLCJzY29wZSI6WyJlc2JpbnRlcm5hdGlvbmFsdHJhdmVsIl0sImFtciI6WyJjdXN0b20iXX0.Jvir0ncCuHlOgkj50QPkdlR99QKSNw_bZpLmMIGbcqvO3BCDwohS3noc1lsxtmiZXPy_QcWgBCnNYLGWpTAOYmwRVkiXf8s31dX6oxQucYiMxE9UVHcbTqOLsZ_IL_GTeNecVQ03jAupQJj62tmEv5V-vgIhMTOYhmgXMUcJhLPlMxKf9tdXd6ORrJl20wLbP6Ik-Az9Uy5kT6ezaZ6o6nMdYknWWe2aneFrLpqfMus2bKBGakBhaFWqJdSh2cNqet5f_xizoSEMH_LLevERSYd6Le-i4mGBhkkpJ8IdW2ztinPYXyBpST9bli6BdpjwaIexjw2OL36uWdug5Xh-OQ","timestamp":"9:21:59 AM"}
{"level":"error","message":"token eyJhbGciOiJSUzI1NiIsImtpZCI6IjZCN0FDQzUyMDMwNUJGREI0RjcyNTJEQUVCMjE3N0NDMDkxRkFBRTEiLCJ0eXAiOiJKV1QiLCJ4NXQiOiJhM3JNVWdNRnY5dFBjbExhNnlGM3pBa2ZxdUUifQ.eyJuYmYiOjE2NTAzNDUzNTEsImV4cCI6MTY1MDM0ODk1MSwiaXNzIjoiaHR0cHM6Ly9pbGVzYjAxLmluc3VyYW5jZWFydGljbGV6LmNvbS9jZXJiZXJ1cyIsImF1ZCI6WyJodHRwczovL2lsZXNiMDEuaW5zdXJhbmNlYXJ0aWNsZXouY29tL2NlcmJlcnVzL3Jlc291cmNlcyIsImVzYmludGVybmF0aW9uYWx0cmF2ZWwiXSwiY2xpZW50X2lkIjoicm8ucG9saWN5Ym9zcyIsInN1YiI6IjQyYzlkNjQwLTZlNDYtNDA3ZC1iZmM2LTI5YmFkNTBiZTQwMiIsImF1dGhfdGltZSI6MTY1MDM0NTM1MSwiaWRwIjoibG9jYWwiLCJzY29wZSI6WyJlc2JpbnRlcm5hdGlvbmFsdHJhdmVsIl0sImFtciI6WyJjdXN0b20iXX0.Jvir0ncCuHlOgkj50QPkdlR99QKSNw_bZpLmMIGbcqvO3BCDwohS3noc1lsxtmiZXPy_QcWgBCnNYLGWpTAOYmwRVkiXf8s31dX6oxQucYiMxE9UVHcbTqOLsZ_IL_GTeNecVQ03jAupQJj62tmEv5V-vgIhMTOYhmgXMUcJhLPlMxKf9tdXd6ORrJl20wLbP6Ik-Az9Uy5kT6ezaZ6o6nMdYknWWe2aneFrLpqfMus2bKBGakBhaFWqJdSh2cNqet5f_xizoSEMH_LLevERSYd6Le-i4mGBhkkpJ8IdW2ztinPYXyBpST9bli6BdpjwaIexjw2OL36uWdug5Xh-OQ","timestamp":"9:21:59 AM"}
{"level":"error","message":"token eyJhbGciOiJSUzI1NiIsImtpZCI6IjZCN0FDQzUyMDMwNUJGREI0RjcyNTJEQUVCMjE3N0NDMDkxRkFBRTEiLCJ0eXAiOiJKV1QiLCJ4NXQiOiJhM3JNVWdNRnY5dFBjbExhNnlGM3pBa2ZxdUUifQ.eyJuYmYiOjE2NTAzNDUzNTEsImV4cCI6MTY1MDM0ODk1MSwiaXNzIjoiaHR0cHM6Ly9pbGVzYjAxLmluc3VyYW5jZWFydGljbGV6LmNvbS9jZXJiZXJ1cyIsImF1ZCI6WyJodHRwczovL2lsZXNiMDEuaW5zdXJhbmNlYXJ0aWNsZXouY29tL2NlcmJlcnVzL3Jlc291cmNlcyIsImVzYmludGVybmF0aW9uYWx0cmF2ZWwiXSwiY2xpZW50X2lkIjoicm8ucG9saWN5Ym9zcyIsInN1YiI6IjQyYzlkNjQwLTZlNDYtNDA3ZC1iZmM2LTI5YmFkNTBiZTQwMiIsImF1dGhfdGltZSI6MTY1MDM0NTM1MSwiaWRwIjoibG9jYWwiLCJzY29wZSI6WyJlc2JpbnRlcm5hdGlvbmFsdHJhdmVsIl0sImFtciI6WyJjdXN0b20iXX0.Jvir0ncCuHlOgkj50QPkdlR99QKSNw_bZpLmMIGbcqvO3BCDwohS3noc1lsxtmiZXPy_QcWgBCnNYLGWpTAOYmwRVkiXf8s31dX6oxQucYiMxE9UVHcbTqOLsZ_IL_GTeNecVQ03jAupQJj62tmEv5V-vgIhMTOYhmgXMUcJhLPlMxKf9tdXd6ORrJl20wLbP6Ik-Az9Uy5kT6ezaZ6o6nMdYknWWe2aneFrLpqfMus2bKBGakBhaFWqJdSh2cNqet5f_xizoSEMH_LLevERSYd6Le-i4mGBhkkpJ8IdW2ztinPYXyBpST9bli6BdpjwaIexjw2OL36uWdug5Xh-OQ","timestamp":"9:21:59 AM"}
{"level":"error","message":"LOG REFERER YTD undefined ::ffff:127.0.0.1 undefined","timestamp":"9:21:59 AM"}
{"level":"error","message":"LOG REFERER YTD undefined ::ffff:127.0.0.1 undefined","timestamp":"9:21:59 AM"}
{"level":"error","message":"token eyJhbGciOiJSUzI1NiIsImtpZCI6IjZCN0FDQzUyMDMwNUJGREI0RjcyNTJEQUVCMjE3N0NDMDkxRkFBRTEiLCJ0eXAiOiJKV1QiLCJ4NXQiOiJhM3JNVWdNRnY5dFBjbExhNnlGM3pBa2ZxdUUifQ.eyJuYmYiOjE2NTAzNDUzNTEsImV4cCI6MTY1MDM0ODk1MSwiaXNzIjoiaHR0cHM6Ly9pbGVzYjAxLmluc3VyYW5jZWFydGljbGV6LmNvbS9jZXJiZXJ1cyIsImF1ZCI6WyJodHRwczovL2lsZXNiMDEuaW5zdXJhbmNlYXJ0aWNsZXouY29tL2NlcmJlcnVzL3Jlc291cmNlcyIsImVzYmludGVybmF0aW9uYWx0cmF2ZWwiXSwiY2xpZW50X2lkIjoicm8ucG9saWN5Ym9zcyIsInN1YiI6IjQyYzlkNjQwLTZlNDYtNDA3ZC1iZmM2LTI5YmFkNTBiZTQwMiIsImF1dGhfdGltZSI6MTY1MDM0NTM1MSwiaWRwIjoibG9jYWwiLCJzY29wZSI6WyJlc2JpbnRlcm5hdGlvbmFsdHJhdmVsIl0sImFtciI6WyJjdXN0b20iXX0.Jvir0ncCuHlOgkj50QPkdlR99QKSNw_bZpLmMIGbcqvO3BCDwohS3noc1lsxtmiZXPy_QcWgBCnNYLGWpTAOYmwRVkiXf8s31dX6oxQucYiMxE9UVHcbTqOLsZ_IL_GTeNecVQ03jAupQJj62tmEv5V-vgIhMTOYhmgXMUcJhLPlMxKf9tdXd6ORrJl20wLbP6Ik-Az9Uy5kT6ezaZ6o6nMdYknWWe2aneFrLpqfMus2bKBGakBhaFWqJdSh2cNqet5f_xizoSEMH_LLevERSYd6Le-i4mGBhkkpJ8IdW2ztinPYXyBpST9bli6BdpjwaIexjw2OL36uWdug5Xh-OQ","timestamp":"9:21:59 AM"}
{"level":"error","message":"token eyJhbGciOiJSUzI1NiIsImtpZCI6IjZCN0FDQzUyMDMwNUJGREI0RjcyNTJEQUVCMjE3N0NDMDkxRkFBRTEiLCJ0eXAiOiJKV1QiLCJ4NXQiOiJhM3JNVWdNRnY5dFBjbExhNnlGM3pBa2ZxdUUifQ.eyJuYmYiOjE2NTAzNDUzNTEsImV4cCI6MTY1MDM0ODk1MSwiaXNzIjoiaHR0cHM6Ly9pbGVzYjAxLmluc3VyYW5jZWFydGljbGV6LmNvbS9jZXJiZXJ1cyIsImF1ZCI6WyJodHRwczovL2lsZXNiMDEuaW5zdXJhbmNlYXJ0aWNsZXouY29tL2NlcmJlcnVzL3Jlc291cmNlcyIsImVzYmludGVybmF0aW9uYWx0cmF2ZWwiXSwiY2xpZW50X2lkIjoicm8ucG9saWN5Ym9zcyIsInN1YiI6IjQyYzlkNjQwLTZlNDYtNDA3ZC1iZmM2LTI5YmFkNTBiZTQwMiIsImF1dGhfdGltZSI6MTY1MDM0NTM1MSwiaWRwIjoibG9jYWwiLCJzY29wZSI6WyJlc2JpbnRlcm5hdGlvbmFsdHJhdmVsIl0sImFtciI6WyJjdXN0b20iXX0.Jvir0ncCuHlOgkj50QPkdlR99QKSNw_bZpLmMIGbcqvO3BCDwohS3noc1lsxtmiZXPy_QcWgBCnNYLGWpTAOYmwRVkiXf8s31dX6oxQucYiMxE9UVHcbTqOLsZ_IL_GTeNecVQ03jAupQJj62tmEv5V-vgIhMTOYhmgXMUcJhLPlMxKf9tdXd6ORrJl20wLbP6Ik-Az9Uy5kT6ezaZ6o6nMdYknWWe2aneFrLpqfMus2bKBGakBhaFWqJdSh2cNqet5f_xizoSEMH_LLevERSYd6Le-i4mGBhkkpJ8IdW2ztinPYXyBpST9bli6BdpjwaIexjw2OL36uWdug5Xh-OQ","timestamp":"9:21:59 AM"}
{"level":"error","message":"token eyJhbGciOiJSUzI1NiIsImtpZCI6IjZCN0FDQzUyMDMwNUJGREI0RjcyNTJEQUVCMjE3N0NDMDkxRkFBRTEiLCJ0eXAiOiJKV1QiLCJ4NXQiOiJhM3JNVWdNRnY5dFBjbExhNnlGM3pBa2ZxdUUifQ.eyJuYmYiOjE2NTAzNDUzNTEsImV4cCI6MTY1MDM0ODk1MSwiaXNzIjoiaHR0cHM6Ly9pbGVzYjAxLmluc3VyYW5jZWFydGljbGV6LmNvbS9jZXJiZXJ1cyIsImF1ZCI6WyJodHRwczovL2lsZXNiMDEuaW5zdXJhbmNlYXJ0aWNsZXouY29tL2NlcmJlcnVzL3Jlc291cmNlcyIsImVzYmludGVybmF0aW9uYWx0cmF2ZWwiXSwiY2xpZW50X2lkIjoicm8ucG9saWN5Ym9zcyIsInN1YiI6IjQyYzlkNjQwLTZlNDYtNDA3ZC1iZmM2LTI5YmFkNTBiZTQwMiIsImF1dGhfdGltZSI6MTY1MDM0NTM1MSwiaWRwIjoibG9jYWwiLCJzY29wZSI6WyJlc2JpbnRlcm5hdGlvbmFsdHJhdmVsIl0sImFtciI6WyJjdXN0b20iXX0.Jvir0ncCuHlOgkj50QPkdlR99QKSNw_bZpLmMIGbcqvO3BCDwohS3noc1lsxtmiZXPy_QcWgBCnNYLGWpTAOYmwRVkiXf8s31dX6oxQucYiMxE9UVHcbTqOLsZ_IL_GTeNecVQ03jAupQJj62tmEv5V-vgIhMTOYhmgXMUcJhLPlMxKf9tdXd6ORrJl20wLbP6Ik-Az9Uy5kT6ezaZ6o6nMdYknWWe2aneFrLpqfMus2bKBGakBhaFWqJdSh2cNqet5f_xizoSEMH_LLevERSYd6Le-i4mGBhkkpJ8IdW2ztinPYXyBpST9bli6BdpjwaIexjw2OL36uWdug5Xh-OQ","timestamp":"9:22:00 AM"}
{"level":"error","message":"token eyJhbGciOiJSUzI1NiIsImtpZCI6IjZCN0FDQzUyMDMwNUJGREI0RjcyNTJEQUVCMjE3N0NDMDkxRkFBRTEiLCJ0eXAiOiJKV1QiLCJ4NXQiOiJhM3JNVWdNRnY5dFBjbExhNnlGM3pBa2ZxdUUifQ.eyJuYmYiOjE2NTAzNDUzNTEsImV4cCI6MTY1MDM0ODk1MSwiaXNzIjoiaHR0cHM6Ly9pbGVzYjAxLmluc3VyYW5jZWFydGljbGV6LmNvbS9jZXJiZXJ1cyIsImF1ZCI6WyJodHRwczovL2lsZXNiMDEuaW5zdXJhbmNlYXJ0aWNsZXouY29tL2NlcmJlcnVzL3Jlc291cmNlcyIsImVzYmludGVybmF0aW9uYWx0cmF2ZWwiXSwiY2xpZW50X2lkIjoicm8ucG9saWN5Ym9zcyIsInN1YiI6IjQyYzlkNjQwLTZlNDYtNDA3ZC1iZmM2LTI5YmFkNTBiZTQwMiIsImF1dGhfdGltZSI6MTY1MDM0NTM1MSwiaWRwIjoibG9jYWwiLCJzY29wZSI6WyJlc2JpbnRlcm5hdGlvbmFsdHJhdmVsIl0sImFtciI6WyJjdXN0b20iXX0.Jvir0ncCuHlOgkj50QPkdlR99QKSNw_bZpLmMIGbcqvO3BCDwohS3noc1lsxtmiZXPy_QcWgBCnNYLGWpTAOYmwRVkiXf8s31dX6oxQucYiMxE9UVHcbTqOLsZ_IL_GTeNecVQ03jAupQJj62tmEv5V-vgIhMTOYhmgXMUcJhLPlMxKf9tdXd6ORrJl20wLbP6Ik-Az9Uy5kT6ezaZ6o6nMdYknWWe2aneFrLpqfMus2bKBGakBhaFWqJdSh2cNqet5f_xizoSEMH_LLevERSYd6Le-i4mGBhkkpJ8IdW2ztinPYXyBpST9bli6BdpjwaIexjw2OL36uWdug5Xh-OQ","timestamp":"9:22:00 AM"}
{"level":"error","message":"ICICI Data {\"type\":\"Buffer\",\"data\":[60,104,116,109,108,62,13,10,60,104,101,97,100,62,60,116,105,116,108,101,62,53,48,51,32,83,101,114,118,105,99,101,32,84,101,109,112,111,114,97,114,105,108,121,32,85,110,97,118,97,105,108,97,98,108,101,60,47,116,105,116,108,101,62,60,47,104,101,97,100,62,13,10,60,98,111,100,121,62,13,10,60,99,101,110,116,101,114,62,60,104,49,62,53,48,51,32,83,101,114,118,105,99,101,32,84,101,109,112,111,114,97,114,105,108,121,32,85,110,97,118,97,105,108,97,98,108,101,60,47,104,49,62,60,47,99,101,110,116,101,114,62,13,10,60,47,98,111,100,121,62,13,10,60,47,104,116,109,108,62,13,10]}","timestamp":"9:22:00 AM"}
{"level":"error","message":"LOG REFERER YTD undefined ::ffff:127.0.0.1 undefined","timestamp":"9:22:07 AM"}
{"level":"error","message":"LOG REFERER YTD undefined ::ffff:127.0.0.1 undefined","timestamp":"9:22:07 AM"}
{"level":"error","message":"LOG REFERER YTD undefined ::ffff:127.0.0.1 undefined","timestamp":"9:22:07 AM"}
{"level":"error","message":"LOG REFERER YTD undefined ::ffff:127.0.0.1 undefined","timestamp":"9:22:07 AM"}
{"level":"error","message":"LOG REFERER YTD undefined ::ffff:127.0.0.1 undefined","timestamp":"9:22:07 AM"}
{"level":"error","message":"LOG REFERER YTD undefined ::ffff:127.0.0.1 undefined","timestamp":"9:22:07 AM"}
{"level":"error","message":"LOG REFERER YTD undefined ::ffff:127.0.0.1 undefined","timestamp":"9:22:07 AM"}
{"level":"error","message":"LOG REFERER YTD undefined ::ffff:127.0.0.1 undefined","timestamp":"9:22:07 AM"}
{"level":"error","message":"ICICI Data {\"type\":\"Buffer\",\"data\":[60,104,116,109,108,62,13,10,60,104,101,97,100,62,60,116,105,116,108,101,62,53,48,51,32,83,101,114,118,105,99,101,32,84,101,109,112,111,114,97,114,105,108,121,32,85,110,97,118,97,105,108,97,98,108,101,60,47,116,105,116,108,101,62,60,47,104,101,97,100,62,13,10,60,98,111,100,121,62,13,10,60,99,101,110,116,101,114,62,60,104,49,62,53,48,51,32,83,101,114,118,105,99,101,32,84,101,109,112,111,114,97,114,105,108,121,32,85,110,97,118,97,105,108,97,98,108,101,60,47,104,49,62,60,47,99,101,110,116,101,114,62,13,10,60,47,98,111,100,121,62,13,10,60,47,104,116,109,108,62,13,10]}","timestamp":"9:22:07 AM"}
{"level":"error","message":"ICICI Data {\"type\":\"Buffer\",\"data\":[60,104,116,109,108,62,13,10,60,104,101,97,100,62,60,116,105,116,108,101,62,53,48,51,32,83,101,114,118,105,99,101,32,84,101,109,112,111,114,97,114,105,108,121,32,85,110,97,118,97,105,108,97,98,108,101,60,47,116,105,116,108,101,62,60,47,104,101,97,100,62,13,10,60,98,111,100,121,62,13,10,60,99,101,110,116,101,114,62,60,104,49,62,53,48,51,32,83,101,114,118,105,99,101,32,84,101,109,112,111,114,97,114,105,108,121,32,85,110,97,118,97,105,108,97,98,108,101,60,47,104,49,62,60,47,99,101,110,116,101,114,62,13,10,60,47,98,111,100,121,62,13,10,60,47,104,116,109,108,62,13,10]}","timestamp":"9:22:08 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:23:12 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:23:12 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:23:12 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:23:12 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:23:12 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:23:12 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:23:12 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:23:12 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:23:12 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:23:12 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:23:12 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:23:12 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:23:12 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:23:12 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:23:12 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:23:12 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:23:12 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:23:12 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:23:12 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:23:12 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:23:12 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:23:12 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:23:12 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:23:12 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:23:12 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:23:12 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:23:12 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:23:12 AM"}
{"level":"error","message":"(node:9744) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): MongoError: E11000 duplicate key error collection: lm-api-qa.sync_contacts index: Sync_Contact_Id_1 dup key: { : null }","timestamp":"9:23:13 AM"}
{"level":"error","message":"(node:9744) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 2): MongoError: Index with name: Posp_Id_1 already exists with different options","timestamp":"9:23:13 AM"}
{"level":"error","message":"(node:9744) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 3): MongoError: Index: { v: 2, unique: true, key: { Doc_Log_Id: 1 }, name: \"Doc_Log_Id_1\", ns: \"lm-api-qa.posp_doc_logs\", background: true } already exists with different options: { v: 2, key: { Doc_Log_Id: 1 }, name: \"Doc_Log_Id\", ns: \"lm-api-qa.posp_doc_logs\" }","timestamp":"9:23:13 AM"}
{"level":"error","message":"(node:9744) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 4): MongoError: E11000 duplicate key error collection: lm-api-qa.credentials index: Credential_Id_1 dup key: { : null }","timestamp":"9:23:13 AM"}
{"level":"error","message":"(node:9744) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 5): MongoError: E11000 duplicate key error collection: lm-api-qa.offline_transactions index: Transaction_Id_1 dup key: { : null }","timestamp":"9:23:13 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:23:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:23:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:24:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:24:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:25:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:25:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:26:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:26:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:27:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:27:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:28:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:28:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:29:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:29:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:30:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:30:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:31:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:31:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:32:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:32:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:33:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:33:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:34:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:34:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:35:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:35:26 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:36:26 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:36:26 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:36:26 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:36:26 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:36:26 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:36:26 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:36:26 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:36:26 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:36:26 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:36:26 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:36:26 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:36:26 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:36:26 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:36:26 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:36:26 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:36:26 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:36:26 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:36:26 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:36:26 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:36:26 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:36:26 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:36:26 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:36:26 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:36:26 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:36:26 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:36:26 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:36:26 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:36:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:36:26 AM"}
{"level":"error","message":"(node:12172) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): MongoError: E11000 duplicate key error collection: lm-api-qa.sync_contacts index: Sync_Contact_Id_1 dup key: { : null }","timestamp":"9:36:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:36:26 AM"}
{"level":"error","message":"(node:12172) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 2): MongoError: Index: { v: 2, unique: true, key: { Doc_Log_Id: 1 }, name: \"Doc_Log_Id_1\", ns: \"lm-api-qa.posp_doc_logs\", background: true } already exists with different options: { v: 2, key: { Doc_Log_Id: 1 }, name: \"Doc_Log_Id\", ns: \"lm-api-qa.posp_doc_logs\" }","timestamp":"9:36:26 AM"}
{"level":"error","message":"(node:12172) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 3): MongoError: Index with name: Posp_Id_1 already exists with different options","timestamp":"9:36:27 AM"}
{"level":"error","message":"(node:12172) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 4): MongoError: E11000 duplicate key error collection: lm-api-qa.credentials index: Credential_Id_1 dup key: { : null }","timestamp":"9:36:27 AM"}
{"level":"error","message":"(node:12172) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 5): MongoError: E11000 duplicate key error collection: lm-api-qa.offline_transactions index: Transaction_Id_1 dup key: { : null }","timestamp":"9:36:27 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:36:37 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:36:37 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:7000/ ::1 string","timestamp":"9:36:58 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:7000/ ::1 string","timestamp":"9:36:58 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:47:38 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:47:38 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:47:38 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:47:38 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:47:38 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:47:38 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:47:38 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:47:38 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:47:38 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:47:38 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:47:38 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:47:38 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:47:38 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:47:38 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:47:38 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:47:38 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:47:38 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:47:38 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:47:38 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:47:38 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:47:38 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:47:38 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:47:38 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:47:38 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:47:38 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:47:38 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:47:38 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"9:47:38 AM"}
{"level":"error","message":"(node:10872) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): MongoError: E11000 duplicate key error collection: lm-api-qa.sync_contacts index: Sync_Contact_Id_1 dup key: { : null }","timestamp":"9:47:39 AM"}
{"level":"error","message":"(node:10872) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 2): MongoError: Index: { v: 2, unique: true, key: { Doc_Log_Id: 1 }, name: \"Doc_Log_Id_1\", ns: \"lm-api-qa.posp_doc_logs\", background: true } already exists with different options: { v: 2, key: { Doc_Log_Id: 1 }, name: \"Doc_Log_Id\", ns: \"lm-api-qa.posp_doc_logs\" }","timestamp":"9:47:39 AM"}
{"level":"error","message":"(node:10872) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 3): MongoError: Index with name: Posp_Id_1 already exists with different options","timestamp":"9:47:39 AM"}
{"level":"error","message":"(node:10872) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 4): MongoError: E11000 duplicate key error collection: lm-api-qa.credentials index: Credential_Id_1 dup key: { : null }","timestamp":"9:47:39 AM"}
{"level":"error","message":"(node:10872) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 5): MongoError: E11000 duplicate key error collection: lm-api-qa.offline_transactions index: Transaction_Id_1 dup key: { : null }","timestamp":"9:47:39 AM"}
{"level":"error","message":"LOG REFERER YTD undefined ::1 undefined","timestamp":"9:47:58 AM"}
{"level":"warn","message":"uncaughtException { Error: socket hang up\n    at createHangUpError (_http_client.js:254:15)\n    at Socket.socketOnEnd (_http_client.js:346:23)\n    at emitNone (events.js:91:20)\n    at Socket.emit (events.js:185:7)\n    at endReadableNT (_stream_readable.js:974:12)\n    at _combinedTickCallback (internal/process/next_tick.js:74:11)\n    at process._tickCallback (internal/process/next_tick.js:98:9)\n  code: 'ECONNRESET',\n  request: \n   ClientRequest {\n     domain: null,\n     _events: {},\n     _eventsCount: 0,\n     _maxListeners: undefined,\n     href: 'http://qa-horizon.policyboss.com:3000/report/save_log?env=Development&type=ERR',\n     options: \n      { host: 'qa-horizon.policyboss.com',\n        port: '3000',\n        path: '/report/save_log?env=Development&type=ERR',\n        href: 'http://qa-horizon.policyboss.com:3000/report/save_log?env=Development&type=ERR',\n        method: 'POST',\n        headers: [Object],\n        data: '[\"LOG REFERER YTD undefined ::1 undefined\"]' },\n     _httpRequest: \n      Writable {\n        _writableState: [Object],\n        writable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        _options: [Object],\n        _ended: true,\n        _ending: true,\n        _redirectCount: 0,\n        _redirects: [],\n        _requestBodyLength: 43,\n        _requestBodyBuffers: [Object],\n        _onNativeResponse: [Function],\n        _currentRequest: [Object],\n        _currentUrl: 'http://qa-horizon.policyboss.com:3000/report/save_log?env=Development&type=ERR' } } }","timestamp":"9:56:30 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:56:30 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:56:30 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:56:30 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:56:30 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:56:30 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:56:30 AM"}
{"level":"warn","message":"uncaughtException { Error: socket hang up\n    at createHangUpError (_http_client.js:254:15)\n    at Socket.socketCloseListener (_http_client.js:286:23)\n    at emitOne (events.js:101:20)\n    at Socket.emit (events.js:188:7)\n    at TCP._handle.close [as _onclose] (net.js:498:12)\n  code: 'ECONNRESET',\n  request: \n   ClientRequest {\n     domain: null,\n     _events: {},\n     _eventsCount: 0,\n     _maxListeners: undefined,\n     href: 'http://qa-horizon.policyboss.com:3000/report/save_log?env=Development&type=ERR',\n     options: \n      { host: 'qa-horizon.policyboss.com',\n        port: '3000',\n        path: '/report/save_log?env=Development&type=ERR',\n        href: 'http://qa-horizon.policyboss.com:3000/report/save_log?env=Development&type=ERR',\n        method: 'POST',\n        headers: [Object],\n        data: '[\"LOG REFERER YTD undefined ::1 undefined\"]' },\n     _httpRequest: \n      Writable {\n        _writableState: [Object],\n        writable: true,\n        domain: null,\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        _options: [Object],\n        _ended: true,\n        _ending: true,\n        _redirectCount: 0,\n        _redirects: [],\n        _requestBodyLength: 43,\n        _requestBodyBuffers: [Object],\n        _onNativeResponse: [Function],\n        _currentRequest: [Object],\n        _currentUrl: 'http://qa-horizon.policyboss.com:3000/report/save_log?env=Development&type=ERR' } } }","timestamp":"9:56:30 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:56:30 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:56:30 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:56:30 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:56:30 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:56:31 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:56:31 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:56:31 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:56:31 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:56:31 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:56:31 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:56:31 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"9:56:31 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:04 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:04 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:04 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:04 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:04 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:04 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:04 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:04 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:04 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:04 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:04 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:04 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:04 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:04 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:04 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:04 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:04 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:04 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:04 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:04 AM"}
{"level":"error","message":"(node:25696) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): MongoError: E11000 duplicate key error collection: lm-api-qa.sync_contacts index: Sync_Contact_Id_1 dup key: { : null }","timestamp":"10:03:04 AM"}
{"level":"error","message":"(node:25696) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 2): MongoError: Index: { v: 2, unique: true, key: { Doc_Log_Id: 1 }, name: \"Doc_Log_Id_1\", ns: \"lm-api-qa.posp_doc_logs\", background: true } already exists with different options: { v: 2, key: { Doc_Log_Id: 1 }, name: \"Doc_Log_Id\", ns: \"lm-api-qa.posp_doc_logs\" }","timestamp":"10:03:04 AM"}
{"level":"error","message":"(node:25696) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 3): MongoError: Index with name: Posp_Id_1 already exists with different options","timestamp":"10:03:04 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:04 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:04 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:04 AM"}
{"level":"error","message":"(node:25696) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 4): MongoError: E11000 duplicate key error collection: lm-api-qa.credentials index: Credential_Id_1 dup key: { : null }","timestamp":"10:03:04 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:05 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:05 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:05 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:05 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:05 AM"}
{"level":"error","message":"(node:25696) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 5): MongoError: E11000 duplicate key error collection: lm-api-qa.offline_transactions index: Transaction_Id_1 dup key: { : null }","timestamp":"10:03:05 AM"}
{"level":"error","message":"LOG REFERER YTD undefined ::1 undefined","timestamp":"10:03:09 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:37 AM"}
{"level":"error","message":"(node:10624) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): MongoError: E11000 duplicate key error collection: lm-api-qa.sync_contacts index: Sync_Contact_Id_1 dup key: { : null }","timestamp":"10:03:37 AM"}
{"level":"error","message":"(node:10624) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 2): MongoError: Index: { v: 2, unique: true, key: { Doc_Log_Id: 1 }, name: \"Doc_Log_Id_1\", ns: \"lm-api-qa.posp_doc_logs\", background: true } already exists with different options: { v: 2, key: { Doc_Log_Id: 1 }, name: \"Doc_Log_Id\", ns: \"lm-api-qa.posp_doc_logs\" }","timestamp":"10:03:37 AM"}
{"level":"error","message":"(node:10624) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 3): MongoError: Index with name: Posp_Id_1 already exists with different options","timestamp":"10:03:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:37 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:03:37 AM"}
{"level":"error","message":"(node:10624) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 4): MongoError: E11000 duplicate key error collection: lm-api-qa.credentials index: Credential_Id_1 dup key: { : null }","timestamp":"10:03:38 AM"}
{"level":"error","message":"(node:10624) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 5): MongoError: E11000 duplicate key error collection: lm-api-qa.offline_transactions index: Transaction_Id_1 dup key: { : null }","timestamp":"10:03:38 AM"}
{"level":"error","message":"LOG REFERER YTD undefined ::1 undefined","timestamp":"10:03:41 AM"}
{"level":"error","message":"Error: Can't set headers after they are sent.\n    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)\n    at ServerResponse.header (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\response.js:719:10)\n    at ServerResponse.send (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\response.js:164:12)\n    at done (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\response.js:956:10)\n    at Object.exports.renderFile (D:\\Suyash Files\\SourceCode\\node_modules\\jade\\lib\\index.js:374:12)\n    at View.exports.__express [as engine] (D:\\Suyash Files\\SourceCode\\node_modules\\jade\\lib\\index.js:417:11)\n    at View.render (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\view.js:126:8)\n    at tryRender (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\application.js:639:10)\n    at EventEmitter.render (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\application.js:591:3)\n    at ServerResponse.render (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\response.js:960:7)\n    at D:\\Suyash Files\\SourceCode\\app.js:288:9\n    at Layer.handle_error (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\router\\layer.js:71:5)\n    at trim_prefix (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\router\\index.js:310:13)\n    at D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\router\\index.js:280:7\n    at Function.process_params (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\router\\index.js:330:12)\n    at next (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\router\\index.js:271:10)\n    at Layer.handle_error (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\router\\layer.js:67:12)\n    at trim_prefix (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\router\\index.js:310:13)\n    at D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\router\\index.js:280:7\n    at Function.process_params (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\router\\index.js:330:12)\n    at next (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\router\\index.js:271:10)\n    at Layer.handle_error (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\router\\layer.js:67:12)","timestamp":"10:03:46 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:04:08 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:04:08 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:04:08 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:04:08 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:04:08 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:04:08 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:04:08 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:04:08 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:04:08 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:04:08 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:04:08 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:04:08 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:04:08 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:04:08 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:04:08 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:04:08 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:04:08 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:04:08 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:04:08 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:04:08 AM"}
{"level":"error","message":"(node:10028) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): MongoError: E11000 duplicate key error collection: lm-api-qa.sync_contacts index: Sync_Contact_Id_1 dup key: { : null }","timestamp":"10:04:08 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:04:08 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:04:08 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:04:08 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:04:08 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:04:08 AM"}
{"level":"error","message":"(node:10028) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 2): MongoError: Index: { v: 2, unique: true, key: { Doc_Log_Id: 1 }, name: \"Doc_Log_Id_1\", ns: \"lm-api-qa.posp_doc_logs\", background: true } already exists with different options: { v: 2, key: { Doc_Log_Id: 1 }, name: \"Doc_Log_Id\", ns: \"lm-api-qa.posp_doc_logs\" }","timestamp":"10:04:08 AM"}
{"level":"error","message":"(node:10028) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 3): MongoError: Index with name: Posp_Id_1 already exists with different options","timestamp":"10:04:08 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:04:08 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:04:08 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:04:08 AM"}
{"level":"error","message":"(node:10028) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 4): MongoError: E11000 duplicate key error collection: lm-api-qa.credentials index: Credential_Id_1 dup key: { : null }","timestamp":"10:04:10 AM"}
{"level":"error","message":"(node:10028) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 5): MongoError: E11000 duplicate key error collection: lm-api-qa.offline_transactions index: Transaction_Id_1 dup key: { : null }","timestamp":"10:04:10 AM"}
{"level":"error","message":"LOG REFERER YTD undefined ::1 undefined","timestamp":"10:04:11 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:04:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:04:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:05:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:05:26 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:06:02 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:06:02 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:06:02 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:06:02 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:06:02 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:06:02 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:06:02 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:06:02 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:06:02 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:06:02 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:06:02 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:06:02 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:06:02 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:06:02 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:06:02 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:06:02 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:06:02 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:06:02 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:06:02 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:06:02 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:06:02 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:06:02 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:06:02 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:06:02 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:06:02 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:06:02 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:06:02 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:06:02 AM"}
{"level":"error","message":"(node:14380) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): MongoError: E11000 duplicate key error collection: lm-api-qa.sync_contacts index: Sync_Contact_Id_1 dup key: { : null }","timestamp":"10:06:02 AM"}
{"level":"error","message":"(node:14380) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 2): MongoError: Index with name: Posp_Id_1 already exists with different options","timestamp":"10:06:03 AM"}
{"level":"error","message":"(node:14380) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 3): MongoError: Index: { v: 2, unique: true, key: { Doc_Log_Id: 1 }, name: \"Doc_Log_Id_1\", ns: \"lm-api-qa.posp_doc_logs\", background: true } already exists with different options: { v: 2, key: { Doc_Log_Id: 1 }, name: \"Doc_Log_Id\", ns: \"lm-api-qa.posp_doc_logs\" }","timestamp":"10:06:03 AM"}
{"level":"error","message":"(node:14380) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 4): MongoError: E11000 duplicate key error collection: lm-api-qa.credentials index: Credential_Id_1 dup key: { : null }","timestamp":"10:06:03 AM"}
{"level":"error","message":"(node:14380) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 5): MongoError: E11000 duplicate key error collection: lm-api-qa.offline_transactions index: Transaction_Id_1 dup key: { : null }","timestamp":"10:06:03 AM"}
{"level":"error","message":"LOG REFERER YTD undefined ::1 undefined","timestamp":"10:06:07 AM"}
{"level":"error","message":"Error: Can't set headers after they are sent.\n    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)\n    at ServerResponse.header (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\response.js:719:10)\n    at ServerResponse.send (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\response.js:164:12)\n    at done (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\response.js:956:10)\n    at Object.exports.renderFile (D:\\Suyash Files\\SourceCode\\node_modules\\jade\\lib\\index.js:374:12)\n    at View.exports.__express [as engine] (D:\\Suyash Files\\SourceCode\\node_modules\\jade\\lib\\index.js:417:11)\n    at View.render (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\view.js:126:8)\n    at tryRender (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\application.js:639:10)\n    at EventEmitter.render (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\application.js:591:3)\n    at ServerResponse.render (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\response.js:960:7)\n    at D:\\Suyash Files\\SourceCode\\app.js:288:9\n    at Layer.handle_error (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\router\\layer.js:71:5)\n    at trim_prefix (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\router\\index.js:310:13)\n    at D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\router\\index.js:280:7\n    at Function.process_params (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\router\\index.js:330:12)\n    at next (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\router\\index.js:271:10)\n    at Layer.handle_error (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\router\\layer.js:67:12)\n    at trim_prefix (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\router\\index.js:310:13)\n    at D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\router\\index.js:280:7\n    at Function.process_params (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\router\\index.js:330:12)\n    at next (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\router\\index.js:271:10)\n    at Layer.handle_error (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\router\\layer.js:67:12)","timestamp":"10:06:15 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:06:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:06:26 AM"}
{"level":"error","message":"LOG REFERER YTD undefined ::1 undefined","timestamp":"10:06:28 AM"}
{"level":"error","message":"Error: Can't set headers after they are sent.\n    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)\n    at ServerResponse.header (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\response.js:719:10)\n    at ServerResponse.send (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\response.js:164:12)\n    at done (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\response.js:956:10)\n    at Object.exports.renderFile (D:\\Suyash Files\\SourceCode\\node_modules\\jade\\lib\\index.js:374:12)\n    at View.exports.__express [as engine] (D:\\Suyash Files\\SourceCode\\node_modules\\jade\\lib\\index.js:417:11)\n    at View.render (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\view.js:126:8)\n    at tryRender (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\application.js:639:10)\n    at EventEmitter.render (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\application.js:591:3)\n    at ServerResponse.render (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\response.js:960:7)\n    at D:\\Suyash Files\\SourceCode\\app.js:288:9\n    at Layer.handle_error (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\router\\layer.js:71:5)\n    at trim_prefix (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\router\\index.js:310:13)\n    at D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\router\\index.js:280:7\n    at Function.process_params (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\router\\index.js:330:12)\n    at next (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\router\\index.js:271:10)\n    at Layer.handle_error (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\router\\layer.js:67:12)\n    at trim_prefix (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\router\\index.js:310:13)\n    at D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\router\\index.js:280:7\n    at Function.process_params (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\router\\index.js:330:12)\n    at next (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\router\\index.js:271:10)\n    at Layer.handle_error (D:\\Suyash Files\\SourceCode\\node_modules\\express\\lib\\router\\layer.js:67:12)","timestamp":"10:06:32 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:07:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:07:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:08:08 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:08:08 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:08:32 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:08:32 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:09:01 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:09:01 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:09:32 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:09:32 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:10:02 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:10:02 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:11:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:11:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:12:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:12:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:13:05 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:13:05 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:13:32 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:13:32 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:14:02 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:14:02 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:15:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:15:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:16:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:16:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:17:18 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:17:18 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:17:32 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:17:32 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:18:02 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:18:02 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:19:14 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:19:14 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:19:32 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:19:32 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:20:02 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:20:02 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:21:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:21:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:22:00 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:22:00 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:22:32 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:22:32 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:23:02 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:23:02 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:23:47 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:23:47 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:24:11 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:24:11 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:24:11 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:24:11 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:24:11 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:24:11 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:24:11 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:24:11 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:24:11 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:24:11 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:24:11 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:24:11 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:24:11 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:24:11 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:24:11 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:24:11 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:24:11 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:24:11 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:24:11 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:24:11 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:24:11 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:24:11 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:24:11 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:24:11 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:24:11 AM"}
{"level":"error","message":"(node:9092) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): MongoError: E11000 duplicate key error collection: lm-api-qa.sync_contacts index: Sync_Contact_Id_1 dup key: { : null }","timestamp":"10:24:11 AM"}
{"level":"error","message":"(node:9092) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 2): MongoError: Index: { v: 2, unique: true, key: { Doc_Log_Id: 1 }, name: \"Doc_Log_Id_1\", ns: \"lm-api-qa.posp_doc_logs\", background: true } already exists with different options: { v: 2, key: { Doc_Log_Id: 1 }, name: \"Doc_Log_Id\", ns: \"lm-api-qa.posp_doc_logs\" }","timestamp":"10:24:11 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:24:11 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:24:11 AM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"10:24:11 AM"}
{"level":"error","message":"(node:9092) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 3): MongoError: Index with name: Posp_Id_1 already exists with different options","timestamp":"10:24:11 AM"}
{"level":"error","message":"(node:9092) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 4): MongoError: E11000 duplicate key error collection: lm-api-qa.credentials index: Credential_Id_1 dup key: { : null }","timestamp":"10:24:11 AM"}
{"level":"error","message":"(node:9092) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 5): MongoError: E11000 duplicate key error collection: lm-api-qa.offline_transactions index: Transaction_Id_1 dup key: { : null }","timestamp":"10:24:11 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:24:32 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:24:32 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:25:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:25:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:25:32 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:25:32 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:26:02 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:26:02 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:27:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:27:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:28:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:28:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:29:17 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:29:17 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:29:32 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:29:32 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:30:02 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:30:02 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:30:36 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:30:36 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:31:02 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:31:02 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:31:32 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:31:32 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:32:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:32:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:33:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:33:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:34:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:34:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:35:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:35:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:36:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:36:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:37:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:37:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:38:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:38:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:39:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:39:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:39:41 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:39:41 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:40:02 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:40:02 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:40:32 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:40:32 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:41:23 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:41:23 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:41:32 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:41:32 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:42:02 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:42:02 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:43:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:43:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:44:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:44:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:45:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:45:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:46:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:46:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:47:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:47:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:48:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:48:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:49:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:49:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:50:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:50:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:51:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:51:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:52:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:52:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:53:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:53:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:54:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:54:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:55:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:55:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:56:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:56:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:57:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:57:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:58:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:58:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:59:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"10:59:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:00:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:00:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:01:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:01:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:02:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:02:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:03:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:03:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:04:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:04:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:05:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:05:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:06:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:06:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:07:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:07:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:08:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:08:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:09:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:09:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:10:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:10:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:11:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:11:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:12:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:12:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:13:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:13:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:13:52 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:13:52 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:14:02 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:14:02 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:14:32 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:14:32 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:15:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:15:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:16:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:16:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:17:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:17:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:18:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:18:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:19:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:19:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:20:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:20:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:21:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:21:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:22:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:22:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:23:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:23:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:24:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:24:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:25:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:25:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:26:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:26:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:27:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:27:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:28:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:28:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:29:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:29:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:30:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:30:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:31:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:31:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:32:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:32:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:33:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:33:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:34:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:34:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:35:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:35:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:36:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:36:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:37:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:37:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:38:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:38:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:39:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:39:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:40:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:40:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:41:09 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:41:09 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:41:32 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:41:32 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:42:02 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:42:02 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:43:09 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:43:09 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:43:32 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:43:32 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:44:02 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:44:02 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:45:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:45:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:46:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:46:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:47:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:47:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:48:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:48:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:49:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:49:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:50:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:50:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:51:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:51:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:52:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:52:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:53:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:53:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:54:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:54:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:55:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:55:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:56:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:56:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:57:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:57:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:58:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:58:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:59:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"11:59:26 AM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:00:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:00:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:01:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:01:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:02:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:02:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:03:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:03:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:04:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:04:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:05:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:05:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:06:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:06:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:07:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:07:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:08:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:08:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:09:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:09:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:10:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:10:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:11:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:11:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:12:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:12:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:13:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:13:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:14:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:14:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:15:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:15:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:16:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:16:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:17:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:17:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:18:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:18:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:19:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:19:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:20:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:20:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:21:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:21:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:22:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:22:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:23:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:23:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:24:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:24:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:25:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:25:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:26:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:26:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:27:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:27:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:28:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:28:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:29:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:29:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:30:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:30:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:31:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:31:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:32:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:32:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:33:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:33:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:34:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:34:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:35:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:35:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:36:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:36:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:37:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:37:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:38:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:38:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:39:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:39:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:40:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:40:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:41:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:41:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:42:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:42:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:43:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:43:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:44:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:44:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:45:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:45:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:46:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:46:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:47:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:47:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:48:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:48:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:49:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:49:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:50:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:50:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:51:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:51:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:52:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:52:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:53:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:53:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:54:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:54:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:55:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:55:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:56:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:56:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:57:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:57:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:58:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:58:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:59:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"12:59:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:00:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:00:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:01:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:01:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:02:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:02:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:03:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:03:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:04:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:04:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:05:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:05:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:06:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:06:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:07:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:07:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:08:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:08:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:09:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:09:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:10:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:10:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:11:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:11:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:12:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:12:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:13:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:13:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:14:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:14:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:15:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:15:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:16:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:16:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:17:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:17:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:18:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:18:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:19:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:19:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:20:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:20:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:21:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:21:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:22:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:22:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:23:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:23:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:24:12 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:24:12 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:24:31 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:24:31 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:25:01 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:25:01 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:25:31 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:25:31 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:26:02 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:26:02 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:26:32 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:26:32 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:27:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:27:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:28:23 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:28:23 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:28:32 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:28:32 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:29:02 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:29:02 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:30:36 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:30:36 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:31:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:31:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:32:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:32:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:33:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:33:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:34:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:34:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:35:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:35:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:36:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:36:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:37:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:37:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:38:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:38:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:39:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:39:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:40:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:40:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:41:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:41:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:42:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:42:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:43:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:43:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:44:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:44:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:45:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:45:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:46:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:46:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:47:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:47:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:48:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:48:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:49:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:49:26 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:50:01 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:4200/ ::1 string","timestamp":"1:50:01 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:7000/ ::1 string","timestamp":"1:51:46 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:7000/ ::1 string","timestamp":"1:51:46 PM"}
{"level":"error","message":"LOG REFERER YTD undefined ::ffff:127.0.0.1 undefined","timestamp":"1:51:50 PM"}
{"level":"error","message":"Travel_Premium_Initiate { city_id: 677,\n  client_name: 'PolicyBoss',\n  client_id: 2,\n  client_key: 'CLIENT-CNTP6NYE-CU9N-DUZW-CSPI-SH1IS4DOVHB9',\n  secret_key: 'SECRET-HZ07QRWY-JIBT-XRMQ-ZP95-J0RWP3DYRACW',\n  geo_long: 72.9106087,\n  geo_lat: 19.0997204,\n  ss_id: 0,\n  fba_id: 0,\n  sub_fba_id: 0,\n  agent_source: '0',\n  crn: NaN,\n  member_count: 1,\n  adult_count: 1,\n  child_count: 0,\n  member_6_relation: '',\n  member_6_birth_date: '',\n  member_6_gender: '',\n  member_5_relation: '',\n  member_5_birth_date: '',\n  member_5_gender: '',\n  member_4_relation: '',\n  member_4_birth_date: '',\n  member_4_gender: '',\n  member_3_relation: '',\n  member_3_birth_date: '',\n  member_3_gender: '',\n  member_2_relation: '',\n  member_2_birth_date: '',\n  member_2_gender: '',\n  member_1_relation: '',\n  member_1_birth_date: '2001-08-06',\n  member_1_gender: 'M',\n  mobile: '9999999999',\n  email: 'policybosstesting@gmail.com',\n  contact_name: 'NO NAME',\n  travel_insurance_si: '0',\n  travelling_to_area: 'WorldWide',\n  travel_start_date: '2024-08-07',\n  travel_end_date: '2024-08-10',\n  travel_insurance_type: 'individual',\n  trip_type: 'SINGLE',\n  execution_async: 'yes',\n  method_type: 'Premium',\n  product_id: 4,\n  insurer_selected: '',\n  ui_source: 'UI22',\n  app_version: 'PolicyBoss.com',\n  visitor_id: NaN,\n  ip_address: '' }","timestamp":"1:51:50 PM"}
{"level":"error","message":"(node:9092) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 6): MongoError: E11000 duplicate key error collection: lm-api-qa.identitycounters index: field_1_groupingField_1_model_1 dup key: { : \"Email_Event_Id\", : null, : \"Email_Event\" }","timestamp":"1:51:50 PM"}
{"level":"error","message":"LOG REFERER YTD undefined ::ffff:127.0.0.1 undefined","timestamp":"1:51:50 PM"}
{"level":"error","message":"DBG Isactive 1 Product_class Travel Insurer_Product_Class StarTravel","timestamp":"1:52:09 PM"}
{"level":"error","message":"DBG Isactive 1 Product_class Travel Insurer_Product_Class HDFCErgoTravel","timestamp":"1:52:09 PM"}
{"level":"error","message":"DBG Isactive 1 Product_class Travel Insurer_Product_Class TataAIGTravel","timestamp":"2:02:29 PM"}
{"level":"error","message":"DBG Isactive 1 Product_class Travel Insurer_Product_Class IciciLombardTravel","timestamp":"2:02:29 PM"}
{"level":"error","message":"LOG REFERER YTD undefined ::ffff:127.0.0.1 undefined","timestamp":"2:02:29 PM"}
{"level":"error","message":"LOG REFERER YTD undefined ::ffff:127.0.0.1 undefined","timestamp":"2:02:29 PM"}
{"level":"error","message":"LOG REFERER YTD undefined ::ffff:127.0.0.1 undefined","timestamp":"2:02:29 PM"}
{"level":"error","message":"LOG REFERER YTD undefined ::ffff:127.0.0.1 undefined","timestamp":"2:02:29 PM"}
{"level":"error","message":"Niva Health Renew LINE1","timestamp":"2:02:29 PM"}
{"level":"error","message":"Niva Health Renew LINE1","timestamp":"2:02:29 PM"}
{"level":"error","message":"Niva Health Renew LINE1","timestamp":"2:02:29 PM"}
{"level":"error","message":"Niva Health Renew LINE1","timestamp":"2:02:29 PM"}
{"level":"error","message":"Niva Health Renew LINE5","timestamp":"2:02:30 PM"}
{"level":"error","message":"Health Renewal Jyoti  undefined","timestamp":"2:02:30 PM"}
{"level":"error","message":"Health Renewal Jyoti plan_list [ { Plan_Id: 441,\n    Plan_Name: 'Plan B1',\n    Plan_Code: '1',\n    Is_Active: true },\n  { Plan_Id: 442,\n    Plan_Name: 'Plan C1',\n    Plan_Code: '2',\n    Is_Active: true },\n  { Plan_Id: 445,\n    Plan_Name: 'Plan A1',\n    Plan_Code: '5',\n    Is_Active: true } ]","timestamp":"2:02:30 PM"}
{"level":"error","message":"Dhananjay Health Renewal docLog  { Service_Log_Id: '',\n  Service_Log_Unique_Id: 'ARN-CHJ9VG0X-VBDB-BLJT-WUDC-2LAEYV63ZW1L',\n  Request_Id: 699538,\n  User_Data_Id: 431702,\n  Request_Unique_Id: 'SRN-36PGTCCL-TMBI-C6CC-NCJU-AZUKPNQ9UITV',\n  PB_CRN: 1158172,\n  Client_Id: 2,\n  LM_Custom_Request: \n   { Plan_Code: '1',\n     Plan_Id: 441,\n     Plan_Name: 'Plan B1',\n     aadhar: '',\n     appointee_age: 0,\n     appointee_birth_date: '2024-08-06',\n     appointee_first_name: '',\n     appointee_last_name: '',\n     appointee_middle_name: '',\n     appointee_name: '',\n     appointee_relation: '',\n     birth_date: '1992-01-01',\n     city_id: 677,\n     communication_address_1: '',\n     communication_address_2: '',\n     communication_address_3: '',\n     communication_city: '',\n     communication_city_code: '',\n     communication_district_code: '',\n     communication_locality_code: '',\n     communication_pincode: '',\n     communication_state: '',\n     communication_state_code: '',\n     company_name: '',\n     current_date: '2024-08-06',\n     current_time: '13:08:40',\n     dbmaster_pb_city_id: 677,\n     dbmaster_pb_city_name: 'MUMBAI',\n     dbmaster_pb_pincode: 400001,\n     dbmaster_pb_state_id: 21,\n     dbmaster_pb_state_name: 'MAHARASHTRA',\n     email: 'policybosstesting@gmail.com',\n     final_premium: '',\n     first_name: 'NO',\n     gender: '',\n     gst_no: '',\n     gst_state: '',\n     insured_age: 32,\n     insurer_id: '',\n     insurer_integration_agent_code: 'Direct',\n     insurer_integration_location_code: '9202',\n     insurer_integration_pdf_url: '',\n     insurer_integration_service_password: 'c68ba59148d7012f352e7efdadffd06f',\n     insurer_integration_service_user: '53ab886c7c7e88d8e2f7a12872888b32',\n     insurer_vehicle_id: undefined,\n     is_posp: '',\n     is_reg_addr_comm_addr_same: '',\n     kyc_no: '',\n     kyc_ref_no: '',\n     last_name: 'NAME',\n     marital: '',\n     member_1_birth_date: '2001-08-06',\n     member_1_first_name: 'NO',\n     member_1_gender: 'M',\n     member_1_last_name: 'NAME',\n     member_1_middle_name: '',\n     member_1_occupation: '',\n     member_1_passport: '',\n     member_1_ped: '',\n     member_1_relation: '',\n     member_1_salutation: '',\n     member_array_birth_date: '2024-08-06',\n     member_array_first_name: '',\n     member_array_gender: '',\n     member_array_last_name: '',\n     member_array_middle_name: '',\n     member_array_occupation: '',\n     member_array_passport: '',\n     member_array_ped: '',\n     member_array_relation: '',\n     member_array_salutation: '',\n     method_type: 'Premium',\n     middle_name: '',\n     mobile: '9999999999',\n     net_premium: '',\n     nominee_address: '',\n     nominee_age: 0,\n     nominee_birth_date: '2024-08-06',\n     nominee_city_name: '',\n     nominee_first_name: '',\n     nominee_last_name: '',\n     nominee_middle_name: '',\n     nominee_name: '',\n     nominee_pincode: '',\n     nominee_relation: '',\n     occupation: '',\n     pan: '',\n     permanent_address_1: '',\n     permanent_address_2: '',\n     permanent_address_3: '',\n     permanent_city: '',\n     permanent_city_code: '',\n     permanent_district_code: '',\n     permanent_locality_code: '',\n     permanent_pincode: '',\n     permanent_state: '',\n     permanent_state_code: '',\n     pg_reference_number_1: '',\n     pg_reference_number_2: '',\n     policy_end_date: '2024-08-10',\n     policy_number: '',\n     policy_start_date: '2024-08-07',\n     policy_tenure: '',\n     product_id: 4,\n     proposal_create_flag: '',\n     recon_reference_number: '',\n     salutation: '',\n     salutation_1: '',\n     tax: '',\n     travel_insurance_si: '0',\n     travel_insurance_type: 'individual',\n     visiting_countries: '',\n     member_1_inc: 0,\n     member_1_age: 23,\n     travel_days: 4 },\n  Insurer_Request: '{\\n    \"selected_plan\": \"Gold\",\\n    \"selected_product\": \"Travel Guard\",\\n    \"application_date\": \"08/03/2024\",\\n    \"policy_type\": \"Without Sublimit\",\\n    \"departure_date\": \"08/04/2024\",\\n    \"return_date_single\": \"08/07/2024\",\\n    \"member_count\": \"1\",\\n        \\n    \"dob_1\": \"08/03/2001\",\\n    \"triptype\": \"Single Trip\",\\n    \"selected_zone\": \"Worldwide Including USA/Canada\",\\n    \"product_id\": \"M100000000003\",\\n    \"customer_pincode\": \"400086\",\\n    \"tripdays\": \"\",\\n    \"email\": \"policybosstesting@gmail.com\",\\n    \"mobile_no\": \"9999999999\",\\n    \"office_location\": \"DELHI\",\\n    \"visa_type\": \"Non Immigrant\",\\n    \"is_tata_employee\": \"\",\\n    \"employee_id\": \"\",\\n    \"tata_emp_email\": \"\"\\n}',\n  Insurer_Response: '',\n  Insurer_Response_Core: '',\n  Premium_Breakup: null,\n  LM_Response: '',\n  Insurer_Transaction_Identifier: '',\n  Health_Renewal_Proposal_Request_Core: null,\n  Status: 'pending',\n  Error_Code: '',\n  Is_Active: 1,\n  Created_On: 2024-08-06T08:32:30.379Z,\n  Product_Id: 4,\n  Insurer_Id: 26,\n  Plan_Id: 441,\n  Plan_Name: 'Plan B1',\n  Plan_Code: '1',\n  Allow_Renew: undefined,\n  Addon_Mode: 'ALACARTE',\n  Method_Type: 'Premium',\n  Call_Execution_Time: 0 }","timestamp":"2:02:30 PM"}
{"level":"error","message":"Dhananjay Health Renewal Before save_log  true","timestamp":"2:02:30 PM"}
{"level":"error","message":"Plan_execute_loop 1158172 26 ARN-CHJ9VG0X-VBDB-BLJT-WUDC-2LAEYV63ZW1L 441 Plan B1 441 Plan B1","timestamp":"2:02:30 PM"}
{"level":"error","message":"Dhananjay Health Renewal After save_log  true","timestamp":"2:02:30 PM"}
{"level":"error","message":"Dhananjay Health Renewal docLog  { Service_Log_Id: '',\n  Service_Log_Unique_Id: 'ARN-DTVJITN3-TVRD-3ZIL-IUBL-RQRGBBUO8RBJ',\n  Request_Id: 699538,\n  User_Data_Id: 431702,\n  Request_Unique_Id: 'SRN-36PGTCCL-TMBI-C6CC-NCJU-AZUKPNQ9UITV',\n  PB_CRN: 1158172,\n  Client_Id: 2,\n  LM_Custom_Request: \n   { Plan_Code: '2',\n     Plan_Id: 442,\n     Plan_Name: 'Plan C1',\n     aadhar: '',\n     appointee_age: 0,\n     appointee_birth_date: '2024-08-06',\n     appointee_first_name: '',\n     appointee_last_name: '',\n     appointee_middle_name: '',\n     appointee_name: '',\n     appointee_relation: '',\n     birth_date: '1992-01-01',\n     city_id: 677,\n     communication_address_1: '',\n     communication_address_2: '',\n     communication_address_3: '',\n     communication_city: '',\n     communication_city_code: '',\n     communication_district_code: '',\n     communication_locality_code: '',\n     communication_pincode: '',\n     communication_state: '',\n     communication_state_code: '',\n     company_name: '',\n     current_date: '2024-08-06',\n     current_time: '13:08:40',\n     dbmaster_pb_city_id: 677,\n     dbmaster_pb_city_name: 'MUMBAI',\n     dbmaster_pb_pincode: 400001,\n     dbmaster_pb_state_id: 21,\n     dbmaster_pb_state_name: 'MAHARASHTRA',\n     email: 'policybosstesting@gmail.com',\n     final_premium: '',\n     first_name: 'NO',\n     gender: '',\n     gst_no: '',\n     gst_state: '',\n     insured_age: 32,\n     insurer_id: '',\n     insurer_integration_agent_code: 'Direct',\n     insurer_integration_location_code: '9202',\n     insurer_integration_pdf_url: '',\n     insurer_integration_service_password: 'c68ba59148d7012f352e7efdadffd06f',\n     insurer_integration_service_user: '53ab886c7c7e88d8e2f7a12872888b32',\n     insurer_vehicle_id: undefined,\n     is_posp: '',\n     is_reg_addr_comm_addr_same: '',\n     kyc_no: '',\n     kyc_ref_no: '',\n     last_name: 'NAME',\n     marital: '',\n     member_1_age: 23,\n     member_1_birth_date: '2001-08-06',\n     member_1_first_name: 'NO',\n     member_1_gender: 'M',\n     member_1_inc: 0,\n     member_1_last_name: 'NAME',\n     member_1_middle_name: '',\n     member_1_occupation: '',\n     member_1_passport: '',\n     member_1_ped: '',\n     member_1_relation: '',\n     member_1_salutation: '',\n     member_array_birth_date: '2024-08-06',\n     member_array_first_name: '',\n     member_array_gender: '',\n     member_array_last_name: '',\n     member_array_middle_name: '',\n     member_array_occupation: '',\n     member_array_passport: '',\n     member_array_ped: '',\n     member_array_relation: '',\n     member_array_salutation: '',\n     method_type: 'Premium',\n     middle_name: '',\n     mobile: '9999999999',\n     net_premium: '',\n     nominee_address: '',\n     nominee_age: 0,\n     nominee_birth_date: '2024-08-06',\n     nominee_city_name: '',\n     nominee_first_name: '',\n     nominee_last_name: '',\n     nominee_middle_name: '',\n     nominee_name: '',\n     nominee_pincode: '',\n     nominee_relation: '',\n     occupation: '',\n     pan: '',\n     permanent_address_1: '',\n     permanent_address_2: '',\n     permanent_address_3: '',\n     permanent_city: '',\n     permanent_city_code: '',\n     permanent_district_code: '',\n     permanent_locality_code: '',\n     permanent_pincode: '',\n     permanent_state: '',\n     permanent_state_code: '',\n     pg_reference_number_1: '',\n     pg_reference_number_2: '',\n     policy_end_date: '2024-08-10',\n     policy_number: '',\n     policy_start_date: '2024-08-07',\n     policy_tenure: '',\n     product_id: 4,\n     proposal_create_flag: '',\n     recon_reference_number: '',\n     salutation: '',\n     salutation_1: '',\n     tax: '',\n     travel_days: 4,\n     travel_insurance_si: '0',\n     travel_insurance_type: 'individual',\n     visiting_countries: '' },\n  Insurer_Request: '{\\n    \"selected_plan\": \"Gold\",\\n    \"selected_product\": \"Travel Guard\",\\n    \"application_date\": \"08/03/2024\",\\n    \"policy_type\": \"Without Sublimit\",\\n    \"departure_date\": \"08/04/2024\",\\n    \"return_date_single\": \"08/07/2024\",\\n    \"member_count\": \"1\",\\n        \\n    \"dob_1\": \"08/03/2001\",\\n    \"triptype\": \"Single Trip\",\\n    \"selected_zone\": \"Worldwide Including USA/Canada\",\\n    \"product_id\": \"M100000000003\",\\n    \"customer_pincode\": \"400086\",\\n    \"tripdays\": \"\",\\n    \"email\": \"policybosstesting@gmail.com\",\\n    \"mobile_no\": \"9999999999\",\\n    \"office_location\": \"DELHI\",\\n    \"visa_type\": \"Non Immigrant\",\\n    \"is_tata_employee\": \"\",\\n    \"employee_id\": \"\",\\n    \"tata_emp_email\": \"\"\\n}',\n  Insurer_Response: '',\n  Insurer_Response_Core: '',\n  Premium_Breakup: null,\n  LM_Response: '',\n  Insurer_Transaction_Identifier: '',\n  Health_Renewal_Proposal_Request_Core: null,\n  Status: 'pending',\n  Error_Code: '',\n  Is_Active: 1,\n  Created_On: 2024-08-06T08:32:30.480Z,\n  Product_Id: 4,\n  Insurer_Id: 26,\n  Plan_Id: 442,\n  Plan_Name: 'Plan C1',\n  Plan_Code: '2',\n  Allow_Renew: undefined,\n  Addon_Mode: 'ALACARTE',\n  Method_Type: 'Premium',\n  Call_Execution_Time: 0 }","timestamp":"2:02:30 PM"}
{"level":"error","message":"Dhananjay Health Renewal Before save_log  true","timestamp":"2:02:30 PM"}
{"level":"error","message":"Plan_execute_loop 1158172 26 ARN-DTVJITN3-TVRD-3ZIL-IUBL-RQRGBBUO8RBJ 442 Plan C1 442 Plan C1","timestamp":"2:02:30 PM"}
{"level":"error","message":"Dhananjay Health Renewal After save_log  true","timestamp":"2:02:30 PM"}
{"level":"error","message":"Dhananjay Health Renewal docLog  { Service_Log_Id: '',\n  Service_Log_Unique_Id: 'ARN-K6CD9ZI1-MNLK-EUTK-KMNF-NYIRJIUQSBWR',\n  Request_Id: 699538,\n  User_Data_Id: 431702,\n  Request_Unique_Id: 'SRN-36PGTCCL-TMBI-C6CC-NCJU-AZUKPNQ9UITV',\n  PB_CRN: 1158172,\n  Client_Id: 2,\n  LM_Custom_Request: \n   { Plan_Code: '5',\n     Plan_Id: 445,\n     Plan_Name: 'Plan A1',\n     aadhar: '',\n     appointee_age: 0,\n     appointee_birth_date: '2024-08-06',\n     appointee_first_name: '',\n     appointee_last_name: '',\n     appointee_middle_name: '',\n     appointee_name: '',\n     appointee_relation: '',\n     birth_date: '1992-01-01',\n     city_id: 677,\n     communication_address_1: '',\n     communication_address_2: '',\n     communication_address_3: '',\n     communication_city: '',\n     communication_city_code: '',\n     communication_district_code: '',\n     communication_locality_code: '',\n     communication_pincode: '',\n     communication_state: '',\n     communication_state_code: '',\n     company_name: '',\n     current_date: '2024-08-06',\n     current_time: '13:08:40',\n     dbmaster_pb_city_id: 677,\n     dbmaster_pb_city_name: 'MUMBAI',\n     dbmaster_pb_pincode: 400001,\n     dbmaster_pb_state_id: 21,\n     dbmaster_pb_state_name: 'MAHARASHTRA',\n     email: 'policybosstesting@gmail.com',\n     final_premium: '',\n     first_name: 'NO',\n     gender: '',\n     gst_no: '',\n     gst_state: '',\n     insured_age: 32,\n     insurer_id: '',\n     insurer_integration_agent_code: 'Direct',\n     insurer_integration_location_code: '9202',\n     insurer_integration_pdf_url: '',\n     insurer_integration_service_password: 'c68ba59148d7012f352e7efdadffd06f',\n     insurer_integration_service_user: '53ab886c7c7e88d8e2f7a12872888b32',\n     insurer_vehicle_id: undefined,\n     is_posp: '',\n     is_reg_addr_comm_addr_same: '',\n     kyc_no: '',\n     kyc_ref_no: '',\n     last_name: 'NAME',\n     marital: '',\n     member_1_age: 23,\n     member_1_birth_date: '2001-08-06',\n     member_1_first_name: 'NO',\n     member_1_gender: 'M',\n     member_1_inc: 0,\n     member_1_last_name: 'NAME',\n     member_1_middle_name: '',\n     member_1_occupation: '',\n     member_1_passport: '',\n     member_1_ped: '',\n     member_1_relation: '',\n     member_1_salutation: '',\n     member_array_birth_date: '2024-08-06',\n     member_array_first_name: '',\n     member_array_gender: '',\n     member_array_last_name: '',\n     member_array_middle_name: '',\n     member_array_occupation: '',\n     member_array_passport: '',\n     member_array_ped: '',\n     member_array_relation: '',\n     member_array_salutation: '',\n     method_type: 'Premium',\n     middle_name: '',\n     mobile: '9999999999',\n     net_premium: '',\n     nominee_address: '',\n     nominee_age: 0,\n     nominee_birth_date: '2024-08-06',\n     nominee_city_name: '',\n     nominee_first_name: '',\n     nominee_last_name: '',\n     nominee_middle_name: '',\n     nominee_name: '',\n     nominee_pincode: '',\n     nominee_relation: '',\n     occupation: '',\n     pan: '',\n     permanent_address_1: '',\n     permanent_address_2: '',\n     permanent_address_3: '',\n     permanent_city: '',\n     permanent_city_code: '',\n     permanent_district_code: '',\n     permanent_locality_code: '',\n     permanent_pincode: '',\n     permanent_state: '',\n     permanent_state_code: '',\n     pg_reference_number_1: '',\n     pg_reference_number_2: '',\n     policy_end_date: '2024-08-10',\n     policy_number: '',\n     policy_start_date: '2024-08-07',\n     policy_tenure: '',\n     product_id: 4,\n     proposal_create_flag: '',\n     recon_reference_number: '',\n     salutation: '',\n     salutation_1: '',\n     tax: '',\n     travel_days: 4,\n     travel_insurance_si: '0',\n     travel_insurance_type: 'individual',\n     visiting_countries: '' },\n  Insurer_Request: '{\\n    \"selected_plan\": \"Gold\",\\n    \"selected_product\": \"Travel Guard\",\\n    \"application_date\": \"08/03/2024\",\\n    \"policy_type\": \"Without Sublimit\",\\n    \"departure_date\": \"08/04/2024\",\\n    \"return_date_single\": \"08/07/2024\",\\n    \"member_count\": \"1\",\\n        \\n    \"dob_1\": \"08/03/2001\",\\n    \"triptype\": \"Single Trip\",\\n    \"selected_zone\": \"Worldwide Including USA/Canada\",\\n    \"product_id\": \"M100000000003\",\\n    \"customer_pincode\": \"400086\",\\n    \"tripdays\": \"\",\\n    \"email\": \"policybosstesting@gmail.com\",\\n    \"mobile_no\": \"9999999999\",\\n    \"office_location\": \"DELHI\",\\n    \"visa_type\": \"Non Immigrant\",\\n    \"is_tata_employee\": \"\",\\n    \"employee_id\": \"\",\\n    \"tata_emp_email\": \"\"\\n}',\n  Insurer_Response: '',\n  Insurer_Response_Core: '',\n  Premium_Breakup: null,\n  LM_Response: '',\n  Insurer_Transaction_Identifier: '',\n  Health_Renewal_Proposal_Request_Core: null,\n  Status: 'pending',\n  Error_Code: '',\n  Is_Active: 1,\n  Created_On: 2024-08-06T08:32:30.537Z,\n  Product_Id: 4,\n  Insurer_Id: 26,\n  Plan_Id: 445,\n  Plan_Name: 'Plan A1',\n  Plan_Code: '5',\n  Allow_Renew: undefined,\n  Addon_Mode: 'ALACARTE',\n  Method_Type: 'Premium',\n  Call_Execution_Time: 0 }","timestamp":"2:02:30 PM"}
{"level":"error","message":"Dhananjay Health Renewal Before save_log  true","timestamp":"2:02:30 PM"}
{"level":"error","message":"Plan_execute_loop 1158172 26 ARN-K6CD9ZI1-MNLK-EUTK-KMNF-NYIRJIUQSBWR 445 Plan A1 445 Plan A1","timestamp":"2:02:30 PM"}
{"level":"error","message":"Dhananjay Health Renewal After save_log  true","timestamp":"2:02:30 PM"}
{"level":"error","message":"LOG REFERER YTD undefined ::ffff:127.0.0.1 undefined","timestamp":"2:02:30 PM"}
{"level":"error","message":"Niva Health Renew LINE5","timestamp":"2:02:30 PM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"4:51:20 PM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"4:51:20 PM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"4:51:20 PM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"4:51:20 PM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"4:51:20 PM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"4:51:20 PM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"4:51:20 PM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"4:51:20 PM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"4:51:20 PM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"4:51:20 PM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"4:51:20 PM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"4:51:20 PM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"4:51:20 PM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"4:51:20 PM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"4:51:20 PM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"4:51:20 PM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"4:51:20 PM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"4:51:20 PM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"4:51:20 PM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"4:51:20 PM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"4:51:20 PM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"4:51:20 PM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"4:51:20 PM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"4:51:20 PM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"4:51:20 PM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"4:51:20 PM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"4:51:20 PM"}
{"level":"warn","message":"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.","timestamp":"4:51:20 PM"}
{"level":"error","message":"(node:13972) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): MongoError: E11000 duplicate key error collection: lm-api-qa.sync_contacts index: Sync_Contact_Id_1 dup key: { : null }","timestamp":"4:51:21 PM"}
{"level":"error","message":"(node:13972) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 2): MongoError: Index with name: Posp_Id_1 already exists with different options","timestamp":"4:51:21 PM"}
{"level":"error","message":"(node:13972) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 3): MongoError: Index: { v: 2, unique: true, key: { Doc_Log_Id: 1 }, name: \"Doc_Log_Id_1\", ns: \"lm-api-qa.posp_doc_logs\", background: true } already exists with different options: { v: 2, key: { Doc_Log_Id: 1 }, name: \"Doc_Log_Id\", ns: \"lm-api-qa.posp_doc_logs\" }","timestamp":"4:51:21 PM"}
{"level":"error","message":"(node:13972) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 4): MongoError: E11000 duplicate key error collection: lm-api-qa.credentials index: Credential_Id_1 dup key: { : null }","timestamp":"4:51:21 PM"}
{"level":"error","message":"(node:13972) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 5): MongoError: E11000 duplicate key error collection: lm-api-qa.offline_transactions index: Transaction_Id_1 dup key: { : null }","timestamp":"4:51:21 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:7000/ ::1 string","timestamp":"4:52:04 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:7000/ ::1 string","timestamp":"4:52:04 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:7000/ ::1 string","timestamp":"4:52:04 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:7000/ ::1 string","timestamp":"4:52:04 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:7000/ ::1 string","timestamp":"4:56:45 PM"}
{"level":"error","message":"LOG REFERER YTD http://localhost:7000/ ::1 string","timestamp":"5:29:00 PM"}
